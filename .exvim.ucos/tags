!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACK	./bsp/xmodem.c	56;"	d	file:
ARMGNU	./makefile	/^ARMGNU ?= arm-none-eabi$/;"	m
ARM_SYS_MODE	./port/OS_Cpu_c.c	11;"	d	file:
AUX_ENABLES	./h/regs.h	11;"	d
AUX_MU_BAUD_REG	./h/regs.h	22;"	d
AUX_MU_CNTL_REG	./h/regs.h	20;"	d
AUX_MU_IER_REG	./h/regs.h	13;"	d
AUX_MU_IIR_REG	./h/regs.h	14;"	d
AUX_MU_IO_REG	./h/regs.h	12;"	d
AUX_MU_LCR_REG	./h/regs.h	15;"	d
AUX_MU_LSR_REG	./h/regs.h	17;"	d
AUX_MU_MCR_REG	./h/regs.h	16;"	d
AUX_MU_MSR_REG	./h/regs.h	18;"	d
AUX_MU_SCRATCH	./h/regs.h	19;"	d
AUX_MU_STAT_REG	./h/regs.h	21;"	d
AUX_UART_INTR_NUM	./h/uart.h	13;"	d
BASE_INTC	./h/regs.h	25;"	d
BCM2835_INTC_TOTAL_IRQ	./h/interrupts.h	5;"	d
BCM2835_IRQ_ID_AUX	./h/interrupts.h	7;"	d
BCM2835_IRQ_ID_DOORBELL_0	./h/interrupts.h	24;"	d
BCM2835_IRQ_ID_DOORBELL_1	./h/interrupts.h	25;"	d
BCM2835_IRQ_ID_GPIO_0	./h/interrupts.h	12;"	d
BCM2835_IRQ_ID_GPIO_1	./h/interrupts.h	13;"	d
BCM2835_IRQ_ID_GPIO_2	./h/interrupts.h	14;"	d
BCM2835_IRQ_ID_GPIO_3	./h/interrupts.h	15;"	d
BCM2835_IRQ_ID_GPU0_HALTED	./h/interrupts.h	26;"	d
BCM2835_IRQ_ID_I2C	./h/interrupts.h	16;"	d
BCM2835_IRQ_ID_MAILBOX_0	./h/interrupts.h	23;"	d
BCM2835_IRQ_ID_PCM	./h/interrupts.h	18;"	d
BCM2835_IRQ_ID_PWA0	./h/interrupts.h	9;"	d
BCM2835_IRQ_ID_PWA1	./h/interrupts.h	10;"	d
BCM2835_IRQ_ID_SMI	./h/interrupts.h	11;"	d
BCM2835_IRQ_ID_SPI	./h/interrupts.h	17;"	d
BCM2835_IRQ_ID_SPI_SLAVE	./h/interrupts.h	8;"	d
BCM2835_IRQ_ID_TIMER_0	./h/interrupts.h	22;"	d
BCM2835_IRQ_ID_UART	./h/interrupts.h	19;"	d
BOOLEAN	./h/ucos/OS_CPU.H	/^typedef unsigned char  BOOLEAN;                 $/;"	t
BURST_LENGTH	./h/dma.h	24;"	d
BYTE	./h/ucos/OS_CPU.H	26;"	d
CAN	./bsp/xmodem.c	58;"	d	file:
CLI	./h/regs.h	/^	unsigned long CLI;$/;"	m	struct:_BCM2835_TIMER_REGS	access:public
CNT	./h/regs.h	/^	unsigned long CNT;$/;"	m	struct:_BCM2835_TIMER_REGS	access:public
COPS	./makefile	/^COPS = -Wall -nostdlib -nostartfiles -ffreestanding -mcpu=arm1176jzf-s -I $(INCLUDEPATH) -I $(INCLUDEPATH_UCOS)$/;"	m
CRC16CCITT_INIT	./bsp/crc.c	17;"	d	file:
CRC16CCITT_POLY	./bsp/crc.c	18;"	d	file:
CRC8_INIT	./bsp/crc.c	14;"	d	file:
CRC8_POLY	./bsp/crc.c	15;"	d	file:
CTL	./h/regs.h	/^	unsigned long CTL;$/;"	m	struct:_BCM2835_TIMER_REGS	access:public
CTRLZ	./bsp/xmodem.c	59;"	d	file:
DEST_DREQ	./h/dma.h	30;"	d
DEST_IGNORE	./h/dma.h	29;"	d
DEST_INC	./h/dma.h	32;"	d
DEST_WIDTH	./h/dma.h	31;"	d
DIV	./h/regs.h	/^	unsigned long DIV;$/;"	m	struct:_BCM2835_TIMER_REGS	access:public
DLY_1S	./bsp/xmodem.c	61;"	d	file:
DMA15_BASE	./h/dma.h	8;"	d
DMA_BASE	./h/dma.h	6;"	d
DMA_CB_ADDR	./bsp/uart.c	258;"	d	file:
DMA_CB_ADDR_OFFSET	./h/dma.h	45;"	d
DMA_CHANL_DIST	./h/dma.h	7;"	d
DMA_CHANNEL_EN_OFFSET	./h/dma.h	9;"	d
DMA_CS_ACTIVE	./h/dma.h	42;"	d
DMA_CS_END	./h/dma.h	41;"	d
DMA_CS_INT	./h/dma.h	40;"	d
DMA_CS_OFFSET	./h/dma.h	38;"	d
DMA_t	./h/dma.h	/^} DMA_t;$/;"	t	typeref:struct:__anon14
DesAddr	./h/dma.h	/^INT32U  DesAddr;$/;"	m	struct:__anon14	access:public
Disable1	./h/regs.h	/^	unsigned long	Disable1;$/;"	m	struct:__anon2	access:public
Disable2	./h/regs.h	/^	unsigned long	Disable2;$/;"	m	struct:__anon2	access:public
DisableBasic	./h/regs.h	/^	unsigned long	DisableBasic;$/;"	m	struct:__anon2	access:public
DisableInterrupt	./bsp/interrupts.c	/^int DisableInterrupt(int nIRQ) {$/;"	f	signature:(int nIRQ)
DisableInterrupt	./h/interrupts.h	/^int DisableInterrupt		(int nIRQ);$/;"	p	signature:(int nIRQ)
DisableInterrupts	./bsp/interrupts.c	/^int DisableInterrupts() {$/;"	f
DisableInterrupts	./h/interrupts.h	/^int DisableInterrupts		();$/;"	p	signature:()
ENABLE_RX_INTR	./h/uart.h	10;"	d
ENABLE_TX_INTR	./h/uart.h	11;"	d
EOT	./bsp/xmodem.c	55;"	d	file:
Enable1	./h/regs.h	/^	unsigned long	Enable1;$/;"	m	struct:__anon2	access:public
Enable2	./h/regs.h	/^	unsigned long	Enable2;$/;"	m	struct:__anon2	access:public
EnableBasic	./h/regs.h	/^	unsigned long	EnableBasic;$/;"	m	struct:__anon2	access:public
EnableInterrupt	./bsp/interrupts.c	/^int EnableInterrupt(int nIRQ) {$/;"	f	signature:(int nIRQ)
EnableInterrupt	./h/interrupts.h	/^int EnableInterrupt			(int nIRQ);$/;"	p	signature:(int nIRQ)
EnableInterrupts	./bsp/interrupts.c	/^int EnableInterrupts() {$/;"	f
EnableInterrupts	./h/interrupts.h	/^int EnableInterrupts		();$/;"	p	signature:()
FALSE	./h/ucos/uCOS_II.H	19;"	d
FALSE	./ucos/ucos_ii.h	29;"	d
FIQCtrl	./h/regs.h	/^	unsigned long	FIQCtrl;$/;"	m	struct:__anon2	access:public
FN_INTERRUPT_HANDLER	./h/interrupts.h	/^typedef void (*FN_INTERRUPT_HANDLER)(int nIRQ, void *pParam);$/;"	t
FP32	./h/ucos/OS_CPU.H	/^typedef float          FP32;$/;"	t
FP64	./h/ucos/OS_CPU.H	/^typedef double         FP64;$/;"	t
Fifo_t	./h/fifo.h	/^} Fifo_t;$/;"	t	typeref:struct:__anon15
GET32	./bsp/uart.c	/^extern unsigned int GET32 ( unsigned int );$/;"	p	file:	signature:( unsigned int )
GET32	./init/startup.s	/^GET32:$/;"	l
GET_PC	./init/startup.s	/^GET_PC:$/;"	l
GET_SP	./init/startup.s	/^GET_SP:$/;"	l
GPCLR0	./h/regs.h	7;"	d
GPFSEL1	./h/regs.h	5;"	d
GPIO_ALT_FUNCTION_0	./h/gpio.h	7;"	d
GPIO_ALT_FUNCTION_1	./h/gpio.h	8;"	d
GPIO_ALT_FUNCTION_2	./h/gpio.h	9;"	d
GPIO_ALT_FUNCTION_3	./h/gpio.h	10;"	d
GPIO_ALT_FUNCTION_4	./h/gpio.h	11;"	d
GPIO_ALT_FUNCTION_5	./h/gpio.h	12;"	d
GPPUD	./h/regs.h	8;"	d
GPPUDCLK0	./h/regs.h	9;"	d
GPSET0	./h/regs.h	6;"	d
INCLUDEPATH	./makefile	/^INCLUDEPATH ?= .\/h $/;"	m
INCLUDEPATH_UCOS	./makefile	/^INCLUDEPATH_UCOS ?= .\/h\/ucos\/$/;"	m
INT16S	./h/ucos/OS_CPU.H	/^typedef signed   short INT16S;$/;"	t
INT16U	./h/ucos/OS_CPU.H	/^typedef unsigned short INT16U;$/;"	t
INT32S	./h/ucos/OS_CPU.H	/^typedef signed   int   INT32S;$/;"	t
INT32U	./h/ucos/OS_CPU.H	/^typedef unsigned int   INT32U;$/;"	t
INT8S	./h/ucos/OS_CPU.H	/^typedef signed   char  INT8S;$/;"	t
INT8U	./h/ucos/OS_CPU.H	/^typedef unsigned char  INT8U;                  $/;"	t
INTC_REGS	./h/regs.h	/^} INTC_REGS;$/;"	t	typeref:struct:__anon2
INTEN	./h/dma.h	35;"	d
INTERRUPT_VECTOR	./h/interrupts.h	/^} INTERRUPT_VECTOR;$/;"	t	typeref:struct:__anon3
IRQBasic	./h/regs.h	/^	unsigned long	IRQBasic;	\/\/ Pending 0$/;"	m	struct:__anon2	access:public
InitInterruptController	./bsp/interrupts.c	/^int InitInterruptController() {$/;"	f
InitInterruptController	./h/interrupts.h	/^int InitInterruptController	();$/;"	p	signature:()
LOD	./h/regs.h	/^	unsigned long LOD;$/;"	m	struct:_BCM2835_TIMER_REGS	access:public
LONG	./h/ucos/OS_CPU.H	30;"	d
MAXRETRANS	./bsp/xmodem.c	62;"	d	file:
MIS	./h/regs.h	/^	unsigned long MIS;$/;"	m	struct:_BCM2835_TIMER_REGS	access:public
NAK	./bsp/xmodem.c	57;"	d	file:
NO_WIDE_BURSTS	./h/dma.h	21;"	d
NULL	./h/ucos/OS_CPU.H	34;"	d
NextCBAddr	./h/dma.h	/^INT32U  NextCBAddr;$/;"	m	struct:__anon14	access:public
OBJS	./makefile	/^OBJS = build\/startup.o $/;"	m
OSAddr	./h/ucos/uCOS_II.H	/^    void   *OSAddr;                    \/* Pointer to the beginning address of the memory partition     *\/$/;"	m	struct:__anon9	access:public
OSAddr	./ucos/ucos_ii.h	/^    void   *OSAddr;                    \/* Pointer to the beginning address of the memory partition     *\/$/;"	m	struct:__anon21	access:public
OSBlkSize	./h/ucos/uCOS_II.H	/^    INT32U  OSBlkSize;                 \/* Size (in bytes) of each memory block                         *\/$/;"	m	struct:__anon9	access:public
OSBlkSize	./ucos/ucos_ii.h	/^    INT32U  OSBlkSize;                 \/* Size (in bytes) of each memory block                         *\/$/;"	m	struct:__anon21	access:public
OSCPUEnableIrq	./h/ucos/OS_CPU.H	/^void OSCPUEnableIrq(void);$/;"	p	signature:(void)
OSCPUGetSR	./h/ucos/OS_CPU.H	/^int OSCPUGetSR(void);$/;"	p	signature:(void)
OSCPURestoreSR	./h/ucos/OS_CPU.H	/^void OSCPURestoreSR(OS_CPU_SR cpu_sr);$/;"	p	signature:(OS_CPU_SR cpu_sr)
OSCPUSaveSR	./h/ucos/OS_CPU.H	/^OS_CPU_SR  OSCPUSaveSR(void);$/;"	p	signature:(void)
OSCPUUsage	./h/ucos/uCOS_II.H	/^OS_EXT  INT8S             OSCPUUsage;               \/* Percentage of CPU used                          *\/$/;"	v
OSCPUUsage	./ucos/ucos_ii.h	/^OS_EXT  INT8S             OSCPUUsage;               \/* Percentage of CPU used                          *\/$/;"	v
OSCnt	./h/ucos/uCOS_II.H	/^    INT16U  OSCnt;                          \/* Semaphore count                                         *\/$/;"	m	struct:__anon12	access:public
OSCnt	./ucos/ucos_ii.h	/^    INT16U  OSCnt;                          \/* Semaphore count                                         *\/$/;"	m	struct:__anon24	access:public
OSCtxSw	./h/ucos/uCOS_II.H	/^void          OSCtxSw(void);$/;"	p	signature:(void)
OSCtxSw	./port/OS_Cpu_a.s	/^OSCtxSw:$/;"	l
OSCtxSw	./ucos/ucos_ii.h	/^void          OSCtxSw(void);$/;"	p	signature:(void)
OSCtxSwCtr	./h/ucos/uCOS_II.H	/^OS_EXT  INT32U            OSCtxSwCtr;               \/* Counter of number of context switches           *\/$/;"	v
OSCtxSwCtr	./ucos/ucos_ii.h	/^OS_EXT  INT32U            OSCtxSwCtr;               \/* Counter of number of context switches           *\/$/;"	v
OSDataSize	./ucos/os_dbg_r.c	/^INT16U  const  OSDataSize = sizeof(OSCtxSwCtr)$/;"	v
OSDebugEn	./ucos/os_dbg_r.c	/^INT16U  const  OSDebugEn           = OS_DEBUG_EN;               \/* Debug constants are defined below   *\/$/;"	v
OSDebugInit	./ucos/os_dbg_r.c	/^void  OSDebugInit (void)$/;"	f	signature:(void)
OSEndiannessTest	./ucos/os_dbg_r.c	/^INT32U  const  OSEndiannessTest    = 0x12345678L;               \/* Variable to test CPU endianness     *\/$/;"	v
OSEventCnt	./h/ucos/uCOS_II.H	/^    INT16U  OSEventCnt;                    \/* Semaphore Count (not used if other EVENT type)           *\/$/;"	m	struct:__anon4	access:public
OSEventCnt	./ucos/ucos_ii.h	/^    INT16U  OSEventCnt;                    \/* Semaphore Count (not used if other EVENT type)           *\/$/;"	m	struct:__anon16	access:public
OSEventEn	./ucos/os_dbg_r.c	/^INT16U  const  OSEventEn           = OS_EVENT_EN;$/;"	v
OSEventFreeList	./h/ucos/uCOS_II.H	/^OS_EXT  OS_EVENT         *OSEventFreeList;          \/* Pointer to list of free EVENT control blocks    *\/$/;"	v
OSEventFreeList	./ucos/ucos_ii.h	/^OS_EXT  OS_EVENT         *OSEventFreeList;          \/* Pointer to list of free EVENT control blocks    *\/$/;"	v
OSEventGrp	./h/ucos/uCOS_II.H	/^    INT8U          OSEventGrp;          \/* Group corresponding to tasks waiting for event to occur     *\/$/;"	m	struct:__anon11	access:public
OSEventGrp	./h/ucos/uCOS_II.H	/^    INT8U   OSEventGrp;                     \/* Group corresponding to tasks waiting for event to occur *\/$/;"	m	struct:__anon10	access:public
OSEventGrp	./h/ucos/uCOS_II.H	/^    INT8U   OSEventGrp;                     \/* Group corresponding to tasks waiting for event to occur *\/$/;"	m	struct:__anon12	access:public
OSEventGrp	./h/ucos/uCOS_II.H	/^    INT8U   OSEventGrp;                    \/* Group corresponding to tasks waiting for event to occur  *\/$/;"	m	struct:__anon4	access:public
OSEventGrp	./h/ucos/uCOS_II.H	/^    INT8U   OSEventGrp;                    \/* Group corresponding to tasks waiting for event to occur  *\/$/;"	m	struct:__anon7	access:public
OSEventGrp	./ucos/ucos_ii.h	/^    INT8U          OSEventGrp;          \/* Group corresponding to tasks waiting for event to occur     *\/$/;"	m	struct:__anon23	access:public
OSEventGrp	./ucos/ucos_ii.h	/^    INT8U   OSEventGrp;                     \/* Group corresponding to tasks waiting for event to occur *\/$/;"	m	struct:__anon22	access:public
OSEventGrp	./ucos/ucos_ii.h	/^    INT8U   OSEventGrp;                     \/* Group corresponding to tasks waiting for event to occur *\/$/;"	m	struct:__anon24	access:public
OSEventGrp	./ucos/ucos_ii.h	/^    INT8U   OSEventGrp;                    \/* Group corresponding to tasks waiting for event to occur  *\/$/;"	m	struct:__anon16	access:public
OSEventGrp	./ucos/ucos_ii.h	/^    INT8U   OSEventGrp;                    \/* Group corresponding to tasks waiting for event to occur  *\/$/;"	m	struct:__anon19	access:public
OSEventMax	./ucos/os_dbg_r.c	/^INT16U  const  OSEventMax          = OS_MAX_EVENTS;             \/* Number of event control blocks      *\/$/;"	v
OSEventMultiEn	./ucos/os_dbg_r.c	/^INT16U  const  OSEventMultiEn      = OS_EVENT_MULTI_EN;$/;"	v
OSEventNameSize	./ucos/os_dbg_r.c	/^INT16U  const  OSEventNameSize     = OS_EVENT_NAME_SIZE;        \/* Size (in bytes) of event names      *\/$/;"	v
OSEventPtr	./h/ucos/uCOS_II.H	/^    void   *OSEventPtr;                    \/* Pointer to message or queue structure                    *\/$/;"	m	struct:__anon4	access:public
OSEventPtr	./ucos/ucos_ii.h	/^    void   *OSEventPtr;                    \/* Pointer to message or queue structure                    *\/$/;"	m	struct:__anon16	access:public
OSEventSize	./ucos/os_dbg_r.c	/^INT16U  const  OSEventSize         = 0;$/;"	v
OSEventSize	./ucos/os_dbg_r.c	/^INT16U  const  OSEventSize         = sizeof(OS_EVENT);          \/* Size in Bytes of OS_EVENT           *\/$/;"	v
OSEventTbl	./h/ucos/uCOS_II.H	/^    INT8U          OSEventTbl[OS_EVENT_TBL_SIZE];  \/* List of tasks waiting for event to occur         *\/$/;"	m	struct:__anon11	access:public
OSEventTbl	./h/ucos/uCOS_II.H	/^    INT8U   OSEventTbl[OS_EVENT_TBL_SIZE];  \/* List of tasks waiting for event to occur                *\/$/;"	m	struct:__anon10	access:public
OSEventTbl	./h/ucos/uCOS_II.H	/^    INT8U   OSEventTbl[OS_EVENT_TBL_SIZE];  \/* List of tasks waiting for event to occur                *\/$/;"	m	struct:__anon12	access:public
OSEventTbl	./h/ucos/uCOS_II.H	/^    INT8U   OSEventTbl[OS_EVENT_TBL_SIZE]; \/* List of tasks waiting for event to occur                 *\/$/;"	m	struct:__anon4	access:public
OSEventTbl	./h/ucos/uCOS_II.H	/^    INT8U   OSEventTbl[OS_EVENT_TBL_SIZE]; \/* List of tasks waiting for event to occur                 *\/$/;"	m	struct:__anon7	access:public
OSEventTbl	./h/ucos/uCOS_II.H	/^OS_EXT  OS_EVENT          OSEventTbl[OS_MAX_EVENTS];\/* Table of EVENT control blocks                   *\/$/;"	v
OSEventTbl	./ucos/ucos_ii.h	/^    INT8U          OSEventTbl[OS_EVENT_TBL_SIZE];  \/* List of tasks waiting for event to occur         *\/$/;"	m	struct:__anon23	access:public
OSEventTbl	./ucos/ucos_ii.h	/^    INT8U   OSEventTbl[OS_EVENT_TBL_SIZE];  \/* List of tasks waiting for event to occur                *\/$/;"	m	struct:__anon22	access:public
OSEventTbl	./ucos/ucos_ii.h	/^    INT8U   OSEventTbl[OS_EVENT_TBL_SIZE];  \/* List of tasks waiting for event to occur                *\/$/;"	m	struct:__anon24	access:public
OSEventTbl	./ucos/ucos_ii.h	/^    INT8U   OSEventTbl[OS_EVENT_TBL_SIZE]; \/* List of tasks waiting for event to occur                 *\/$/;"	m	struct:__anon16	access:public
OSEventTbl	./ucos/ucos_ii.h	/^    INT8U   OSEventTbl[OS_EVENT_TBL_SIZE]; \/* List of tasks waiting for event to occur                 *\/$/;"	m	struct:__anon19	access:public
OSEventTbl	./ucos/ucos_ii.h	/^OS_EXT  OS_EVENT          OSEventTbl[OS_MAX_EVENTS];\/* Table of EVENT control blocks                   *\/$/;"	v
OSEventTblSize	./ucos/os_dbg_r.c	/^INT16U  const  OSEventTblSize      = 0;$/;"	v
OSEventTblSize	./ucos/os_dbg_r.c	/^INT16U  const  OSEventTblSize      = sizeof(OSEventTbl);        \/* Size of OSEventTbl[] in bytes       *\/$/;"	v
OSEventType	./h/ucos/uCOS_II.H	/^    INT8U   OSEventType;                   \/* Type of event control block (see OS_EVENT_TYPE_???)      *\/$/;"	m	struct:__anon4	access:public
OSEventType	./ucos/ucos_ii.h	/^    INT8U   OSEventType;                   \/* Type of event control block (see OS_EVENT_TYPE_???)      *\/$/;"	m	struct:__anon16	access:public
OSFlagAccept	./h/ucos/uCOS_II.H	/^OS_FLAGS      OSFlagAccept(OS_FLAG_GRP *pgrp, OS_FLAGS flags, INT8U wait_type, INT8U *err);$/;"	p	signature:(OS_FLAG_GRP *pgrp, OS_FLAGS flags, INT8U wait_type, INT8U *err)
OSFlagAccept	./ucos/os_flag.c	/^OS_FLAGS  OSFlagAccept (OS_FLAG_GRP *pgrp, OS_FLAGS flags, INT8U wait_type, INT8U *err)$/;"	f	signature:(OS_FLAG_GRP *pgrp, OS_FLAGS flags, INT8U wait_type, INT8U *err)
OSFlagAccept	./ucos/ucos_ii.h	/^OS_FLAGS      OSFlagAccept(OS_FLAG_GRP *pgrp, OS_FLAGS flags, INT8U wait_type, INT8U *err);$/;"	p	signature:(OS_FLAG_GRP *pgrp, OS_FLAGS flags, INT8U wait_type, INT8U *err)
OSFlagCreate	./h/ucos/uCOS_II.H	/^OS_FLAG_GRP  *OSFlagCreate(OS_FLAGS flags, INT8U *err);$/;"	p	signature:(OS_FLAGS flags, INT8U *err)
OSFlagCreate	./ucos/os_flag.c	/^OS_FLAG_GRP  *OSFlagCreate (OS_FLAGS flags, INT8U *err)$/;"	f	signature:(OS_FLAGS flags, INT8U *err)
OSFlagCreate	./ucos/ucos_ii.h	/^OS_FLAG_GRP  *OSFlagCreate(OS_FLAGS flags, INT8U *err);$/;"	p	signature:(OS_FLAGS flags, INT8U *err)
OSFlagDel	./h/ucos/uCOS_II.H	/^OS_FLAG_GRP  *OSFlagDel(OS_FLAG_GRP *pgrp, INT8U opt, INT8U *err);$/;"	p	signature:(OS_FLAG_GRP *pgrp, INT8U opt, INT8U *err)
OSFlagDel	./ucos/os_flag.c	/^OS_FLAG_GRP  *OSFlagDel (OS_FLAG_GRP *pgrp, INT8U opt, INT8U *err)$/;"	f	signature:(OS_FLAG_GRP *pgrp, INT8U opt, INT8U *err)
OSFlagDel	./ucos/ucos_ii.h	/^OS_FLAG_GRP  *OSFlagDel(OS_FLAG_GRP *pgrp, INT8U opt, INT8U *err);$/;"	p	signature:(OS_FLAG_GRP *pgrp, INT8U opt, INT8U *err)
OSFlagEn	./ucos/os_dbg_r.c	/^INT16U  const  OSFlagEn            = OS_FLAG_EN;$/;"	v
OSFlagFlags	./h/ucos/uCOS_II.H	/^    OS_FLAGS      OSFlagFlags;              \/* 8, 16 or 32 bit flags                                   *\/$/;"	m	struct:__anon5	access:public
OSFlagFlags	./ucos/ucos_ii.h	/^    OS_FLAGS      OSFlagFlags;              \/* 8, 16 or 32 bit flags                                   *\/$/;"	m	struct:__anon17	access:public
OSFlagFreeList	./h/ucos/uCOS_II.H	/^OS_EXT  OS_FLAG_GRP      *OSFlagFreeList;           \/* Pointer to free list of event flag groups       *\/$/;"	v
OSFlagFreeList	./ucos/ucos_ii.h	/^OS_EXT  OS_FLAG_GRP      *OSFlagFreeList;           \/* Pointer to free list of event flag groups       *\/$/;"	v
OSFlagGrpSize	./ucos/os_dbg_r.c	/^INT16U  const  OSFlagGrpSize       = 0;$/;"	v
OSFlagGrpSize	./ucos/os_dbg_r.c	/^INT16U  const  OSFlagGrpSize       = sizeof(OS_FLAG_GRP);       \/* Size in Bytes of OS_FLAG_GRP        *\/$/;"	v
OSFlagMax	./ucos/os_dbg_r.c	/^INT16U  const  OSFlagMax           = OS_MAX_FLAGS;$/;"	v
OSFlagNameSize	./ucos/os_dbg_r.c	/^INT16U  const  OSFlagNameSize      = OS_FLAG_NAME_SIZE;         \/* Size (in bytes) of flag names       *\/$/;"	v
OSFlagNodeFlagGrp	./h/ucos/uCOS_II.H	/^    void         *OSFlagNodeFlagGrp;        \/* Pointer to Event Flag Group                             *\/  $/;"	m	struct:__anon6	access:public
OSFlagNodeFlagGrp	./ucos/ucos_ii.h	/^    void         *OSFlagNodeFlagGrp;        \/* Pointer to Event Flag Group                             *\/  $/;"	m	struct:__anon18	access:public
OSFlagNodeFlags	./h/ucos/uCOS_II.H	/^    OS_FLAGS      OSFlagNodeFlags;          \/* Event flag to wait on                                   *\/  $/;"	m	struct:__anon6	access:public
OSFlagNodeFlags	./ucos/ucos_ii.h	/^    OS_FLAGS      OSFlagNodeFlags;          \/* Event flag to wait on                                   *\/  $/;"	m	struct:__anon18	access:public
OSFlagNodeNext	./h/ucos/uCOS_II.H	/^    void         *OSFlagNodeNext;           \/* Pointer to next     NODE in wait list                   *\/$/;"	m	struct:__anon6	access:public
OSFlagNodeNext	./ucos/ucos_ii.h	/^    void         *OSFlagNodeNext;           \/* Pointer to next     NODE in wait list                   *\/$/;"	m	struct:__anon18	access:public
OSFlagNodePrev	./h/ucos/uCOS_II.H	/^    void         *OSFlagNodePrev;           \/* Pointer to previous NODE in wait list                   *\/$/;"	m	struct:__anon6	access:public
OSFlagNodePrev	./ucos/ucos_ii.h	/^    void         *OSFlagNodePrev;           \/* Pointer to previous NODE in wait list                   *\/$/;"	m	struct:__anon18	access:public
OSFlagNodeSize	./ucos/os_dbg_r.c	/^INT16U  const  OSFlagNodeSize      = 0;$/;"	v
OSFlagNodeSize	./ucos/os_dbg_r.c	/^INT16U  const  OSFlagNodeSize      = sizeof(OS_FLAG_NODE);      \/* Size in Bytes of OS_FLAG_NODE       *\/$/;"	v
OSFlagNodeTCB	./h/ucos/uCOS_II.H	/^    void         *OSFlagNodeTCB;            \/* Pointer to TCB of waiting task                          *\/  $/;"	m	struct:__anon6	access:public
OSFlagNodeTCB	./ucos/ucos_ii.h	/^    void         *OSFlagNodeTCB;            \/* Pointer to TCB of waiting task                          *\/  $/;"	m	struct:__anon18	access:public
OSFlagNodeWaitType	./h/ucos/uCOS_II.H	/^    INT8U         OSFlagNodeWaitType;       \/* Type of wait:                                           *\/$/;"	m	struct:__anon6	access:public
OSFlagNodeWaitType	./ucos/ucos_ii.h	/^    INT8U         OSFlagNodeWaitType;       \/* Type of wait:                                           *\/$/;"	m	struct:__anon18	access:public
OSFlagPend	./h/ucos/uCOS_II.H	/^OS_FLAGS      OSFlagPend(OS_FLAG_GRP *pgrp, OS_FLAGS flags, INT8U wait_type, INT16U timeout, INT8U *err);$/;"	p	signature:(OS_FLAG_GRP *pgrp, OS_FLAGS flags, INT8U wait_type, INT16U timeout, INT8U *err)
OSFlagPend	./ucos/os_flag.c	/^OS_FLAGS  OSFlagPend (OS_FLAG_GRP *pgrp, OS_FLAGS flags, INT8U wait_type, INT16U timeout, INT8U *err)$/;"	f	signature:(OS_FLAG_GRP *pgrp, OS_FLAGS flags, INT8U wait_type, INT16U timeout, INT8U *err)
OSFlagPend	./ucos/ucos_ii.h	/^OS_FLAGS      OSFlagPend(OS_FLAG_GRP *pgrp, OS_FLAGS flags, INT8U wait_type, INT16U timeout, INT8U *err);$/;"	p	signature:(OS_FLAG_GRP *pgrp, OS_FLAGS flags, INT8U wait_type, INT16U timeout, INT8U *err)
OSFlagPost	./h/ucos/uCOS_II.H	/^OS_FLAGS      OSFlagPost(OS_FLAG_GRP *pgrp, OS_FLAGS flags, INT8U operation, INT8U *err);$/;"	p	signature:(OS_FLAG_GRP *pgrp, OS_FLAGS flags, INT8U operation, INT8U *err)
OSFlagPost	./ucos/os_flag.c	/^OS_FLAGS  OSFlagPost (OS_FLAG_GRP *pgrp, OS_FLAGS flags, INT8U opt, INT8U *err)$/;"	f	signature:(OS_FLAG_GRP *pgrp, OS_FLAGS flags, INT8U opt, INT8U *err)
OSFlagPost	./ucos/ucos_ii.h	/^OS_FLAGS      OSFlagPost(OS_FLAG_GRP *pgrp, OS_FLAGS flags, INT8U operation, INT8U *err);$/;"	p	signature:(OS_FLAG_GRP *pgrp, OS_FLAGS flags, INT8U operation, INT8U *err)
OSFlagQuery	./h/ucos/uCOS_II.H	/^OS_FLAGS      OSFlagQuery(OS_FLAG_GRP *pgrp, INT8U *err);$/;"	p	signature:(OS_FLAG_GRP *pgrp, INT8U *err)
OSFlagQuery	./ucos/os_flag.c	/^OS_FLAGS  OSFlagQuery (OS_FLAG_GRP *pgrp, INT8U *err)$/;"	f	signature:(OS_FLAG_GRP *pgrp, INT8U *err)
OSFlagQuery	./ucos/ucos_ii.h	/^OS_FLAGS      OSFlagQuery(OS_FLAG_GRP *pgrp, INT8U *err);$/;"	p	signature:(OS_FLAG_GRP *pgrp, INT8U *err)
OSFlagTbl	./h/ucos/uCOS_II.H	/^OS_EXT  OS_FLAG_GRP       OSFlagTbl[OS_MAX_FLAGS];  \/* Table containing event flag groups              *\/$/;"	v
OSFlagTbl	./ucos/ucos_ii.h	/^OS_EXT  OS_FLAG_GRP       OSFlagTbl[OS_MAX_FLAGS];  \/* Table containing event flag groups              *\/$/;"	v
OSFlagType	./h/ucos/uCOS_II.H	/^    INT8U         OSFlagType;               \/* Should be set to OS_EVENT_TYPE_FLAG                     *\/$/;"	m	struct:__anon5	access:public
OSFlagType	./ucos/ucos_ii.h	/^    INT8U         OSFlagType;               \/* Should be set to OS_EVENT_TYPE_FLAG                     *\/$/;"	m	struct:__anon17	access:public
OSFlagWaitList	./h/ucos/uCOS_II.H	/^    void         *OSFlagWaitList;           \/* Pointer to first NODE of task waiting on event flag     *\/$/;"	m	struct:__anon5	access:public
OSFlagWaitList	./ucos/ucos_ii.h	/^    void         *OSFlagWaitList;           \/* Pointer to first NODE of task waiting on event flag     *\/$/;"	m	struct:__anon17	access:public
OSFlagWidth	./ucos/os_dbg_r.c	/^INT16U  const  OSFlagWidth         = 0;$/;"	v
OSFlagWidth	./ucos/os_dbg_r.c	/^INT16U  const  OSFlagWidth         = sizeof(OS_FLAGS);          \/* Width (in bytes) of OS_FLAGS        *\/$/;"	v
OSFree	./h/ucos/uCOS_II.H	/^    INT32U  OSFree;                    \/* Number of free bytes on the stack                            *\/$/;"	m	struct:__anon13	access:public
OSFree	./ucos/ucos_ii.h	/^    INT32U  OSFree;                    \/* Number of free bytes on the stack                            *\/$/;"	m	struct:__anon25	access:public
OSFreeList	./h/ucos/uCOS_II.H	/^    void   *OSFreeList;                \/* Pointer to the beginning of the free list of memory blocks   *\/$/;"	m	struct:__anon9	access:public
OSFreeList	./ucos/ucos_ii.h	/^    void   *OSFreeList;                \/* Pointer to the beginning of the free list of memory blocks   *\/$/;"	m	struct:__anon21	access:public
OSIdleCtr	./h/ucos/uCOS_II.H	/^OS_EXT  volatile  INT32U  OSIdleCtr;                                 \/* Idle counter                   *\/$/;"	v
OSIdleCtr	./ucos/ucos_ii.h	/^OS_EXT  volatile  INT32U  OSIdleCtr;                                 \/* Idle counter                   *\/$/;"	v
OSIdleCtrMax	./h/ucos/uCOS_II.H	/^OS_EXT  INT32U            OSIdleCtrMax;             \/* Max. value that idle ctr can take in 1 sec.     *\/$/;"	v
OSIdleCtrMax	./ucos/ucos_ii.h	/^OS_EXT  INT32U            OSIdleCtrMax;             \/* Max. value that idle ctr can take in 1 sec.     *\/$/;"	v
OSIdleCtrRun	./h/ucos/uCOS_II.H	/^OS_EXT  INT32U            OSIdleCtrRun;             \/* Val. reached by idle ctr at run time in 1 sec.  *\/$/;"	v
OSIdleCtrRun	./ucos/ucos_ii.h	/^OS_EXT  INT32U            OSIdleCtrRun;             \/* Val. reached by idle ctr at run time in 1 sec.  *\/$/;"	v
OSInit	./h/ucos/uCOS_II.H	/^void          OSInit(void);$/;"	p	signature:(void)
OSInit	./ucos/os_core.c	/^void  OSInit (void)$/;"	f	signature:(void)
OSInit	./ucos/ucos_ii.h	/^void          OSInit(void);$/;"	p	signature:(void)
OSInitHookBegin	./h/ucos/uCOS_II.H	/^void          OSInitHookBegin(void);$/;"	p	signature:(void)
OSInitHookBegin	./port/OS_Cpu_c.c	/^void  OSInitHookBegin (void)$/;"	f	signature:(void)
OSInitHookBegin	./ucos/ucos_ii.h	/^void          OSInitHookBegin(void);$/;"	p	signature:(void)
OSInitHookEnd	./h/ucos/uCOS_II.H	/^void          OSInitHookEnd(void);$/;"	p	signature:(void)
OSInitHookEnd	./port/OS_Cpu_c.c	/^void  OSInitHookEnd (void)$/;"	f	signature:(void)
OSInitHookEnd	./ucos/ucos_ii.h	/^void          OSInitHookEnd(void);$/;"	p	signature:(void)
OSIntCtxSw	./h/ucos/uCOS_II.H	/^void          OSIntCtxSw(void);$/;"	p	signature:(void)
OSIntCtxSw	./port/OS_Cpu_a.s	/^OSIntCtxSw:$/;"	l
OSIntCtxSw	./ucos/ucos_ii.h	/^void          OSIntCtxSw(void);$/;"	p	signature:(void)
OSIntEnter	./h/ucos/uCOS_II.H	/^void          OSIntEnter(void);$/;"	p	signature:(void)
OSIntEnter	./ucos/os_core.c	/^void  OSIntEnter (void)$/;"	f	signature:(void)
OSIntEnter	./ucos/ucos_ii.h	/^void          OSIntEnter(void);$/;"	p	signature:(void)
OSIntExit	./h/ucos/uCOS_II.H	/^void          OSIntExit(void);$/;"	p	signature:(void)
OSIntExit	./ucos/os_core.c	/^void  OSIntExit (void)$/;"	f	signature:(void)
OSIntExit	./ucos/ucos_ii.h	/^void          OSIntExit(void);$/;"	p	signature:(void)
OSIntExitY	./h/ucos/uCOS_II.H	/^OS_EXT  INT8U             OSIntExitY;$/;"	v
OSIntExitY	./ucos/ucos_ii.h	/^OS_EXT  INT8U             OSIntExitY;$/;"	v
OSIntNesting	./h/ucos/uCOS_II.H	/^OS_EXT  INT8U             OSIntNesting;             \/* Interrupt nesting level                         *\/$/;"	v
OSIntNesting	./ucos/ucos_ii.h	/^OS_EXT  INT8U             OSIntNesting;             \/* Interrupt nesting level                         *\/$/;"	v
OSLockNesting	./h/ucos/uCOS_II.H	/^OS_EXT  INT8U             OSLockNesting;            \/* Multitasking lock nesting level                 *\/$/;"	v
OSLockNesting	./ucos/ucos_ii.h	/^OS_EXT  INT8U             OSLockNesting;            \/* Multitasking lock nesting level                 *\/$/;"	v
OSLowestPrio	./ucos/os_dbg_r.c	/^INT16U  const  OSLowestPrio        = OS_LOWEST_PRIO;$/;"	v
OSMapTbl	./ucos/os_core.c	/^INT8U  const  OSMapTbl[]   = {0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80};$/;"	v
OSMboxAccept	./h/ucos/uCOS_II.H	/^void         *OSMboxAccept(OS_EVENT *pevent);$/;"	p	signature:(OS_EVENT *pevent)
OSMboxAccept	./ucos/os_mbox.c	/^void  *OSMboxAccept (OS_EVENT *pevent)$/;"	f	signature:(OS_EVENT *pevent)
OSMboxAccept	./ucos/ucos_ii.h	/^void         *OSMboxAccept(OS_EVENT *pevent);$/;"	p	signature:(OS_EVENT *pevent)
OSMboxCreate	./h/ucos/uCOS_II.H	/^OS_EVENT     *OSMboxCreate(void *msg);$/;"	p	signature:(void *msg)
OSMboxCreate	./ucos/os_mbox.c	/^OS_EVENT  *OSMboxCreate (void *msg)$/;"	f	signature:(void *msg)
OSMboxCreate	./ucos/ucos_ii.h	/^OS_EVENT     *OSMboxCreate(void *msg);$/;"	p	signature:(void *msg)
OSMboxDel	./h/ucos/uCOS_II.H	/^OS_EVENT     *OSMboxDel(OS_EVENT *pevent, INT8U opt, INT8U *err);$/;"	p	signature:(OS_EVENT *pevent, INT8U opt, INT8U *err)
OSMboxDel	./ucos/os_mbox.c	/^OS_EVENT  *OSMboxDel (OS_EVENT *pevent, INT8U opt, INT8U *err)$/;"	f	signature:(OS_EVENT *pevent, INT8U opt, INT8U *err)
OSMboxDel	./ucos/ucos_ii.h	/^OS_EVENT     *OSMboxDel(OS_EVENT *pevent, INT8U opt, INT8U *err);$/;"	p	signature:(OS_EVENT *pevent, INT8U opt, INT8U *err)
OSMboxEn	./ucos/os_dbg_r.c	/^INT16U  const  OSMboxEn            = OS_MBOX_EN;$/;"	v
OSMboxPend	./h/ucos/uCOS_II.H	/^void         *OSMboxPend(OS_EVENT *pevent, INT16U timeout, INT8U *err);$/;"	p	signature:(OS_EVENT *pevent, INT16U timeout, INT8U *err)
OSMboxPend	./ucos/os_mbox.c	/^void  *OSMboxPend (OS_EVENT *pevent, INT16U timeout, INT8U *err)$/;"	f	signature:(OS_EVENT *pevent, INT16U timeout, INT8U *err)
OSMboxPend	./ucos/ucos_ii.h	/^void         *OSMboxPend(OS_EVENT *pevent, INT16U timeout, INT8U *err);$/;"	p	signature:(OS_EVENT *pevent, INT16U timeout, INT8U *err)
OSMboxPost	./h/ucos/uCOS_II.H	/^INT8U         OSMboxPost(OS_EVENT *pevent, void *msg);$/;"	p	signature:(OS_EVENT *pevent, void *msg)
OSMboxPost	./ucos/os_mbox.c	/^INT8U  OSMboxPost (OS_EVENT *pevent, void *msg)$/;"	f	signature:(OS_EVENT *pevent, void *msg)
OSMboxPost	./ucos/ucos_ii.h	/^INT8U         OSMboxPost(OS_EVENT *pevent, void *msg);$/;"	p	signature:(OS_EVENT *pevent, void *msg)
OSMboxPostOpt	./h/ucos/uCOS_II.H	/^INT8U         OSMboxPostOpt(OS_EVENT *pevent, void *msg, INT8U opt);$/;"	p	signature:(OS_EVENT *pevent, void *msg, INT8U opt)
OSMboxPostOpt	./ucos/os_mbox.c	/^INT8U  OSMboxPostOpt (OS_EVENT *pevent, void *msg, INT8U opt)$/;"	f	signature:(OS_EVENT *pevent, void *msg, INT8U opt)
OSMboxPostOpt	./ucos/ucos_ii.h	/^INT8U         OSMboxPostOpt(OS_EVENT *pevent, void *msg, INT8U opt);$/;"	p	signature:(OS_EVENT *pevent, void *msg, INT8U opt)
OSMboxQuery	./h/ucos/uCOS_II.H	/^INT8U         OSMboxQuery(OS_EVENT *pevent, OS_MBOX_DATA *pdata);$/;"	p	signature:(OS_EVENT *pevent, OS_MBOX_DATA *pdata)
OSMboxQuery	./ucos/os_mbox.c	/^INT8U  OSMboxQuery (OS_EVENT *pevent, OS_MBOX_DATA *pdata)$/;"	f	signature:(OS_EVENT *pevent, OS_MBOX_DATA *pdata)
OSMboxQuery	./ucos/ucos_ii.h	/^INT8U         OSMboxQuery(OS_EVENT *pevent, OS_MBOX_DATA *pdata);$/;"	p	signature:(OS_EVENT *pevent, OS_MBOX_DATA *pdata)
OSMemAddr	./h/ucos/uCOS_II.H	/^    void   *OSMemAddr;                 \/* Pointer to beginning of memory partition                     *\/$/;"	m	struct:__anon8	access:public
OSMemAddr	./ucos/ucos_ii.h	/^    void   *OSMemAddr;                 \/* Pointer to beginning of memory partition                     *\/$/;"	m	struct:__anon20	access:public
OSMemBlkSize	./h/ucos/uCOS_II.H	/^    INT32U  OSMemBlkSize;              \/* Size (in bytes) of each block of memory                      *\/$/;"	m	struct:__anon8	access:public
OSMemBlkSize	./ucos/ucos_ii.h	/^    INT32U  OSMemBlkSize;              \/* Size (in bytes) of each block of memory                      *\/$/;"	m	struct:__anon20	access:public
OSMemCreate	./h/ucos/uCOS_II.H	/^OS_MEM       *OSMemCreate(void *addr, INT32U nblks, INT32U blksize, INT8U *err);$/;"	p	signature:(void *addr, INT32U nblks, INT32U blksize, INT8U *err)
OSMemCreate	./ucos/os_mem.c	/^OS_MEM  *OSMemCreate (void *addr, INT32U nblks, INT32U blksize, INT8U *err)$/;"	f	signature:(void *addr, INT32U nblks, INT32U blksize, INT8U *err)
OSMemCreate	./ucos/ucos_ii.h	/^OS_MEM       *OSMemCreate(void *addr, INT32U nblks, INT32U blksize, INT8U *err);$/;"	p	signature:(void *addr, INT32U nblks, INT32U blksize, INT8U *err)
OSMemEn	./ucos/os_dbg_r.c	/^INT16U  const  OSMemEn             = OS_MEM_EN;$/;"	v
OSMemFreeList	./h/ucos/uCOS_II.H	/^    void   *OSMemFreeList;             \/* Pointer to list of free memory blocks                        *\/$/;"	m	struct:__anon8	access:public
OSMemFreeList	./h/ucos/uCOS_II.H	/^OS_EXT  OS_MEM           *OSMemFreeList;            \/* Pointer to free list of memory partitions       *\/$/;"	v
OSMemFreeList	./ucos/ucos_ii.h	/^    void   *OSMemFreeList;             \/* Pointer to list of free memory blocks                        *\/$/;"	m	struct:__anon20	access:public
OSMemFreeList	./ucos/ucos_ii.h	/^OS_EXT  OS_MEM           *OSMemFreeList;            \/* Pointer to free list of memory partitions       *\/$/;"	v
OSMemGet	./h/ucos/uCOS_II.H	/^void         *OSMemGet(OS_MEM *pmem, INT8U *err);$/;"	p	signature:(OS_MEM *pmem, INT8U *err)
OSMemGet	./ucos/os_mem.c	/^void  *OSMemGet (OS_MEM *pmem, INT8U *err)$/;"	f	signature:(OS_MEM *pmem, INT8U *err)
OSMemGet	./ucos/ucos_ii.h	/^void         *OSMemGet(OS_MEM *pmem, INT8U *err);$/;"	p	signature:(OS_MEM *pmem, INT8U *err)
OSMemMax	./ucos/os_dbg_r.c	/^INT16U  const  OSMemMax            = OS_MAX_MEM_PART;           \/* Number of memory partitions         *\/$/;"	v
OSMemNBlks	./h/ucos/uCOS_II.H	/^    INT32U  OSMemNBlks;                \/* Total number of blocks in this partition                     *\/$/;"	m	struct:__anon8	access:public
OSMemNBlks	./ucos/ucos_ii.h	/^    INT32U  OSMemNBlks;                \/* Total number of blocks in this partition                     *\/$/;"	m	struct:__anon20	access:public
OSMemNFree	./h/ucos/uCOS_II.H	/^    INT32U  OSMemNFree;                \/* Number of memory blocks remaining in this partition          *\/$/;"	m	struct:__anon8	access:public
OSMemNFree	./ucos/ucos_ii.h	/^    INT32U  OSMemNFree;                \/* Number of memory blocks remaining in this partition          *\/$/;"	m	struct:__anon20	access:public
OSMemNameSize	./ucos/os_dbg_r.c	/^INT16U  const  OSMemNameSize       = OS_MEM_NAME_SIZE;          \/* Size (in bytes) of partition names  *\/$/;"	v
OSMemPut	./h/ucos/uCOS_II.H	/^INT8U         OSMemPut(OS_MEM *pmem, void *pblk);$/;"	p	signature:(OS_MEM *pmem, void *pblk)
OSMemPut	./ucos/os_mem.c	/^INT8U  OSMemPut (OS_MEM  *pmem, void *pblk)$/;"	f	signature:(OS_MEM *pmem, void *pblk)
OSMemPut	./ucos/ucos_ii.h	/^INT8U         OSMemPut(OS_MEM *pmem, void *pblk);$/;"	p	signature:(OS_MEM *pmem, void *pblk)
OSMemQuery	./h/ucos/uCOS_II.H	/^INT8U         OSMemQuery(OS_MEM *pmem, OS_MEM_DATA *pdata);$/;"	p	signature:(OS_MEM *pmem, OS_MEM_DATA *pdata)
OSMemQuery	./ucos/os_mem.c	/^INT8U  OSMemQuery (OS_MEM *pmem, OS_MEM_DATA *pdata)$/;"	f	signature:(OS_MEM *pmem, OS_MEM_DATA *pdata)
OSMemQuery	./ucos/ucos_ii.h	/^INT8U         OSMemQuery(OS_MEM *pmem, OS_MEM_DATA *pdata);$/;"	p	signature:(OS_MEM *pmem, OS_MEM_DATA *pdata)
OSMemSize	./ucos/os_dbg_r.c	/^INT16U  const  OSMemSize           = 0;$/;"	v
OSMemSize	./ucos/os_dbg_r.c	/^INT16U  const  OSMemSize           = sizeof(OS_MEM);            \/* Mem. Partition header sine (bytes)  *\/$/;"	v
OSMemTbl	./h/ucos/uCOS_II.H	/^OS_EXT  OS_MEM            OSMemTbl[OS_MAX_MEM_PART];\/* Storage for memory partition manager            *\/$/;"	v
OSMemTbl	./ucos/ucos_ii.h	/^OS_EXT  OS_MEM            OSMemTbl[OS_MAX_MEM_PART];\/* Storage for memory partition manager            *\/$/;"	v
OSMemTblSize	./ucos/os_dbg_r.c	/^INT16U  const  OSMemTblSize        = 0;$/;"	v
OSMemTblSize	./ucos/os_dbg_r.c	/^INT16U  const  OSMemTblSize        = sizeof(OSMemTbl);$/;"	v
OSMsg	./h/ucos/uCOS_II.H	/^    void          *OSMsg;               \/* Pointer to next message to be extracted from queue          *\/$/;"	m	struct:__anon11	access:public
OSMsg	./h/ucos/uCOS_II.H	/^    void   *OSMsg;                         \/* Pointer to message in mailbox                            *\/$/;"	m	struct:__anon7	access:public
OSMsg	./ucos/ucos_ii.h	/^    void          *OSMsg;               \/* Pointer to next message to be extracted from queue          *\/$/;"	m	struct:__anon23	access:public
OSMsg	./ucos/ucos_ii.h	/^    void   *OSMsg;                         \/* Pointer to message in mailbox                            *\/$/;"	m	struct:__anon19	access:public
OSMutexAccept	./h/ucos/uCOS_II.H	/^INT8U         OSMutexAccept(OS_EVENT *pevent, INT8U *err);$/;"	p	signature:(OS_EVENT *pevent, INT8U *err)
OSMutexAccept	./ucos/os_mutex.c	/^INT8U  OSMutexAccept (OS_EVENT *pevent, INT8U *err)$/;"	f	signature:(OS_EVENT *pevent, INT8U *err)
OSMutexAccept	./ucos/ucos_ii.h	/^INT8U         OSMutexAccept(OS_EVENT *pevent, INT8U *err);$/;"	p	signature:(OS_EVENT *pevent, INT8U *err)
OSMutexCreate	./h/ucos/uCOS_II.H	/^OS_EVENT     *OSMutexCreate(INT8U prio, INT8U *err);$/;"	p	signature:(INT8U prio, INT8U *err)
OSMutexCreate	./ucos/os_mutex.c	/^OS_EVENT  *OSMutexCreate (INT8U prio, INT8U *err)$/;"	f	signature:(INT8U prio, INT8U *err)
OSMutexCreate	./ucos/ucos_ii.h	/^OS_EVENT     *OSMutexCreate(INT8U prio, INT8U *err);$/;"	p	signature:(INT8U prio, INT8U *err)
OSMutexDel	./h/ucos/uCOS_II.H	/^OS_EVENT     *OSMutexDel(OS_EVENT *pevent, INT8U opt, INT8U *err);$/;"	p	signature:(OS_EVENT *pevent, INT8U opt, INT8U *err)
OSMutexDel	./ucos/os_mutex.c	/^OS_EVENT  *OSMutexDel (OS_EVENT *pevent, INT8U opt, INT8U *err)$/;"	f	signature:(OS_EVENT *pevent, INT8U opt, INT8U *err)
OSMutexDel	./ucos/ucos_ii.h	/^OS_EVENT     *OSMutexDel(OS_EVENT *pevent, INT8U opt, INT8U *err);$/;"	p	signature:(OS_EVENT *pevent, INT8U opt, INT8U *err)
OSMutexEn	./ucos/os_dbg_r.c	/^INT16U  const  OSMutexEn           = OS_MUTEX_EN;$/;"	v
OSMutexPIP	./h/ucos/uCOS_II.H	/^    INT8U   OSMutexPIP;                     \/* Priority Inheritance Priority or 0xFF if no owner       *\/$/;"	m	struct:__anon10	access:public
OSMutexPIP	./ucos/ucos_ii.h	/^    INT8U   OSMutexPIP;                     \/* Priority Inheritance Priority or 0xFF if no owner       *\/$/;"	m	struct:__anon22	access:public
OSMutexPend	./h/ucos/uCOS_II.H	/^void          OSMutexPend(OS_EVENT *pevent, INT16U timeout, INT8U *err);$/;"	p	signature:(OS_EVENT *pevent, INT16U timeout, INT8U *err)
OSMutexPend	./ucos/os_mutex.c	/^void  OSMutexPend (OS_EVENT *pevent, INT16U timeout, INT8U *err)$/;"	f	signature:(OS_EVENT *pevent, INT16U timeout, INT8U *err)
OSMutexPend	./ucos/ucos_ii.h	/^void          OSMutexPend(OS_EVENT *pevent, INT16U timeout, INT8U *err);$/;"	p	signature:(OS_EVENT *pevent, INT16U timeout, INT8U *err)
OSMutexPost	./h/ucos/uCOS_II.H	/^INT8U         OSMutexPost(OS_EVENT *pevent);$/;"	p	signature:(OS_EVENT *pevent)
OSMutexPost	./ucos/os_mutex.c	/^INT8U  OSMutexPost (OS_EVENT *pevent)$/;"	f	signature:(OS_EVENT *pevent)
OSMutexPost	./ucos/ucos_ii.h	/^INT8U         OSMutexPost(OS_EVENT *pevent);$/;"	p	signature:(OS_EVENT *pevent)
OSMutexQuery	./h/ucos/uCOS_II.H	/^INT8U         OSMutexQuery(OS_EVENT *pevent, OS_MUTEX_DATA *pdata);$/;"	p	signature:(OS_EVENT *pevent, OS_MUTEX_DATA *pdata)
OSMutexQuery	./ucos/os_mutex.c	/^INT8U  OSMutexQuery (OS_EVENT *pevent, OS_MUTEX_DATA *pdata)$/;"	f	signature:(OS_EVENT *pevent, OS_MUTEX_DATA *pdata)
OSMutexQuery	./ucos/ucos_ii.h	/^INT8U         OSMutexQuery(OS_EVENT *pevent, OS_MUTEX_DATA *pdata);$/;"	p	signature:(OS_EVENT *pevent, OS_MUTEX_DATA *pdata)
OSNBlks	./h/ucos/uCOS_II.H	/^    INT32U  OSNBlks;                   \/* Total number of blocks in the partition                      *\/$/;"	m	struct:__anon9	access:public
OSNBlks	./ucos/ucos_ii.h	/^    INT32U  OSNBlks;                   \/* Total number of blocks in the partition                      *\/$/;"	m	struct:__anon21	access:public
OSNFree	./h/ucos/uCOS_II.H	/^    INT32U  OSNFree;                   \/* Number of memory blocks free                                 *\/$/;"	m	struct:__anon9	access:public
OSNFree	./ucos/ucos_ii.h	/^    INT32U  OSNFree;                   \/* Number of memory blocks free                                 *\/$/;"	m	struct:__anon21	access:public
OSNMsgs	./h/ucos/uCOS_II.H	/^    INT16U         OSNMsgs;             \/* Number of messages in message queue                         *\/$/;"	m	struct:__anon11	access:public
OSNMsgs	./ucos/ucos_ii.h	/^    INT16U         OSNMsgs;             \/* Number of messages in message queue                         *\/$/;"	m	struct:__anon23	access:public
OSNUsed	./h/ucos/uCOS_II.H	/^    INT32U  OSNUsed;                   \/* Number of memory blocks used                                 *\/$/;"	m	struct:__anon9	access:public
OSNUsed	./ucos/ucos_ii.h	/^    INT32U  OSNUsed;                   \/* Number of memory blocks used                                 *\/$/;"	m	struct:__anon21	access:public
OSOwnerPrio	./h/ucos/uCOS_II.H	/^    INT8U   OSOwnerPrio;                    \/* Mutex owner's task priority or 0xFF if no owner         *\/$/;"	m	struct:__anon10	access:public
OSOwnerPrio	./ucos/ucos_ii.h	/^    INT8U   OSOwnerPrio;                    \/* Mutex owner's task priority or 0xFF if no owner         *\/$/;"	m	struct:__anon22	access:public
OSPrioCur	./h/ucos/uCOS_II.H	/^OS_EXT  INT8U             OSPrioCur;                \/* Priority of current task                        *\/$/;"	v
OSPrioCur	./ucos/ucos_ii.h	/^OS_EXT  INT8U             OSPrioCur;                \/* Priority of current task                        *\/$/;"	v
OSPrioHighRdy	./h/ucos/uCOS_II.H	/^OS_EXT  INT8U             OSPrioHighRdy;            \/* Priority of highest priority task               *\/$/;"	v
OSPrioHighRdy	./ucos/ucos_ii.h	/^OS_EXT  INT8U             OSPrioHighRdy;            \/* Priority of highest priority task               *\/$/;"	v
OSPtrSize	./ucos/os_dbg_r.c	/^INT16U  const  OSPtrSize           = sizeof(void *);            \/* Size in Bytes of a pointer          *\/$/;"	v
OSQAccept	./h/ucos/uCOS_II.H	/^void         *OSQAccept(OS_EVENT *pevent);$/;"	p	signature:(OS_EVENT *pevent)
OSQAccept	./ucos/os_q.c	/^void  *OSQAccept (OS_EVENT *pevent)$/;"	f	signature:(OS_EVENT *pevent)
OSQAccept	./ucos/ucos_ii.h	/^void         *OSQAccept(OS_EVENT *pevent);$/;"	p	signature:(OS_EVENT *pevent)
OSQCreate	./h/ucos/uCOS_II.H	/^OS_EVENT     *OSQCreate(void **start, INT16U size);$/;"	p	signature:(void **start, INT16U size)
OSQCreate	./ucos/os_q.c	/^OS_EVENT  *OSQCreate (void **start, INT16U size)$/;"	f	signature:(void **start, INT16U size)
OSQCreate	./ucos/ucos_ii.h	/^OS_EVENT     *OSQCreate(void **start, INT16U size);$/;"	p	signature:(void **start, INT16U size)
OSQDel	./h/ucos/uCOS_II.H	/^OS_EVENT     *OSQDel(OS_EVENT *pevent, INT8U opt, INT8U *err);$/;"	p	signature:(OS_EVENT *pevent, INT8U opt, INT8U *err)
OSQDel	./ucos/os_q.c	/^OS_EVENT  *OSQDel (OS_EVENT *pevent, INT8U opt, INT8U *err)$/;"	f	signature:(OS_EVENT *pevent, INT8U opt, INT8U *err)
OSQDel	./ucos/ucos_ii.h	/^OS_EVENT     *OSQDel(OS_EVENT *pevent, INT8U opt, INT8U *err);$/;"	p	signature:(OS_EVENT *pevent, INT8U opt, INT8U *err)
OSQEn	./ucos/os_dbg_r.c	/^INT16U  const  OSQEn               = OS_Q_EN;$/;"	v
OSQEnd	./h/ucos/uCOS_II.H	/^    void         **OSQEnd;              \/* Pointer to end   of queue data                              *\/$/;"	m	struct:os_q	access:public
OSQEnd	./ucos/ucos_ii.h	/^    void         **OSQEnd;              \/* Pointer to end   of queue data                              *\/$/;"	m	struct:os_q	access:public
OSQEntries	./h/ucos/uCOS_II.H	/^    INT16U         OSQEntries;          \/* Current number of entries in the queue                      *\/$/;"	m	struct:os_q	access:public
OSQEntries	./ucos/ucos_ii.h	/^    INT16U         OSQEntries;          \/* Current number of entries in the queue                      *\/$/;"	m	struct:os_q	access:public
OSQFlush	./h/ucos/uCOS_II.H	/^INT8U         OSQFlush(OS_EVENT *pevent);$/;"	p	signature:(OS_EVENT *pevent)
OSQFlush	./ucos/os_q.c	/^INT8U  OSQFlush (OS_EVENT *pevent)$/;"	f	signature:(OS_EVENT *pevent)
OSQFlush	./ucos/ucos_ii.h	/^INT8U         OSQFlush(OS_EVENT *pevent);$/;"	p	signature:(OS_EVENT *pevent)
OSQFreeList	./h/ucos/uCOS_II.H	/^OS_EXT  OS_Q             *OSQFreeList;              \/* Pointer to list of free QUEUE control blocks    *\/$/;"	v
OSQFreeList	./ucos/ucos_ii.h	/^OS_EXT  OS_Q             *OSQFreeList;              \/* Pointer to list of free QUEUE control blocks    *\/$/;"	v
OSQIn	./h/ucos/uCOS_II.H	/^    void         **OSQIn;               \/* Pointer to where next message will be inserted  in   the Q  *\/$/;"	m	struct:os_q	access:public
OSQIn	./ucos/ucos_ii.h	/^    void         **OSQIn;               \/* Pointer to where next message will be inserted  in   the Q  *\/$/;"	m	struct:os_q	access:public
OSQMax	./ucos/os_dbg_r.c	/^INT16U  const  OSQMax              = OS_MAX_QS;                 \/* Number of queues                    *\/$/;"	v
OSQOut	./h/ucos/uCOS_II.H	/^    void         **OSQOut;              \/* Pointer to where next message will be extracted from the Q  *\/$/;"	m	struct:os_q	access:public
OSQOut	./ucos/ucos_ii.h	/^    void         **OSQOut;              \/* Pointer to where next message will be extracted from the Q  *\/$/;"	m	struct:os_q	access:public
OSQPend	./h/ucos/uCOS_II.H	/^void         *OSQPend(OS_EVENT *pevent, INT16U timeout, INT8U *err);$/;"	p	signature:(OS_EVENT *pevent, INT16U timeout, INT8U *err)
OSQPend	./ucos/os_q.c	/^void  *OSQPend (OS_EVENT *pevent, INT16U timeout, INT8U *err)$/;"	f	signature:(OS_EVENT *pevent, INT16U timeout, INT8U *err)
OSQPend	./ucos/ucos_ii.h	/^void         *OSQPend(OS_EVENT *pevent, INT16U timeout, INT8U *err);$/;"	p	signature:(OS_EVENT *pevent, INT16U timeout, INT8U *err)
OSQPost	./h/ucos/uCOS_II.H	/^INT8U         OSQPost(OS_EVENT *pevent, void *msg);$/;"	p	signature:(OS_EVENT *pevent, void *msg)
OSQPost	./ucos/os_q.c	/^INT8U  OSQPost (OS_EVENT *pevent, void *msg)$/;"	f	signature:(OS_EVENT *pevent, void *msg)
OSQPost	./ucos/ucos_ii.h	/^INT8U         OSQPost(OS_EVENT *pevent, void *msg);$/;"	p	signature:(OS_EVENT *pevent, void *msg)
OSQPostFront	./h/ucos/uCOS_II.H	/^INT8U         OSQPostFront(OS_EVENT *pevent, void *msg);$/;"	p	signature:(OS_EVENT *pevent, void *msg)
OSQPostFront	./ucos/os_q.c	/^INT8U  OSQPostFront (OS_EVENT *pevent, void *msg)$/;"	f	signature:(OS_EVENT *pevent, void *msg)
OSQPostFront	./ucos/ucos_ii.h	/^INT8U         OSQPostFront(OS_EVENT *pevent, void *msg);$/;"	p	signature:(OS_EVENT *pevent, void *msg)
OSQPostOpt	./h/ucos/uCOS_II.H	/^INT8U         OSQPostOpt(OS_EVENT *pevent, void *msg, INT8U opt);$/;"	p	signature:(OS_EVENT *pevent, void *msg, INT8U opt)
OSQPostOpt	./ucos/os_q.c	/^INT8U  OSQPostOpt (OS_EVENT *pevent, void *msg, INT8U opt)$/;"	f	signature:(OS_EVENT *pevent, void *msg, INT8U opt)
OSQPostOpt	./ucos/ucos_ii.h	/^INT8U         OSQPostOpt(OS_EVENT *pevent, void *msg, INT8U opt);$/;"	p	signature:(OS_EVENT *pevent, void *msg, INT8U opt)
OSQPtr	./h/ucos/uCOS_II.H	/^    struct os_q   *OSQPtr;              \/* Link to next queue control block in list of free blocks     *\/$/;"	m	struct:os_q	typeref:struct:os_q::os_q	access:public
OSQPtr	./ucos/ucos_ii.h	/^    struct os_q   *OSQPtr;              \/* Link to next queue control block in list of free blocks     *\/$/;"	m	struct:os_q	typeref:struct:os_q::os_q	access:public
OSQQuery	./h/ucos/uCOS_II.H	/^INT8U         OSQQuery(OS_EVENT *pevent, OS_Q_DATA *pdata);$/;"	p	signature:(OS_EVENT *pevent, OS_Q_DATA *pdata)
OSQQuery	./ucos/os_q.c	/^INT8U  OSQQuery (OS_EVENT *pevent, OS_Q_DATA *pdata)$/;"	f	signature:(OS_EVENT *pevent, OS_Q_DATA *pdata)
OSQQuery	./ucos/ucos_ii.h	/^INT8U         OSQQuery(OS_EVENT *pevent, OS_Q_DATA *pdata);$/;"	p	signature:(OS_EVENT *pevent, OS_Q_DATA *pdata)
OSQSize	./h/ucos/uCOS_II.H	/^    INT16U         OSQSize;             \/* Size of message queue                                       *\/$/;"	m	struct:__anon11	access:public
OSQSize	./h/ucos/uCOS_II.H	/^    INT16U         OSQSize;             \/* Size of queue (maximum number of entries)                   *\/$/;"	m	struct:os_q	access:public
OSQSize	./ucos/os_dbg_r.c	/^INT16U  const  OSQSize             = 0;$/;"	v
OSQSize	./ucos/os_dbg_r.c	/^INT16U  const  OSQSize             = sizeof(OS_Q);              \/* Size in bytes of OS_Q structure     *\/$/;"	v
OSQSize	./ucos/ucos_ii.h	/^    INT16U         OSQSize;             \/* Size of message queue                                       *\/$/;"	m	struct:__anon23	access:public
OSQSize	./ucos/ucos_ii.h	/^    INT16U         OSQSize;             \/* Size of queue (maximum number of entries)                   *\/$/;"	m	struct:os_q	access:public
OSQStart	./h/ucos/uCOS_II.H	/^    void         **OSQStart;            \/* Pointer to start of queue data                              *\/$/;"	m	struct:os_q	access:public
OSQStart	./ucos/ucos_ii.h	/^    void         **OSQStart;            \/* Pointer to start of queue data                              *\/$/;"	m	struct:os_q	access:public
OSQTbl	./h/ucos/uCOS_II.H	/^OS_EXT  OS_Q              OSQTbl[OS_MAX_QS];        \/* Table of QUEUE control blocks                   *\/$/;"	v
OSQTbl	./ucos/ucos_ii.h	/^OS_EXT  OS_Q              OSQTbl[OS_MAX_QS];        \/* Table of QUEUE control blocks                   *\/$/;"	v
OSRdyGrp	./h/ucos/uCOS_II.H	/^OS_EXT  INT8U             OSRdyGrp;                        \/* Ready list group                         *\/$/;"	v
OSRdyGrp	./ucos/ucos_ii.h	/^OS_EXT  INT8U             OSRdyGrp;                        \/* Ready list group                         *\/$/;"	v
OSRdyTbl	./h/ucos/uCOS_II.H	/^OS_EXT  INT8U             OSRdyTbl[OS_RDY_TBL_SIZE];       \/* Table of tasks which are ready to run    *\/$/;"	v
OSRdyTbl	./ucos/ucos_ii.h	/^OS_EXT  INT8U             OSRdyTbl[OS_RDY_TBL_SIZE];       \/* Table of tasks which are ready to run    *\/$/;"	v
OSRdyTblSize	./ucos/os_dbg_r.c	/^INT16U  const  OSRdyTblSize        = OS_RDY_TBL_SIZE;           \/* Number of bytes in the ready table  *\/$/;"	v
OSRunning	./h/ucos/uCOS_II.H	/^OS_EXT  BOOLEAN           OSRunning;                       \/* Flag indicating that kernel is running   *\/$/;"	v
OSRunning	./ucos/ucos_ii.h	/^OS_EXT  BOOLEAN           OSRunning;                       \/* Flag indicating that kernel is running   *\/$/;"	v
OSSchedLock	./h/ucos/uCOS_II.H	/^void          OSSchedLock(void);$/;"	p	signature:(void)
OSSchedLock	./ucos/os_core.c	/^void  OSSchedLock (void)$/;"	f	signature:(void)
OSSchedLock	./ucos/ucos_ii.h	/^void          OSSchedLock(void);$/;"	p	signature:(void)
OSSchedUnlock	./h/ucos/uCOS_II.H	/^void          OSSchedUnlock(void);$/;"	p	signature:(void)
OSSchedUnlock	./ucos/os_core.c	/^void  OSSchedUnlock (void)$/;"	f	signature:(void)
OSSchedUnlock	./ucos/ucos_ii.h	/^void          OSSchedUnlock(void);$/;"	p	signature:(void)
OSSemAccept	./h/ucos/uCOS_II.H	/^INT16U        OSSemAccept(OS_EVENT *pevent);$/;"	p	signature:(OS_EVENT *pevent)
OSSemAccept	./ucos/os_sem.c	/^INT16U  OSSemAccept (OS_EVENT *pevent)$/;"	f	signature:(OS_EVENT *pevent)
OSSemAccept	./ucos/ucos_ii.h	/^INT16U        OSSemAccept(OS_EVENT *pevent);$/;"	p	signature:(OS_EVENT *pevent)
OSSemCreate	./h/ucos/uCOS_II.H	/^OS_EVENT     *OSSemCreate(INT16U cnt);$/;"	p	signature:(INT16U cnt)
OSSemCreate	./ucos/os_sem.c	/^OS_EVENT  *OSSemCreate (INT16U cnt)$/;"	f	signature:(INT16U cnt)
OSSemCreate	./ucos/ucos_ii.h	/^OS_EVENT     *OSSemCreate(INT16U cnt);$/;"	p	signature:(INT16U cnt)
OSSemDel	./h/ucos/uCOS_II.H	/^OS_EVENT     *OSSemDel(OS_EVENT *pevent, INT8U opt, INT8U *err);$/;"	p	signature:(OS_EVENT *pevent, INT8U opt, INT8U *err)
OSSemDel	./ucos/os_sem.c	/^OS_EVENT  *OSSemDel (OS_EVENT *pevent, INT8U opt, INT8U *err)$/;"	f	signature:(OS_EVENT *pevent, INT8U opt, INT8U *err)
OSSemDel	./ucos/ucos_ii.h	/^OS_EVENT     *OSSemDel(OS_EVENT *pevent, INT8U opt, INT8U *err);$/;"	p	signature:(OS_EVENT *pevent, INT8U opt, INT8U *err)
OSSemEn	./ucos/os_dbg_r.c	/^INT16U  const  OSSemEn             = OS_SEM_EN;$/;"	v
OSSemPend	./h/ucos/uCOS_II.H	/^void          OSSemPend(OS_EVENT *pevent, INT16U timeout, INT8U *err);$/;"	p	signature:(OS_EVENT *pevent, INT16U timeout, INT8U *err)
OSSemPend	./ucos/os_sem.c	/^void  OSSemPend (OS_EVENT *pevent, INT16U timeout, INT8U *err)$/;"	f	signature:(OS_EVENT *pevent, INT16U timeout, INT8U *err)
OSSemPend	./ucos/ucos_ii.h	/^void          OSSemPend(OS_EVENT *pevent, INT16U timeout, INT8U *err);$/;"	p	signature:(OS_EVENT *pevent, INT16U timeout, INT8U *err)
OSSemPost	./h/ucos/uCOS_II.H	/^INT8U         OSSemPost(OS_EVENT *pevent);$/;"	p	signature:(OS_EVENT *pevent)
OSSemPost	./ucos/os_sem.c	/^INT8U  OSSemPost (OS_EVENT *pevent)$/;"	f	signature:(OS_EVENT *pevent)
OSSemPost	./ucos/ucos_ii.h	/^INT8U         OSSemPost(OS_EVENT *pevent);$/;"	p	signature:(OS_EVENT *pevent)
OSSemQuery	./h/ucos/uCOS_II.H	/^INT8U         OSSemQuery(OS_EVENT *pevent, OS_SEM_DATA *pdata);$/;"	p	signature:(OS_EVENT *pevent, OS_SEM_DATA *pdata)
OSSemQuery	./ucos/os_sem.c	/^INT8U  OSSemQuery (OS_EVENT *pevent, OS_SEM_DATA *pdata)$/;"	f	signature:(OS_EVENT *pevent, OS_SEM_DATA *pdata)
OSSemQuery	./ucos/ucos_ii.h	/^INT8U         OSSemQuery(OS_EVENT *pevent, OS_SEM_DATA *pdata);$/;"	p	signature:(OS_EVENT *pevent, OS_SEM_DATA *pdata)
OSStart	./h/ucos/uCOS_II.H	/^void          OSStart(void);$/;"	p	signature:(void)
OSStart	./ucos/os_core.c	/^void  OSStart (void)$/;"	f	signature:(void)
OSStart	./ucos/ucos_ii.h	/^void          OSStart(void);$/;"	p	signature:(void)
OSStartHighRdy	./h/ucos/uCOS_II.H	/^void          OSStartHighRdy(void);$/;"	p	signature:(void)
OSStartHighRdy	./port/OS_Cpu_a.s	/^OSStartHighRdy:$/;"	l
OSStartHighRdy	./ucos/ucos_ii.h	/^void          OSStartHighRdy(void);$/;"	p	signature:(void)
OSStatInit	./h/ucos/uCOS_II.H	/^void          OSStatInit(void);$/;"	p	signature:(void)
OSStatInit	./ucos/os_core.c	/^void  OSStatInit (void)$/;"	f	signature:(void)
OSStatInit	./ucos/ucos_ii.h	/^void          OSStatInit(void);$/;"	p	signature:(void)
OSStatRdy	./h/ucos/uCOS_II.H	/^OS_EXT  BOOLEAN           OSStatRdy;                \/* Flag indicating that the statistic task is rdy  *\/$/;"	v
OSStatRdy	./ucos/ucos_ii.h	/^OS_EXT  BOOLEAN           OSStatRdy;                \/* Flag indicating that the statistic task is rdy  *\/$/;"	v
OSStkWidth	./ucos/os_dbg_r.c	/^INT16U  const  OSStkWidth          = sizeof(OS_STK);            \/* Size in Bytes of a stack entry      *\/$/;"	v
OSTCBBitX	./h/ucos/uCOS_II.H	/^    INT8U          OSTCBBitX;          \/* Bit mask to access bit position in ready table               *\/$/;"	m	struct:os_tcb	access:public
OSTCBBitX	./ucos/ucos_ii.h	/^    INT8U          OSTCBBitX;          \/* Bit mask to access bit position in ready table               *\/$/;"	m	struct:os_tcb	access:public
OSTCBBitY	./h/ucos/uCOS_II.H	/^    INT8U          OSTCBBitY;          \/* Bit mask to access bit position in ready group               *\/$/;"	m	struct:os_tcb	access:public
OSTCBBitY	./ucos/ucos_ii.h	/^    INT8U          OSTCBBitY;          \/* Bit mask to access bit position in ready group               *\/$/;"	m	struct:os_tcb	access:public
OSTCBCur	./h/ucos/uCOS_II.H	/^OS_EXT  OS_TCB           *OSTCBCur;                        \/* Pointer to currently running TCB         *\/$/;"	v
OSTCBCur	./ucos/ucos_ii.h	/^OS_EXT  OS_TCB           *OSTCBCur;                        \/* Pointer to currently running TCB         *\/$/;"	v
OSTCBDelReq	./h/ucos/uCOS_II.H	/^    INT8U        OSTCBDelReq;        \/* Indicates whether a task needs to delete itself              *\/$/;"	m	struct:os_tcb	access:public
OSTCBDelReq	./ucos/ucos_ii.h	/^    BOOLEAN        OSTCBDelReq;        \/* Indicates whether a task needs to delete itself              *\/$/;"	m	struct:os_tcb	access:public
OSTCBDly	./h/ucos/uCOS_II.H	/^    INT16U         OSTCBDly;           \/* Nbr ticks to delay task or, timeout waiting for event        *\/$/;"	m	struct:os_tcb	access:public
OSTCBDly	./ucos/ucos_ii.h	/^    INT16U         OSTCBDly;           \/* Nbr ticks to delay task or, timeout waiting for event        *\/$/;"	m	struct:os_tcb	access:public
OSTCBEventPtr	./h/ucos/uCOS_II.H	/^    OS_EVENT      *OSTCBEventPtr;      \/* Pointer to event control block                               *\/$/;"	m	struct:os_tcb	access:public
OSTCBEventPtr	./ucos/ucos_ii.h	/^    OS_EVENT      *OSTCBEventPtr;      \/* Pointer to event control block                               *\/$/;"	m	struct:os_tcb	access:public
OSTCBExtPtr	./h/ucos/uCOS_II.H	/^    void          *OSTCBExtPtr;        \/* Pointer to user definable data for TCB extension             *\/$/;"	m	struct:os_tcb	access:public
OSTCBExtPtr	./ucos/ucos_ii.h	/^    void          *OSTCBExtPtr;        \/* Pointer to user definable data for TCB extension             *\/$/;"	m	struct:os_tcb	access:public
OSTCBFlagNode	./h/ucos/uCOS_II.H	/^    OS_FLAG_NODE  *OSTCBFlagNode;      \/* Pointer to event flag node                                   *\/$/;"	m	struct:os_tcb	access:public
OSTCBFlagNode	./ucos/ucos_ii.h	/^    OS_FLAG_NODE  *OSTCBFlagNode;      \/* Pointer to event flag node                                   *\/$/;"	m	struct:os_tcb	access:public
OSTCBFlagsRdy	./h/ucos/uCOS_II.H	/^    OS_FLAGS       OSTCBFlagsRdy;      \/* Event flags that made task ready to run                      *\/$/;"	m	struct:os_tcb	access:public
OSTCBFlagsRdy	./ucos/ucos_ii.h	/^    OS_FLAGS       OSTCBFlagsRdy;      \/* Event flags that made task ready to run                      *\/$/;"	m	struct:os_tcb	access:public
OSTCBFreeList	./h/ucos/uCOS_II.H	/^OS_EXT  OS_TCB           *OSTCBFreeList;                   \/* Pointer to list of free TCBs             *\/$/;"	v
OSTCBFreeList	./ucos/ucos_ii.h	/^OS_EXT  OS_TCB           *OSTCBFreeList;                   \/* Pointer to list of free TCBs             *\/$/;"	v
OSTCBHighRdy	./h/ucos/uCOS_II.H	/^OS_EXT  OS_TCB           *OSTCBHighRdy;                    \/* Pointer to highest priority TCB R-to-R   *\/$/;"	v
OSTCBHighRdy	./ucos/ucos_ii.h	/^OS_EXT  OS_TCB           *OSTCBHighRdy;                    \/* Pointer to highest priority TCB R-to-R   *\/$/;"	v
OSTCBId	./h/ucos/uCOS_II.H	/^    INT16U         OSTCBId;            \/* Task ID (0..65535)                                           *\/$/;"	m	struct:os_tcb	access:public
OSTCBId	./ucos/ucos_ii.h	/^    INT16U         OSTCBId;            \/* Task ID (0..65535)                                           *\/$/;"	m	struct:os_tcb	access:public
OSTCBInitHook	./h/ucos/uCOS_II.H	/^void          OSTCBInitHook(OS_TCB *ptcb);$/;"	p	signature:(OS_TCB *ptcb)
OSTCBInitHook	./port/OS_Cpu_c.c	/^void  OSTCBInitHook (OS_TCB *ptcb)$/;"	f	signature:(OS_TCB *ptcb)
OSTCBInitHook	./ucos/ucos_ii.h	/^void          OSTCBInitHook(OS_TCB *ptcb);$/;"	p	signature:(OS_TCB *ptcb)
OSTCBList	./h/ucos/uCOS_II.H	/^OS_EXT  OS_TCB           *OSTCBList;                       \/* Pointer to doubly linked list of TCBs    *\/$/;"	v
OSTCBList	./ucos/ucos_ii.h	/^OS_EXT  OS_TCB           *OSTCBList;                       \/* Pointer to doubly linked list of TCBs    *\/$/;"	v
OSTCBMsg	./h/ucos/uCOS_II.H	/^    void          *OSTCBMsg;           \/* Message received from OSMboxPost() or OSQPost()              *\/$/;"	m	struct:os_tcb	access:public
OSTCBMsg	./ucos/ucos_ii.h	/^    void          *OSTCBMsg;           \/* Message received from OSMboxPost() or OSQPost()              *\/$/;"	m	struct:os_tcb	access:public
OSTCBNext	./h/ucos/uCOS_II.H	/^    struct os_tcb *OSTCBNext;          \/* Pointer to next     TCB in the TCB list                      *\/$/;"	m	struct:os_tcb	typeref:struct:os_tcb::os_tcb	access:public
OSTCBNext	./ucos/ucos_ii.h	/^    struct os_tcb *OSTCBNext;          \/* Pointer to next     TCB in the TCB list                      *\/$/;"	m	struct:os_tcb	typeref:struct:os_tcb::os_tcb	access:public
OSTCBOpt	./h/ucos/uCOS_II.H	/^    INT16U         OSTCBOpt;           \/* Task options as passed by OSTaskCreateExt()                  *\/$/;"	m	struct:os_tcb	access:public
OSTCBOpt	./ucos/ucos_ii.h	/^    INT16U         OSTCBOpt;           \/* Task options as passed by OSTaskCreateExt()                  *\/$/;"	m	struct:os_tcb	access:public
OSTCBPrev	./h/ucos/uCOS_II.H	/^    struct os_tcb *OSTCBPrev;          \/* Pointer to previous TCB in the TCB list                      *\/$/;"	m	struct:os_tcb	typeref:struct:os_tcb::os_tcb	access:public
OSTCBPrev	./ucos/ucos_ii.h	/^    struct os_tcb *OSTCBPrev;          \/* Pointer to previous TCB in the TCB list                      *\/$/;"	m	struct:os_tcb	typeref:struct:os_tcb::os_tcb	access:public
OSTCBPrio	./h/ucos/uCOS_II.H	/^    INT8U          OSTCBPrio;          \/* Task priority (0 == highest, 63 == lowest)                   *\/$/;"	m	struct:os_tcb	access:public
OSTCBPrio	./ucos/ucos_ii.h	/^    INT8U          OSTCBPrio;          \/* Task priority (0 == highest, 63 == lowest)                   *\/$/;"	m	struct:os_tcb	access:public
OSTCBPrioTbl	./h/ucos/uCOS_II.H	/^OS_EXT  OS_TCB           *OSTCBPrioTbl[OS_LOWEST_PRIO + 1];\/* Table of pointers to created TCBs        *\/$/;"	v
OSTCBPrioTbl	./ucos/ucos_ii.h	/^OS_EXT  OS_TCB           *OSTCBPrioTbl[OS_LOWEST_PRIO + 1];\/* Table of pointers to created TCBs        *\/$/;"	v
OSTCBPrioTblMax	./ucos/os_dbg_r.c	/^INT16U  const  OSTCBPrioTblMax     = OS_LOWEST_PRIO + 1;        \/* Number of entries in OSTCBPrioTbl[] *\/$/;"	v
OSTCBSize	./ucos/os_dbg_r.c	/^INT16U  const  OSTCBSize           = sizeof(OS_TCB);            \/* Size in Bytes of OS_TCB             *\/$/;"	v
OSTCBStat	./h/ucos/uCOS_II.H	/^    INT8U          OSTCBStat;          \/* Task status                                                  *\/$/;"	m	struct:os_tcb	access:public
OSTCBStat	./ucos/ucos_ii.h	/^    INT8U          OSTCBStat;          \/* Task status                                                  *\/$/;"	m	struct:os_tcb	access:public
OSTCBStkBottom	./h/ucos/uCOS_II.H	/^    OS_STK        *OSTCBStkBottom;     \/* Pointer to bottom of stack                                   *\/$/;"	m	struct:os_tcb	access:public
OSTCBStkBottom	./ucos/ucos_ii.h	/^    OS_STK        *OSTCBStkBottom;     \/* Pointer to bottom of stack                                   *\/$/;"	m	struct:os_tcb	access:public
OSTCBStkPtr	./h/ucos/uCOS_II.H	/^    OS_STK        *OSTCBStkPtr;        \/* Pointer to current top of stack                              *\/$/;"	m	struct:os_tcb	access:public
OSTCBStkPtr	./ucos/ucos_ii.h	/^    OS_STK        *OSTCBStkPtr;        \/* Pointer to current top of stack                              *\/$/;"	m	struct:os_tcb	access:public
OSTCBStkSize	./h/ucos/uCOS_II.H	/^    INT32U         OSTCBStkSize;       \/* Size of task stack (in number of stack elements)             *\/$/;"	m	struct:os_tcb	access:public
OSTCBStkSize	./ucos/ucos_ii.h	/^    INT32U         OSTCBStkSize;       \/* Size of task stack (in number of stack elements)             *\/$/;"	m	struct:os_tcb	access:public
OSTCBTbl	./h/ucos/uCOS_II.H	/^OS_EXT  OS_TCB            OSTCBTbl[OS_MAX_TASKS + OS_N_SYS_TASKS];   \/* Table of TCBs                  *\/$/;"	v
OSTCBTbl	./ucos/ucos_ii.h	/^OS_EXT  OS_TCB            OSTCBTbl[OS_MAX_TASKS + OS_N_SYS_TASKS];   \/* Table of TCBs                  *\/$/;"	v
OSTCBX	./h/ucos/uCOS_II.H	/^    INT8U          OSTCBX;             \/* Bit position in group  corresponding to task priority (0..7) *\/$/;"	m	struct:os_tcb	access:public
OSTCBX	./ucos/ucos_ii.h	/^    INT8U          OSTCBX;             \/* Bit position in group  corresponding to task priority (0..7) *\/$/;"	m	struct:os_tcb	access:public
OSTCBY	./h/ucos/uCOS_II.H	/^    INT8U          OSTCBY;             \/* Index into ready table corresponding to task priority        *\/$/;"	m	struct:os_tcb	access:public
OSTCBY	./ucos/ucos_ii.h	/^    INT8U          OSTCBY;             \/* Index into ready table corresponding to task priority        *\/$/;"	m	struct:os_tcb	access:public
OSTaskChangePrio	./h/ucos/uCOS_II.H	/^INT8U         OSTaskChangePrio(INT8U oldprio, INT8U newprio);$/;"	p	signature:(INT8U oldprio, INT8U newprio)
OSTaskChangePrio	./ucos/os_task.c	/^INT8U  OSTaskChangePrio (INT8U oldprio, INT8U newprio)$/;"	f	signature:(INT8U oldprio, INT8U newprio)
OSTaskChangePrio	./ucos/ucos_ii.h	/^INT8U         OSTaskChangePrio(INT8U oldprio, INT8U newprio);$/;"	p	signature:(INT8U oldprio, INT8U newprio)
OSTaskCreate	./h/ucos/uCOS_II.H	/^INT8U         OSTaskCreate(void (*task)(void *pd), void *pdata, OS_STK *ptos, INT8U prio);$/;"	p	signature:(void (*task)(void *pd), void *pdata, OS_STK *ptos, INT8U prio)
OSTaskCreate	./ucos/os_task.c	/^INT8U  OSTaskCreate (void (*task)(void *pd), void *pdata, OS_STK *ptos, INT8U prio)$/;"	f	signature:(void (*task)(void *pd), void *pdata, OS_STK *ptos, INT8U prio)
OSTaskCreate	./ucos/ucos_ii.h	/^INT8U         OSTaskCreate(void (*task)(void *pd), void *pdata, OS_STK *ptos, INT8U prio);$/;"	p	signature:(void (*task)(void *pd), void *pdata, OS_STK *ptos, INT8U prio)
OSTaskCreateEn	./ucos/os_dbg_r.c	/^INT16U  const  OSTaskCreateEn      = OS_TASK_CREATE_EN;$/;"	v
OSTaskCreateExt	./h/ucos/uCOS_II.H	/^INT8U         OSTaskCreateExt(void  (*task)(void *pd),$/;"	p	signature:(void (*task)(void *pd), void *pdata, OS_STK *ptos, INT8U prio, INT16U id, OS_STK *pbos, INT32U stk_size, void *pext, INT16U opt)
OSTaskCreateExt	./ucos/os_task.c	/^INT8U  OSTaskCreateExt (void   (*task)(void *pd),$/;"	f	signature:(void (*task)(void *pd), void *pdata, OS_STK *ptos, INT8U prio, INT16U id, OS_STK *pbos, INT32U stk_size, void *pext, INT16U opt)
OSTaskCreateExt	./ucos/ucos_ii.h	/^INT8U         OSTaskCreateExt(void  (*task)(void *pd),$/;"	p	signature:(void (*task)(void *pd), void *pdata, OS_STK *ptos, INT8U prio, INT16U id, OS_STK *pbos, INT32U stk_size, void *pext, INT16U opt)
OSTaskCreateExtEn	./ucos/os_dbg_r.c	/^INT16U  const  OSTaskCreateExtEn   = OS_TASK_CREATE_EXT_EN;$/;"	v
OSTaskCreateHook	./h/ucos/uCOS_II.H	/^void          OSTaskCreateHook(OS_TCB *ptcb);$/;"	p	signature:(OS_TCB *ptcb)
OSTaskCreateHook	./port/OS_Cpu_c.c	/^OSTaskCreateHook ($/;"	f	signature:( OS_TCB *ptcb)
OSTaskCreateHook	./ucos/ucos_ii.h	/^void          OSTaskCreateHook(OS_TCB *ptcb);$/;"	p	signature:(OS_TCB *ptcb)
OSTaskCtr	./h/ucos/uCOS_II.H	/^OS_EXT  INT8U             OSTaskCtr;                       \/* Number of tasks created                  *\/$/;"	v
OSTaskCtr	./ucos/ucos_ii.h	/^OS_EXT  INT8U             OSTaskCtr;                       \/* Number of tasks created                  *\/$/;"	v
OSTaskDel	./h/ucos/uCOS_II.H	/^INT8U         OSTaskDel(INT8U prio);$/;"	p	signature:(INT8U prio)
OSTaskDel	./ucos/os_task.c	/^INT8U  OSTaskDel (INT8U prio)$/;"	f	signature:(INT8U prio)
OSTaskDel	./ucos/ucos_ii.h	/^INT8U         OSTaskDel(INT8U prio);$/;"	p	signature:(INT8U prio)
OSTaskDelEn	./ucos/os_dbg_r.c	/^INT16U  const  OSTaskDelEn         = OS_TASK_DEL_EN;$/;"	v
OSTaskDelHook	./h/ucos/uCOS_II.H	/^void          OSTaskDelHook(OS_TCB *ptcb);$/;"	p	signature:(OS_TCB *ptcb)
OSTaskDelHook	./port/OS_Cpu_c.c	/^OSTaskDelHook ($/;"	f	signature:( OS_TCB *ptcb)
OSTaskDelHook	./ucos/ucos_ii.h	/^void          OSTaskDelHook(OS_TCB *ptcb);$/;"	p	signature:(OS_TCB *ptcb)
OSTaskDelReq	./h/ucos/uCOS_II.H	/^INT8U         OSTaskDelReq(INT8U prio);$/;"	p	signature:(INT8U prio)
OSTaskDelReq	./ucos/os_task.c	/^INT8U  OSTaskDelReq (INT8U prio)$/;"	f	signature:(INT8U prio)
OSTaskDelReq	./ucos/ucos_ii.h	/^INT8U         OSTaskDelReq(INT8U prio);$/;"	p	signature:(INT8U prio)
OSTaskIdleHook	./h/ucos/uCOS_II.H	/^void          OSTaskIdleHook(void);$/;"	p	signature:(void)
OSTaskIdleHook	./port/OS_Cpu_c.c	/^void  OSTaskIdleHook (void)$/;"	f	signature:(void)
OSTaskIdleHook	./ucos/ucos_ii.h	/^void          OSTaskIdleHook(void);$/;"	p	signature:(void)
OSTaskIdleStk	./h/ucos/uCOS_II.H	/^OS_EXT  OS_STK            OSTaskIdleStk[OS_TASK_IDLE_STK_SIZE];      \/* Idle task stack                *\/$/;"	v
OSTaskIdleStk	./ucos/ucos_ii.h	/^OS_EXT  OS_STK            OSTaskIdleStk[OS_TASK_IDLE_STK_SIZE];      \/* Idle task stack                *\/$/;"	v
OSTaskIdleStkSize	./ucos/os_dbg_r.c	/^INT16U  const  OSTaskIdleStkSize   = OS_TASK_IDLE_STK_SIZE;$/;"	v
OSTaskMax	./ucos/os_dbg_r.c	/^INT16U  const  OSTaskMax           = OS_MAX_TASKS + OS_N_SYS_TASKS; \/* Total max. number of tasks      *\/$/;"	v
OSTaskNameSize	./ucos/os_dbg_r.c	/^INT16U  const  OSTaskNameSize      = OS_TASK_NAME_SIZE;             \/* Size (in bytes) of task names   *\/$/;"	v
OSTaskProfileEn	./ucos/os_dbg_r.c	/^INT16U  const  OSTaskProfileEn     = OS_TASK_PROFILE_EN;$/;"	v
OSTaskQuery	./h/ucos/uCOS_II.H	/^INT8U         OSTaskQuery(INT8U prio, OS_TCB *pdata);$/;"	p	signature:(INT8U prio, OS_TCB *pdata)
OSTaskQuery	./ucos/os_task.c	/^INT8U  OSTaskQuery (INT8U prio, OS_TCB *pdata)$/;"	f	signature:(INT8U prio, OS_TCB *pdata)
OSTaskQuery	./ucos/ucos_ii.h	/^INT8U         OSTaskQuery(INT8U prio, OS_TCB *pdata);$/;"	p	signature:(INT8U prio, OS_TCB *pdata)
OSTaskResume	./h/ucos/uCOS_II.H	/^INT8U         OSTaskResume(INT8U prio);$/;"	p	signature:(INT8U prio)
OSTaskResume	./ucos/os_task.c	/^INT8U  OSTaskResume (INT8U prio)$/;"	f	signature:(INT8U prio)
OSTaskResume	./ucos/ucos_ii.h	/^INT8U         OSTaskResume(INT8U prio);$/;"	p	signature:(INT8U prio)
OSTaskStatEn	./ucos/os_dbg_r.c	/^INT16U  const  OSTaskStatEn        = OS_TASK_STAT_EN;$/;"	v
OSTaskStatHook	./h/ucos/uCOS_II.H	/^void          OSTaskStatHook(void);$/;"	p	signature:(void)
OSTaskStatHook	./port/OS_Cpu_c.c	/^OSTaskStatHook ($/;"	f	signature:( void )
OSTaskStatHook	./ucos/ucos_ii.h	/^void          OSTaskStatHook(void);$/;"	p	signature:(void)
OSTaskStatStk	./h/ucos/uCOS_II.H	/^OS_EXT  OS_STK            OSTaskStatStk[OS_TASK_STAT_STK_SIZE];      \/* Statistics task stack          *\/$/;"	v
OSTaskStatStk	./ucos/ucos_ii.h	/^OS_EXT  OS_STK            OSTaskStatStk[OS_TASK_STAT_STK_SIZE];      \/* Statistics task stack          *\/$/;"	v
OSTaskStatStkChkEn	./ucos/os_dbg_r.c	/^INT16U  const  OSTaskStatStkChkEn  = OS_TASK_STAT_STK_CHK_EN;$/;"	v
OSTaskStatStkSize	./ucos/os_dbg_r.c	/^INT16U  const  OSTaskStatStkSize   = OS_TASK_STAT_STK_SIZE;$/;"	v
OSTaskStkChk	./h/ucos/uCOS_II.H	/^INT8U         OSTaskStkChk(INT8U prio, OS_STK_DATA *pdata);$/;"	p	signature:(INT8U prio, OS_STK_DATA *pdata)
OSTaskStkChk	./ucos/os_task.c	/^INT8U  OSTaskStkChk (INT8U prio, OS_STK_DATA *pdata)$/;"	f	signature:(INT8U prio, OS_STK_DATA *pdata)
OSTaskStkChk	./ucos/ucos_ii.h	/^INT8U         OSTaskStkChk(INT8U prio, OS_STK_DATA *pdata);$/;"	p	signature:(INT8U prio, OS_STK_DATA *pdata)
OSTaskStkInit	./h/ucos/uCOS_II.H	/^OS_STK       *OSTaskStkInit(void (*task)(void *pd), void *pdata, OS_STK *ptos, INT16U opt);$/;"	p	signature:(void (*task)(void *pd), void *pdata, OS_STK *ptos, INT16U opt)
OSTaskStkInit	./port/OS_Cpu_c.c	/^OS_STK       *OSTaskStkInit(void (*task)(void *pd), void *pdata, OS_STK *ptos, INT16U opt)$/;"	f	signature:(void (*task)(void *pd), void *pdata, OS_STK *ptos, INT16U opt)
OSTaskStkInit	./ucos/ucos_ii.h	/^OS_STK       *OSTaskStkInit(void (*task)(void *pd), void *pdata, OS_STK *ptos, INT16U opt);$/;"	p	signature:(void (*task)(void *pd), void *pdata, OS_STK *ptos, INT16U opt)
OSTaskSuspend	./h/ucos/uCOS_II.H	/^INT8U         OSTaskSuspend(INT8U prio);$/;"	p	signature:(INT8U prio)
OSTaskSuspend	./ucos/os_task.c	/^INT8U  OSTaskSuspend (INT8U prio)$/;"	f	signature:(INT8U prio)
OSTaskSuspend	./ucos/ucos_ii.h	/^INT8U         OSTaskSuspend(INT8U prio);$/;"	p	signature:(INT8U prio)
OSTaskSwHook	./h/ucos/uCOS_II.H	/^void          OSTaskSwHook(void);$/;"	p	signature:(void)
OSTaskSwHook	./port/OS_Cpu_c.c	/^OSTaskSwHook ($/;"	f	signature:( void )
OSTaskSwHook	./ucos/ucos_ii.h	/^void          OSTaskSwHook(void);$/;"	p	signature:(void)
OSTaskSwHookEn	./ucos/os_dbg_r.c	/^INT16U  const  OSTaskSwHookEn      = OS_TASK_SW_HOOK_EN;$/;"	v
OSTickISR	./h/ucos/uCOS_II.H	/^void          OSTickISR(void);$/;"	p	signature:(void)
OSTickISR	./ucos/ucos_ii.h	/^void          OSTickISR(void);$/;"	p	signature:(void)
OSTicksPerSec	./ucos/os_dbg_r.c	/^INT16U  const  OSTicksPerSec       = OS_TICKS_PER_SEC;$/;"	v
OSTime	./h/ucos/uCOS_II.H	/^OS_EXT  volatile  INT32U  OSTime;                   \/* Current value of system time (in ticks)         *\/$/;"	v
OSTime	./ucos/ucos_ii.h	/^OS_EXT  volatile  INT32U  OSTime;                   \/* Current value of system time (in ticks)         *\/$/;"	v
OSTimeDly	./h/ucos/uCOS_II.H	/^void          OSTimeDly(INT16U ticks);$/;"	p	signature:(INT16U ticks)
OSTimeDly	./ucos/os_time.c	/^void  OSTimeDly (INT16U ticks)$/;"	f	signature:(INT16U ticks)
OSTimeDly	./ucos/ucos_ii.h	/^void          OSTimeDly(INT16U ticks);$/;"	p	signature:(INT16U ticks)
OSTimeDlyHMSM	./h/ucos/uCOS_II.H	/^INT8U         OSTimeDlyHMSM(INT8U hours, INT8U minutes, INT8U seconds, INT16U milli);$/;"	p	signature:(INT8U hours, INT8U minutes, INT8U seconds, INT16U milli)
OSTimeDlyHMSM	./ucos/os_time.c	/^INT8U  OSTimeDlyHMSM (INT8U hours, INT8U minutes, INT8U seconds, INT16U milli)$/;"	f	signature:(INT8U hours, INT8U minutes, INT8U seconds, INT16U milli)
OSTimeDlyHMSM	./ucos/ucos_ii.h	/^INT8U         OSTimeDlyHMSM(INT8U hours, INT8U minutes, INT8U seconds, INT16U milli);$/;"	p	signature:(INT8U hours, INT8U minutes, INT8U seconds, INT16U milli)
OSTimeDlyResume	./h/ucos/uCOS_II.H	/^INT8U         OSTimeDlyResume(INT8U prio);$/;"	p	signature:(INT8U prio)
OSTimeDlyResume	./ucos/os_time.c	/^INT8U  OSTimeDlyResume (INT8U prio)$/;"	f	signature:(INT8U prio)
OSTimeDlyResume	./ucos/ucos_ii.h	/^INT8U         OSTimeDlyResume(INT8U prio);$/;"	p	signature:(INT8U prio)
OSTimeGet	./h/ucos/uCOS_II.H	/^INT32U        OSTimeGet(void);$/;"	p	signature:(void)
OSTimeGet	./ucos/os_time.c	/^INT32U  OSTimeGet (void)$/;"	f	signature:(void)
OSTimeGet	./ucos/ucos_ii.h	/^INT32U        OSTimeGet(void);$/;"	p	signature:(void)
OSTimeSet	./h/ucos/uCOS_II.H	/^void          OSTimeSet(INT32U ticks);$/;"	p	signature:(INT32U ticks)
OSTimeSet	./ucos/os_time.c	/^void  OSTimeSet (INT32U ticks)$/;"	f	signature:(INT32U ticks)
OSTimeSet	./ucos/ucos_ii.h	/^void          OSTimeSet(INT32U ticks);$/;"	p	signature:(INT32U ticks)
OSTimeTick	./h/ucos/uCOS_II.H	/^void          OSTimeTick(void);$/;"	p	signature:(void)
OSTimeTick	./ucos/os_core.c	/^void  OSTimeTick (void)$/;"	f	signature:(void)
OSTimeTick	./ucos/ucos_ii.h	/^void          OSTimeTick(void);$/;"	p	signature:(void)
OSTimeTickHook	./h/ucos/uCOS_II.H	/^void          OSTimeTickHook(void);$/;"	p	signature:(void)
OSTimeTickHook	./port/OS_Cpu_c.c	/^OSTimeTickHook ($/;"	f	signature:( void)
OSTimeTickHook	./ucos/ucos_ii.h	/^void          OSTimeTickHook(void);$/;"	p	signature:(void)
OSTimeTickHookEn	./ucos/os_dbg_r.c	/^INT16U  const  OSTimeTickHookEn    = OS_TIME_TICK_HOOK_EN;$/;"	v
OSTmrCfgMax	./ucos/os_dbg_r.c	/^INT16U  const  OSTmrCfgMax         = OS_TMR_CFG_MAX;$/;"	v
OSTmrCfgNameSize	./ucos/os_dbg_r.c	/^INT16U  const  OSTmrCfgNameSize    = OS_TMR_CFG_NAME_SIZE;$/;"	v
OSTmrCfgTicksPerSec	./ucos/os_dbg_r.c	/^INT16U  const  OSTmrCfgTicksPerSec = OS_TMR_CFG_TICKS_PER_SEC;$/;"	v
OSTmrCfgWheelSize	./ucos/os_dbg_r.c	/^INT16U  const  OSTmrCfgWheelSize   = OS_TMR_CFG_WHEEL_SIZE;$/;"	v
OSTmrCreate	./ucos/os_tmr.c	/^OS_TMR  *OSTmrCreate (INT32U           dly,$/;"	f	signature:(INT32U dly, INT32U period, INT8U opt, OS_TMR_CALLBACK callback, void *callback_arg, INT8U *pname, INT8U *perr)
OSTmrDel	./ucos/os_tmr.c	/^BOOLEAN  OSTmrDel (OS_TMR  *ptmr,$/;"	f	signature:(OS_TMR *ptmr, INT8U *perr)
OSTmrEn	./ucos/os_dbg_r.c	/^INT16U  const  OSTmrEn             = OS_TMR_EN;$/;"	v
OSTmrNameGet	./ucos/os_tmr.c	/^INT8U  OSTmrNameGet (OS_TMR  *ptmr,$/;"	f	signature:(OS_TMR *ptmr, INT8U *pdest, INT8U *perr)
OSTmrRemainGet	./ucos/os_tmr.c	/^INT32U  OSTmrRemainGet (OS_TMR  *ptmr,$/;"	f	signature:(OS_TMR *ptmr, INT8U *perr)
OSTmrSignal	./ucos/os_tmr.c	/^INT8U  OSTmrSignal (void)$/;"	f	signature:(void)
OSTmrSize	./ucos/os_dbg_r.c	/^INT16U  const  OSTmrSize           = 0;$/;"	v
OSTmrSize	./ucos/os_dbg_r.c	/^INT16U  const  OSTmrSize           = sizeof(OS_TMR);$/;"	v
OSTmrStart	./ucos/os_tmr.c	/^BOOLEAN  OSTmrStart (OS_TMR   *ptmr,$/;"	f	signature:(OS_TMR *ptmr, INT8U *perr)
OSTmrStateGet	./ucos/os_tmr.c	/^INT8U  OSTmrStateGet (OS_TMR  *ptmr,$/;"	f	signature:(OS_TMR *ptmr, INT8U *perr)
OSTmrStop	./ucos/os_tmr.c	/^BOOLEAN  OSTmrStop (OS_TMR  *ptmr,$/;"	f	signature:(OS_TMR *ptmr, INT8U opt, void *callback_arg, INT8U *perr)
OSTmrTblSize	./ucos/os_dbg_r.c	/^INT16U  const  OSTmrTblSize        = 0;$/;"	v
OSTmrTblSize	./ucos/os_dbg_r.c	/^INT16U  const  OSTmrTblSize        = sizeof(OSTmrTbl);$/;"	v
OSTmrWheelSize	./ucos/os_dbg_r.c	/^INT16U  const  OSTmrWheelSize      = 0;$/;"	v
OSTmrWheelSize	./ucos/os_dbg_r.c	/^INT16U  const  OSTmrWheelSize      = sizeof(OS_TMR_WHEEL);$/;"	v
OSTmrWheelTblSize	./ucos/os_dbg_r.c	/^INT16U  const  OSTmrWheelTblSize   = 0;$/;"	v
OSTmrWheelTblSize	./ucos/os_dbg_r.c	/^INT16U  const  OSTmrWheelTblSize   = sizeof(OSTmrWheelTbl);$/;"	v
OSTmr_Alloc	./ucos/os_tmr.c	/^static  OS_TMR  *OSTmr_Alloc         (void);$/;"	p	file:	signature:(void)
OSTmr_Alloc	./ucos/os_tmr.c	/^static  OS_TMR  *OSTmr_Alloc (void)$/;"	f	file:	signature:(void)
OSTmr_Free	./ucos/os_tmr.c	/^static  void     OSTmr_Free          (OS_TMR *ptmr);$/;"	p	file:	signature:(OS_TMR *ptmr)
OSTmr_Free	./ucos/os_tmr.c	/^static  void  OSTmr_Free (OS_TMR *ptmr)$/;"	f	file:	signature:(OS_TMR *ptmr)
OSTmr_Init	./ucos/os_tmr.c	/^void  OSTmr_Init (void)$/;"	f	signature:(void)
OSTmr_InitTask	./ucos/os_tmr.c	/^static  void     OSTmr_InitTask      (void);$/;"	p	file:	signature:(void)
OSTmr_InitTask	./ucos/os_tmr.c	/^static  void  OSTmr_InitTask (void)$/;"	f	file:	signature:(void)
OSTmr_Link	./ucos/os_tmr.c	/^static  void     OSTmr_Link          (OS_TMR *ptmr, INT8U type);$/;"	p	file:	signature:(OS_TMR *ptmr, INT8U type)
OSTmr_Link	./ucos/os_tmr.c	/^static  void  OSTmr_Link (OS_TMR *ptmr, INT8U type)$/;"	f	file:	signature:(OS_TMR *ptmr, INT8U type)
OSTmr_Lock	./ucos/os_tmr.c	/^static  void     OSTmr_Lock          (void);$/;"	p	file:	signature:(void)
OSTmr_Lock	./ucos/os_tmr.c	/^static  void  OSTmr_Lock (void)$/;"	f	file:	signature:(void)
OSTmr_Task	./ucos/os_tmr.c	/^static  void     OSTmr_Task          (void   *p_arg);$/;"	p	file:	signature:(void *p_arg)
OSTmr_Task	./ucos/os_tmr.c	/^static  void  OSTmr_Task (void *p_arg)$/;"	f	file:	signature:(void *p_arg)
OSTmr_Unlink	./ucos/os_tmr.c	/^static  void     OSTmr_Unlink        (OS_TMR *ptmr);$/;"	p	file:	signature:(OS_TMR *ptmr)
OSTmr_Unlink	./ucos/os_tmr.c	/^static  void  OSTmr_Unlink (OS_TMR *ptmr)$/;"	f	file:	signature:(OS_TMR *ptmr)
OSTmr_Unlock	./ucos/os_tmr.c	/^static  void     OSTmr_Unlock        (void);$/;"	p	file:	signature:(void)
OSTmr_Unlock	./ucos/os_tmr.c	/^static  void  OSTmr_Unlock (void)$/;"	f	file:	signature:(void)
OSUnMapTbl	./ucos/os_core.c	/^INT8U  const  OSUnMapTbl[] = {$/;"	v
OSUsed	./h/ucos/uCOS_II.H	/^    INT32U  OSUsed;                    \/* Number of bytes used on the stack                            *\/$/;"	m	struct:__anon13	access:public
OSUsed	./ucos/ucos_ii.h	/^    INT32U  OSUsed;                    \/* Number of bytes used on the stack                            *\/$/;"	m	struct:__anon25	access:public
OSValue	./h/ucos/uCOS_II.H	/^    INT8U   OSValue;                        \/* Mutex value (0 = used, 1 = available)                   *\/$/;"	m	struct:__anon10	access:public
OSValue	./ucos/ucos_ii.h	/^    INT8U   OSValue;                        \/* Mutex value (0 = used, 1 = available)                   *\/$/;"	m	struct:__anon22	access:public
OSVersion	./h/ucos/uCOS_II.H	/^INT16U        OSVersion(void);$/;"	p	signature:(void)
OSVersion	./ucos/os_core.c	/^INT16U  OSVersion (void)$/;"	f	signature:(void)
OSVersion	./ucos/ucos_ii.h	/^INT16U        OSVersion(void);$/;"	p	signature:(void)
OSVersionNbr	./ucos/os_dbg_r.c	/^INT16U  const  OSVersionNbr        = OS_VERSION;$/;"	v
OS_APP_HOOKS_EN	./ucos/os_cfg_r.h	30;"	d
OS_ARG_CHK_EN	./h/ucos/OS_CFG.H	11;"	d
OS_ARG_CHK_EN	./ucos/os_cfg_r.h	31;"	d
OS_CFG_H	./ucos/os_cfg_r.h	26;"	d
OS_CPU_H	./h/ucos/OS_CPU.H	2;"	d
OS_CPU_HOOKS_EN	./h/ucos/OS_CFG.H	13;"	d
OS_CPU_HOOKS_EN	./ucos/os_cfg_r.h	32;"	d
OS_CPU_IRQ_ISR	./port/OS_Cpu_a.s	/^OS_CPU_IRQ_ISR:$/;"	l
OS_CPU_IRQ_ISR_1	./port/OS_Cpu_a.s	/^OS_CPU_IRQ_ISR_1:$/;"	l
OS_CPU_IRQ_ISR_Handler	./bsp/interrupts.c	/^void OS_CPU_IRQ_ISR_Handler() {$/;"	f
OS_CPU_SR	./h/ucos/OS_CPU.H	/^typedef INT32U   		OS_CPU_SR;$/;"	t
OS_CPU_SR_Restore	./port/OS_Cpu_a.s	/^OS_CPU_SR_Restore:$/;"	l
OS_CPU_SR_Save	./port/OS_Cpu_a.s	/^OS_CPU_SR_Save:$/;"	l
OS_CRITICAL_METHOD	./h/ucos/OS_CPU.H	61;"	d
OS_DEBUG_EN	./ucos/os_cfg_r.h	34;"	d
OS_DEL_ALWAYS	./h/ucos/uCOS_II.H	101;"	d
OS_DEL_ALWAYS	./ucos/ucos_ii.h	111;"	d
OS_DEL_NO_PEND	./h/ucos/uCOS_II.H	100;"	d
OS_DEL_NO_PEND	./ucos/ucos_ii.h	110;"	d
OS_Dummy	./h/ucos/uCOS_II.H	/^void          OS_Dummy(void);$/;"	p	signature:(void)
OS_Dummy	./ucos/os_core.c	/^void  OS_Dummy (void)$/;"	f	signature:(void)
OS_Dummy	./ucos/ucos_ii.h	/^void          OS_Dummy(void);$/;"	p	signature:(void)
OS_ENTER_CRITICAL	./h/ucos/OS_CPU.H	64;"	d
OS_ERR_CREATE_ISR	./h/ucos/uCOS_II.H	186;"	d
OS_ERR_CREATE_ISR	./ucos/ucos_ii.h	196;"	d
OS_ERR_DEL_ISR	./h/ucos/uCOS_II.H	185;"	d
OS_ERR_DEL_ISR	./ucos/ucos_ii.h	195;"	d
OS_ERR_EVENT_TYPE	./h/ucos/uCOS_II.H	130;"	d
OS_ERR_EVENT_TYPE	./ucos/ucos_ii.h	140;"	d
OS_ERR_INVALID_OPT	./h/ucos/uCOS_II.H	136;"	d
OS_ERR_INVALID_OPT	./ucos/ucos_ii.h	146;"	d
OS_ERR_NOT_MUTEX_OWNER	./h/ucos/uCOS_II.H	181;"	d
OS_ERR_NOT_MUTEX_OWNER	./ucos/ucos_ii.h	191;"	d
OS_ERR_PEND_ISR	./h/ucos/uCOS_II.H	131;"	d
OS_ERR_PEND_ISR	./ucos/ucos_ii.h	141;"	d
OS_ERR_PEVENT_NULL	./h/ucos/uCOS_II.H	133;"	d
OS_ERR_PEVENT_NULL	./ucos/ucos_ii.h	143;"	d
OS_ERR_POST_ISR	./h/ucos/uCOS_II.H	134;"	d
OS_ERR_POST_ISR	./ucos/ucos_ii.h	144;"	d
OS_ERR_POST_NULL_PTR	./h/ucos/uCOS_II.H	132;"	d
OS_ERR_POST_NULL_PTR	./ucos/ucos_ii.h	142;"	d
OS_ERR_QUERY_ISR	./h/ucos/uCOS_II.H	135;"	d
OS_ERR_QUERY_ISR	./ucos/ucos_ii.h	145;"	d
OS_ERR_TASK_WAITING	./h/ucos/uCOS_II.H	137;"	d
OS_ERR_TASK_WAITING	./ucos/ucos_ii.h	147;"	d
OS_EVENT	./h/ucos/uCOS_II.H	/^} OS_EVENT;$/;"	t	typeref:struct:__anon4
OS_EVENT	./ucos/ucos_ii.h	/^} OS_EVENT;$/;"	t	typeref:struct:__anon16
OS_EVENT_EN	./h/ucos/uCOS_II.H	43;"	d
OS_EVENT_EN	./ucos/ucos_ii.h	53;"	d
OS_EVENT_MULTI_EN	./ucos/os_cfg_r.h	36;"	d
OS_EVENT_NAME_SIZE	./ucos/os_cfg_r.h	37;"	d
OS_EVENT_TBL_SIZE	./h/ucos/uCOS_II.H	37;"	d
OS_EVENT_TBL_SIZE	./ucos/ucos_ii.h	47;"	d
OS_EVENT_TYPE_FLAG	./h/ucos/uCOS_II.H	69;"	d
OS_EVENT_TYPE_FLAG	./ucos/ucos_ii.h	79;"	d
OS_EVENT_TYPE_MBOX	./h/ucos/uCOS_II.H	65;"	d
OS_EVENT_TYPE_MBOX	./ucos/ucos_ii.h	75;"	d
OS_EVENT_TYPE_MUTEX	./h/ucos/uCOS_II.H	68;"	d
OS_EVENT_TYPE_MUTEX	./ucos/ucos_ii.h	78;"	d
OS_EVENT_TYPE_Q	./h/ucos/uCOS_II.H	66;"	d
OS_EVENT_TYPE_Q	./ucos/ucos_ii.h	76;"	d
OS_EVENT_TYPE_SEM	./h/ucos/uCOS_II.H	67;"	d
OS_EVENT_TYPE_SEM	./ucos/ucos_ii.h	77;"	d
OS_EVENT_TYPE_UNUSED	./h/ucos/uCOS_II.H	64;"	d
OS_EVENT_TYPE_UNUSED	./ucos/ucos_ii.h	74;"	d
OS_EXIT_CRITICAL	./h/ucos/OS_CPU.H	65;"	d
OS_EXT	./h/ucos/uCOS_II.H	13;"	d
OS_EXT	./h/ucos/uCOS_II.H	15;"	d
OS_EXT	./ucos/ucos_ii.h	23;"	d
OS_EXT	./ucos/ucos_ii.h	25;"	d
OS_EventTO	./h/ucos/uCOS_II.H	/^void          OS_EventTO(OS_EVENT *pevent);$/;"	p	signature:(OS_EVENT *pevent)
OS_EventTO	./ucos/os_core.c	/^void  OS_EventTO (OS_EVENT *pevent)$/;"	f	signature:(OS_EVENT *pevent)
OS_EventTO	./ucos/ucos_ii.h	/^void          OS_EventTO(OS_EVENT *pevent);$/;"	p	signature:(OS_EVENT *pevent)
OS_EventTaskRdy	./h/ucos/uCOS_II.H	/^INT8U         OS_EventTaskRdy(OS_EVENT *pevent, void *msg, INT8U msk);$/;"	p	signature:(OS_EVENT *pevent, void *msg, INT8U msk)
OS_EventTaskRdy	./ucos/os_core.c	/^INT8U  OS_EventTaskRdy (OS_EVENT *pevent, void *msg, INT8U msk)$/;"	f	signature:(OS_EVENT *pevent, void *msg, INT8U msk)
OS_EventTaskRdy	./ucos/ucos_ii.h	/^INT8U         OS_EventTaskRdy(OS_EVENT *pevent, void *msg, INT8U msk);$/;"	p	signature:(OS_EVENT *pevent, void *msg, INT8U msk)
OS_EventTaskWait	./h/ucos/uCOS_II.H	/^void          OS_EventTaskWait(OS_EVENT *pevent);$/;"	p	signature:(OS_EVENT *pevent)
OS_EventTaskWait	./ucos/os_core.c	/^void  OS_EventTaskWait (OS_EVENT *pevent)$/;"	f	signature:(OS_EVENT *pevent)
OS_EventTaskWait	./ucos/ucos_ii.h	/^void          OS_EventTaskWait(OS_EVENT *pevent);$/;"	p	signature:(OS_EVENT *pevent)
OS_EventWaitListInit	./h/ucos/uCOS_II.H	/^void          OS_EventWaitListInit(OS_EVENT *pevent);$/;"	p	signature:(OS_EVENT *pevent)
OS_EventWaitListInit	./ucos/os_core.c	/^void  OS_EventWaitListInit (OS_EVENT *pevent)$/;"	f	signature:(OS_EVENT *pevent)
OS_EventWaitListInit	./ucos/ucos_ii.h	/^void          OS_EventWaitListInit(OS_EVENT *pevent);$/;"	p	signature:(OS_EVENT *pevent)
OS_FLAGS	./h/ucos/OS_CFG.H	/^typedef INT16U             OS_FLAGS;   \/* Date type for event flag bits (8, 16 or 32 bits)             *\/$/;"	t
OS_FLAGS_NBITS	./ucos/os_cfg_r.h	81;"	d
OS_FLAG_ACCEPT_EN	./h/ucos/OS_CFG.H	43;"	d
OS_FLAG_ACCEPT_EN	./ucos/os_cfg_r.h	76;"	d
OS_FLAG_CLR	./h/ucos/uCOS_II.H	92;"	d
OS_FLAG_CLR	./ucos/ucos_ii.h	102;"	d
OS_FLAG_CONSUME	./h/ucos/uCOS_II.H	89;"	d
OS_FLAG_CONSUME	./ucos/ucos_ii.h	99;"	d
OS_FLAG_DEL_EN	./h/ucos/OS_CFG.H	44;"	d
OS_FLAG_DEL_EN	./ucos/os_cfg_r.h	77;"	d
OS_FLAG_EN	./h/ucos/OS_CFG.H	41;"	d
OS_FLAG_EN	./ucos/os_cfg_r.h	75;"	d
OS_FLAG_ERR_NOT_RDY	./h/ucos/uCOS_II.H	190;"	d
OS_FLAG_ERR_NOT_RDY	./ucos/ucos_ii.h	200;"	d
OS_FLAG_ERR_WAIT_TYPE	./h/ucos/uCOS_II.H	189;"	d
OS_FLAG_ERR_WAIT_TYPE	./ucos/ucos_ii.h	199;"	d
OS_FLAG_GRP	./h/ucos/uCOS_II.H	/^} OS_FLAG_GRP;    $/;"	t	typeref:struct:__anon5
OS_FLAG_GRP	./ucos/ucos_ii.h	/^} OS_FLAG_GRP;    $/;"	t	typeref:struct:__anon17
OS_FLAG_GRP_DEPLETED	./h/ucos/uCOS_II.H	192;"	d
OS_FLAG_GRP_DEPLETED	./ucos/ucos_ii.h	202;"	d
OS_FLAG_INVALID_OPT	./h/ucos/uCOS_II.H	191;"	d
OS_FLAG_INVALID_OPT	./ucos/ucos_ii.h	201;"	d
OS_FLAG_INVALID_PGRP	./h/ucos/uCOS_II.H	188;"	d
OS_FLAG_INVALID_PGRP	./ucos/ucos_ii.h	198;"	d
OS_FLAG_NAME_SIZE	./ucos/os_cfg_r.h	78;"	d
OS_FLAG_NODE	./h/ucos/uCOS_II.H	/^} OS_FLAG_NODE;$/;"	t	typeref:struct:__anon6
OS_FLAG_NODE	./ucos/ucos_ii.h	/^} OS_FLAG_NODE;$/;"	t	typeref:struct:__anon18
OS_FLAG_QUERY_EN	./h/ucos/OS_CFG.H	45;"	d
OS_FLAG_QUERY_EN	./ucos/os_cfg_r.h	79;"	d
OS_FLAG_SET	./h/ucos/uCOS_II.H	93;"	d
OS_FLAG_SET	./ucos/ucos_ii.h	103;"	d
OS_FLAG_WAIT_CLR_ALL	./h/ucos/uCOS_II.H	76;"	d
OS_FLAG_WAIT_CLR_ALL	./ucos/ucos_ii.h	86;"	d
OS_FLAG_WAIT_CLR_AND	./h/ucos/uCOS_II.H	77;"	d
OS_FLAG_WAIT_CLR_AND	./ucos/ucos_ii.h	87;"	d
OS_FLAG_WAIT_CLR_ANY	./h/ucos/uCOS_II.H	79;"	d
OS_FLAG_WAIT_CLR_ANY	./ucos/ucos_ii.h	89;"	d
OS_FLAG_WAIT_CLR_EN	./h/ucos/OS_CFG.H	42;"	d
OS_FLAG_WAIT_CLR_EN	./ucos/os_cfg_r.h	80;"	d
OS_FLAG_WAIT_CLR_OR	./h/ucos/uCOS_II.H	80;"	d
OS_FLAG_WAIT_CLR_OR	./ucos/ucos_ii.h	90;"	d
OS_FLAG_WAIT_SET_ALL	./h/ucos/uCOS_II.H	82;"	d
OS_FLAG_WAIT_SET_ALL	./ucos/ucos_ii.h	92;"	d
OS_FLAG_WAIT_SET_AND	./h/ucos/uCOS_II.H	83;"	d
OS_FLAG_WAIT_SET_AND	./ucos/ucos_ii.h	93;"	d
OS_FLAG_WAIT_SET_ANY	./h/ucos/uCOS_II.H	85;"	d
OS_FLAG_WAIT_SET_ANY	./ucos/ucos_ii.h	95;"	d
OS_FLAG_WAIT_SET_OR	./h/ucos/uCOS_II.H	86;"	d
OS_FLAG_WAIT_SET_OR	./ucos/ucos_ii.h	96;"	d
OS_FlagBlock	./ucos/os_flag.c	/^static  void     OS_FlagBlock(OS_FLAG_GRP *pgrp, OS_FLAG_NODE *pnode, OS_FLAGS flags, INT8U wait_type, INT16U timeout);$/;"	p	file:	signature:(OS_FLAG_GRP *pgrp, OS_FLAG_NODE *pnode, OS_FLAGS flags, INT8U wait_type, INT16U timeout)
OS_FlagBlock	./ucos/os_flag.c	/^static  void  OS_FlagBlock (OS_FLAG_GRP *pgrp, OS_FLAG_NODE *pnode, OS_FLAGS flags, INT8U wait_type, INT16U timeout)$/;"	f	file:	signature:(OS_FLAG_GRP *pgrp, OS_FLAG_NODE *pnode, OS_FLAGS flags, INT8U wait_type, INT16U timeout)
OS_FlagInit	./h/ucos/uCOS_II.H	/^void          OS_FlagInit(void);$/;"	p	signature:(void)
OS_FlagInit	./ucos/os_flag.c	/^void  OS_FlagInit (void)$/;"	f	signature:(void)
OS_FlagInit	./ucos/ucos_ii.h	/^void          OS_FlagInit(void);$/;"	p	signature:(void)
OS_FlagTaskRdy	./ucos/os_flag.c	/^static  BOOLEAN  OS_FlagTaskRdy (OS_FLAG_NODE *pnode, OS_FLAGS flags_rdy)$/;"	f	file:	signature:(OS_FLAG_NODE *pnode, OS_FLAGS flags_rdy)
OS_FlagTaskRdy	./ucos/os_flag.c	/^static  BOOLEAN  OS_FlagTaskRdy(OS_FLAG_NODE *pnode, OS_FLAGS flags_rdy);$/;"	p	file:	signature:(OS_FLAG_NODE *pnode, OS_FLAGS flags_rdy)
OS_FlagUnlink	./h/ucos/uCOS_II.H	/^void          OS_FlagUnlink(OS_FLAG_NODE *pnode);$/;"	p	signature:(OS_FLAG_NODE *pnode)
OS_FlagUnlink	./ucos/os_flag.c	/^void  OS_FlagUnlink (OS_FLAG_NODE *pnode)$/;"	f	signature:(OS_FLAG_NODE *pnode)
OS_FlagUnlink	./ucos/ucos_ii.h	/^void          OS_FlagUnlink(OS_FLAG_NODE *pnode);$/;"	p	signature:(OS_FLAG_NODE *pnode)
OS_GLOBALS	./ucos/os_core.c	16;"	d	file:
OS_GLOBALS	./ucos/ucos_ii.c	14;"	d	file:
OS_IDLE_PRIO	./h/ucos/uCOS_II.H	35;"	d
OS_IDLE_PRIO	./ucos/ucos_ii.h	45;"	d
OS_InitEventList	./ucos/os_core.c	/^static  void  OS_InitEventList (void)$/;"	f	file:	signature:(void)
OS_InitEventList	./ucos/os_core.c	/^static  void  OS_InitEventList(void);$/;"	p	file:	signature:(void)
OS_InitMisc	./ucos/os_core.c	/^static  void  OS_InitMisc (void)$/;"	f	file:	signature:(void)
OS_InitMisc	./ucos/os_core.c	/^static  void  OS_InitMisc(void);$/;"	p	file:	signature:(void)
OS_InitRdyList	./ucos/os_core.c	/^static  void  OS_InitRdyList (void)$/;"	f	file:	signature:(void)
OS_InitRdyList	./ucos/os_core.c	/^static  void  OS_InitRdyList(void);$/;"	p	file:	signature:(void)
OS_InitTCBList	./ucos/os_core.c	/^static  void  OS_InitTCBList (void)$/;"	f	file:	signature:(void)
OS_InitTCBList	./ucos/os_core.c	/^static  void  OS_InitTCBList(void);$/;"	p	file:	signature:(void)
OS_InitTaskIdle	./ucos/os_core.c	/^static  void  OS_InitTaskIdle (void)$/;"	f	file:	signature:(void)
OS_InitTaskIdle	./ucos/os_core.c	/^static  void  OS_InitTaskIdle(void);$/;"	p	file:	signature:(void)
OS_InitTaskStat	./ucos/os_core.c	/^static  void  OS_InitTaskStat (void)$/;"	f	file:	signature:(void)
OS_InitTaskStat	./ucos/os_core.c	/^static  void  OS_InitTaskStat(void);$/;"	p	file:	signature:(void)
OS_LOWEST_PRIO	./h/ucos/OS_CFG.H	15;"	d
OS_LOWEST_PRIO	./ucos/os_cfg_r.h	39;"	d
OS_MASTER_FILE	./ucos/ucos_ii.c	18;"	d	file:
OS_MAX_EVENTS	./h/ucos/OS_CFG.H	18;"	d
OS_MAX_EVENTS	./ucos/os_cfg_r.h	42;"	d
OS_MAX_FLAGS	./h/ucos/OS_CFG.H	20;"	d
OS_MAX_FLAGS	./ucos/os_cfg_r.h	43;"	d
OS_MAX_MEM_PART	./h/ucos/OS_CFG.H	22;"	d
OS_MAX_MEM_PART	./ucos/os_cfg_r.h	44;"	d
OS_MAX_QS	./h/ucos/OS_CFG.H	24;"	d
OS_MAX_QS	./ucos/os_cfg_r.h	45;"	d
OS_MAX_TASKS	./h/ucos/OS_CFG.H	26;"	d
OS_MAX_TASKS	./ucos/os_cfg_r.h	46;"	d
OS_MBOX_ACCEPT_EN	./h/ucos/OS_CFG.H	50;"	d
OS_MBOX_ACCEPT_EN	./ucos/os_cfg_r.h	86;"	d
OS_MBOX_DATA	./h/ucos/uCOS_II.H	/^} OS_MBOX_DATA;$/;"	t	typeref:struct:__anon7
OS_MBOX_DATA	./ucos/ucos_ii.h	/^} OS_MBOX_DATA;$/;"	t	typeref:struct:__anon19
OS_MBOX_DEL_EN	./h/ucos/OS_CFG.H	51;"	d
OS_MBOX_DEL_EN	./ucos/os_cfg_r.h	87;"	d
OS_MBOX_EN	./h/ucos/OS_CFG.H	49;"	d
OS_MBOX_EN	./ucos/os_cfg_r.h	85;"	d
OS_MBOX_FULL	./h/ucos/uCOS_II.H	142;"	d
OS_MBOX_FULL	./ucos/ucos_ii.h	152;"	d
OS_MBOX_PEND_ABORT_EN	./ucos/os_cfg_r.h	88;"	d
OS_MBOX_POST_EN	./h/ucos/OS_CFG.H	52;"	d
OS_MBOX_POST_EN	./ucos/os_cfg_r.h	89;"	d
OS_MBOX_POST_OPT_EN	./h/ucos/OS_CFG.H	53;"	d
OS_MBOX_POST_OPT_EN	./ucos/os_cfg_r.h	90;"	d
OS_MBOX_QUERY_EN	./h/ucos/OS_CFG.H	54;"	d
OS_MBOX_QUERY_EN	./ucos/os_cfg_r.h	91;"	d
OS_MEM	./h/ucos/uCOS_II.H	/^} OS_MEM;$/;"	t	typeref:struct:__anon8
OS_MEM	./ucos/ucos_ii.h	/^} OS_MEM;$/;"	t	typeref:struct:__anon20
OS_MEM_DATA	./h/ucos/uCOS_II.H	/^} OS_MEM_DATA;$/;"	t	typeref:struct:__anon9
OS_MEM_DATA	./ucos/ucos_ii.h	/^} OS_MEM_DATA;$/;"	t	typeref:struct:__anon21
OS_MEM_EN	./h/ucos/OS_CFG.H	58;"	d
OS_MEM_EN	./ucos/os_cfg_r.h	95;"	d
OS_MEM_FULL	./h/ucos/uCOS_II.H	175;"	d
OS_MEM_FULL	./ucos/ucos_ii.h	185;"	d
OS_MEM_INVALID_ADDR	./h/ucos/uCOS_II.H	179;"	d
OS_MEM_INVALID_ADDR	./ucos/ucos_ii.h	189;"	d
OS_MEM_INVALID_BLKS	./h/ucos/uCOS_II.H	172;"	d
OS_MEM_INVALID_BLKS	./ucos/ucos_ii.h	182;"	d
OS_MEM_INVALID_PART	./h/ucos/uCOS_II.H	171;"	d
OS_MEM_INVALID_PART	./ucos/ucos_ii.h	181;"	d
OS_MEM_INVALID_PBLK	./h/ucos/uCOS_II.H	176;"	d
OS_MEM_INVALID_PBLK	./ucos/ucos_ii.h	186;"	d
OS_MEM_INVALID_PDATA	./h/ucos/uCOS_II.H	178;"	d
OS_MEM_INVALID_PDATA	./ucos/ucos_ii.h	188;"	d
OS_MEM_INVALID_PMEM	./h/ucos/uCOS_II.H	177;"	d
OS_MEM_INVALID_PMEM	./ucos/ucos_ii.h	187;"	d
OS_MEM_INVALID_SIZE	./h/ucos/uCOS_II.H	173;"	d
OS_MEM_INVALID_SIZE	./ucos/ucos_ii.h	183;"	d
OS_MEM_NAME_SIZE	./ucos/os_cfg_r.h	96;"	d
OS_MEM_NO_FREE_BLKS	./h/ucos/uCOS_II.H	174;"	d
OS_MEM_NO_FREE_BLKS	./ucos/ucos_ii.h	184;"	d
OS_MEM_QUERY_EN	./h/ucos/OS_CFG.H	59;"	d
OS_MEM_QUERY_EN	./ucos/os_cfg_r.h	97;"	d
OS_MUTEX_ACCEPT_EN	./h/ucos/OS_CFG.H	64;"	d
OS_MUTEX_ACCEPT_EN	./ucos/os_cfg_r.h	102;"	d
OS_MUTEX_AVAILABLE	./ucos/os_mutex.c	28;"	d	file:
OS_MUTEX_DATA	./h/ucos/uCOS_II.H	/^} OS_MUTEX_DATA;$/;"	t	typeref:struct:__anon10
OS_MUTEX_DATA	./ucos/ucos_ii.h	/^} OS_MUTEX_DATA;$/;"	t	typeref:struct:__anon22
OS_MUTEX_DEL_EN	./h/ucos/OS_CFG.H	65;"	d
OS_MUTEX_DEL_EN	./ucos/os_cfg_r.h	103;"	d
OS_MUTEX_EN	./h/ucos/OS_CFG.H	63;"	d
OS_MUTEX_EN	./ucos/os_cfg_r.h	101;"	d
OS_MUTEX_KEEP_LOWER_8	./ucos/os_mutex.c	25;"	d	file:
OS_MUTEX_KEEP_UPPER_8	./ucos/os_mutex.c	26;"	d	file:
OS_MUTEX_QUERY_EN	./h/ucos/OS_CFG.H	66;"	d
OS_MUTEX_QUERY_EN	./ucos/os_cfg_r.h	104;"	d
OS_MemInit	./h/ucos/uCOS_II.H	/^void          OS_MemInit(void);$/;"	p	signature:(void)
OS_MemInit	./ucos/os_mem.c	/^void  OS_MemInit (void)$/;"	f	signature:(void)
OS_MemInit	./ucos/ucos_ii.h	/^void          OS_MemInit(void);$/;"	p	signature:(void)
OS_NO_ERR	./h/ucos/uCOS_II.H	128;"	d
OS_NO_ERR	./ucos/ucos_ii.h	138;"	d
OS_NO_MORE_TCB	./h/ucos/uCOS_II.H	157;"	d
OS_NO_MORE_TCB	./ucos/ucos_ii.h	167;"	d
OS_N_SYS_TASKS	./h/ucos/uCOS_II.H	29;"	d
OS_N_SYS_TASKS	./h/ucos/uCOS_II.H	31;"	d
OS_N_SYS_TASKS	./ucos/ucos_ii.h	39;"	d
OS_N_SYS_TASKS	./ucos/ucos_ii.h	41;"	d
OS_POST_OPT_BROADCAST	./h/ucos/uCOS_II.H	111;"	d
OS_POST_OPT_BROADCAST	./ucos/ucos_ii.h	121;"	d
OS_POST_OPT_FRONT	./h/ucos/uCOS_II.H	112;"	d
OS_POST_OPT_FRONT	./ucos/ucos_ii.h	122;"	d
OS_POST_OPT_NONE	./h/ucos/uCOS_II.H	110;"	d
OS_POST_OPT_NONE	./ucos/ucos_ii.h	120;"	d
OS_PRIO_ERR	./h/ucos/uCOS_II.H	147;"	d
OS_PRIO_ERR	./ucos/ucos_ii.h	157;"	d
OS_PRIO_EXIST	./h/ucos/uCOS_II.H	146;"	d
OS_PRIO_EXIST	./ucos/ucos_ii.h	156;"	d
OS_PRIO_INVALID	./h/ucos/uCOS_II.H	148;"	d
OS_PRIO_INVALID	./ucos/ucos_ii.h	158;"	d
OS_PRIO_SELF	./h/ucos/uCOS_II.H	26;"	d
OS_PRIO_SELF	./ucos/ucos_ii.h	36;"	d
OS_Q	./h/ucos/uCOS_II.H	/^} OS_Q;$/;"	t	typeref:struct:os_q
OS_Q	./ucos/ucos_ii.h	/^} OS_Q;$/;"	t	typeref:struct:os_q
OS_QInit	./h/ucos/uCOS_II.H	/^void          OS_QInit(void);$/;"	p	signature:(void)
OS_QInit	./ucos/os_q.c	/^void  OS_QInit (void)$/;"	f	signature:(void)
OS_QInit	./ucos/ucos_ii.h	/^void          OS_QInit(void);$/;"	p	signature:(void)
OS_Q_ACCEPT_EN	./h/ucos/OS_CFG.H	71;"	d
OS_Q_ACCEPT_EN	./ucos/os_cfg_r.h	109;"	d
OS_Q_DATA	./h/ucos/uCOS_II.H	/^} OS_Q_DATA;$/;"	t	typeref:struct:__anon11
OS_Q_DATA	./ucos/ucos_ii.h	/^} OS_Q_DATA;$/;"	t	typeref:struct:__anon23
OS_Q_DEL_EN	./h/ucos/OS_CFG.H	72;"	d
OS_Q_DEL_EN	./ucos/os_cfg_r.h	110;"	d
OS_Q_EN	./h/ucos/OS_CFG.H	70;"	d
OS_Q_EN	./ucos/os_cfg_r.h	108;"	d
OS_Q_FLUSH_EN	./h/ucos/OS_CFG.H	73;"	d
OS_Q_FLUSH_EN	./ucos/os_cfg_r.h	111;"	d
OS_Q_FULL	./h/ucos/uCOS_II.H	144;"	d
OS_Q_FULL	./ucos/ucos_ii.h	154;"	d
OS_Q_PEND_ABORT_EN	./ucos/os_cfg_r.h	112;"	d
OS_Q_POST_EN	./h/ucos/OS_CFG.H	74;"	d
OS_Q_POST_EN	./ucos/os_cfg_r.h	113;"	d
OS_Q_POST_FRONT_EN	./h/ucos/OS_CFG.H	75;"	d
OS_Q_POST_FRONT_EN	./ucos/os_cfg_r.h	114;"	d
OS_Q_POST_OPT_EN	./h/ucos/OS_CFG.H	76;"	d
OS_Q_POST_OPT_EN	./ucos/os_cfg_r.h	115;"	d
OS_Q_QUERY_EN	./h/ucos/OS_CFG.H	77;"	d
OS_Q_QUERY_EN	./ucos/os_cfg_r.h	116;"	d
OS_RDY_TBL_SIZE	./h/ucos/uCOS_II.H	38;"	d
OS_RDY_TBL_SIZE	./ucos/ucos_ii.h	48;"	d
OS_SCHED_LOCK_EN	./h/ucos/OS_CFG.H	30;"	d
OS_SCHED_LOCK_EN	./ucos/os_cfg_r.h	48;"	d
OS_SEM_ACCEPT_EN	./h/ucos/OS_CFG.H	82;"	d
OS_SEM_ACCEPT_EN	./ucos/os_cfg_r.h	121;"	d
OS_SEM_DATA	./h/ucos/uCOS_II.H	/^} OS_SEM_DATA;$/;"	t	typeref:struct:__anon12
OS_SEM_DATA	./ucos/ucos_ii.h	/^} OS_SEM_DATA;$/;"	t	typeref:struct:__anon24
OS_SEM_DEL_EN	./h/ucos/OS_CFG.H	83;"	d
OS_SEM_DEL_EN	./ucos/os_cfg_r.h	122;"	d
OS_SEM_EN	./h/ucos/OS_CFG.H	81;"	d
OS_SEM_EN	./ucos/os_cfg_r.h	120;"	d
OS_SEM_OVF	./h/ucos/uCOS_II.H	150;"	d
OS_SEM_OVF	./ucos/ucos_ii.h	160;"	d
OS_SEM_PEND_ABORT_EN	./ucos/os_cfg_r.h	123;"	d
OS_SEM_QUERY_EN	./h/ucos/OS_CFG.H	84;"	d
OS_SEM_QUERY_EN	./ucos/os_cfg_r.h	124;"	d
OS_SEM_SET_EN	./ucos/os_cfg_r.h	125;"	d
OS_STAT_FLAG	./h/ucos/uCOS_II.H	57;"	d
OS_STAT_FLAG	./ucos/ucos_ii.h	67;"	d
OS_STAT_MBOX	./h/ucos/uCOS_II.H	53;"	d
OS_STAT_MBOX	./ucos/ucos_ii.h	63;"	d
OS_STAT_MUTEX	./h/ucos/uCOS_II.H	56;"	d
OS_STAT_MUTEX	./ucos/ucos_ii.h	66;"	d
OS_STAT_PRIO	./h/ucos/uCOS_II.H	34;"	d
OS_STAT_PRIO	./ucos/ucos_ii.h	44;"	d
OS_STAT_Q	./h/ucos/uCOS_II.H	54;"	d
OS_STAT_Q	./ucos/ucos_ii.h	64;"	d
OS_STAT_RDY	./h/ucos/uCOS_II.H	51;"	d
OS_STAT_RDY	./ucos/ucos_ii.h	61;"	d
OS_STAT_SEM	./h/ucos/uCOS_II.H	52;"	d
OS_STAT_SEM	./ucos/ucos_ii.h	62;"	d
OS_STAT_SUSPEND	./h/ucos/uCOS_II.H	55;"	d
OS_STAT_SUSPEND	./ucos/ucos_ii.h	65;"	d
OS_STK	./h/ucos/OS_CPU.H	/^typedef INT32U         OS_STK;$/;"	t
OS_STK_DATA	./h/ucos/uCOS_II.H	/^} OS_STK_DATA;$/;"	t	typeref:struct:__anon13
OS_STK_DATA	./ucos/ucos_ii.h	/^} OS_STK_DATA;$/;"	t	typeref:struct:__anon25
OS_STK_GROWTH	./h/ucos/OS_CPU.H	74;"	d
OS_Sched	./h/ucos/uCOS_II.H	/^void          OS_Sched(void);$/;"	p	signature:(void)
OS_Sched	./ucos/os_core.c	/^void  OS_Sched (void)$/;"	f	signature:(void)
OS_Sched	./ucos/ucos_ii.h	/^void          OS_Sched(void);$/;"	p	signature:(void)
OS_TASK_CHANGE_PRIO_EN	./h/ucos/OS_CFG.H	88;"	d
OS_TASK_CHANGE_PRIO_EN	./ucos/os_cfg_r.h	61;"	d
OS_TASK_CREATE_EN	./h/ucos/OS_CFG.H	89;"	d
OS_TASK_CREATE_EN	./ucos/os_cfg_r.h	62;"	d
OS_TASK_CREATE_EXT_EN	./h/ucos/OS_CFG.H	90;"	d
OS_TASK_CREATE_EXT_EN	./ucos/os_cfg_r.h	63;"	d
OS_TASK_DEL_EN	./h/ucos/OS_CFG.H	91;"	d
OS_TASK_DEL_EN	./ucos/os_cfg_r.h	64;"	d
OS_TASK_DEL_ERR	./h/ucos/uCOS_II.H	152;"	d
OS_TASK_DEL_ERR	./ucos/ucos_ii.h	162;"	d
OS_TASK_DEL_IDLE	./h/ucos/uCOS_II.H	153;"	d
OS_TASK_DEL_IDLE	./ucos/ucos_ii.h	163;"	d
OS_TASK_DEL_ISR	./h/ucos/uCOS_II.H	155;"	d
OS_TASK_DEL_ISR	./ucos/ucos_ii.h	165;"	d
OS_TASK_DEL_REQ	./h/ucos/uCOS_II.H	154;"	d
OS_TASK_DEL_REQ	./ucos/ucos_ii.h	164;"	d
OS_TASK_IDLE_ID	./h/ucos/uCOS_II.H	40;"	d
OS_TASK_IDLE_ID	./ucos/ucos_ii.h	50;"	d
OS_TASK_IDLE_STK_SIZE	./h/ucos/OS_CFG.H	32;"	d
OS_TASK_IDLE_STK_SIZE	./ucos/os_cfg_r.h	57;"	d
OS_TASK_NAME_SIZE	./ucos/os_cfg_r.h	65;"	d
OS_TASK_NOT_EXIST	./h/ucos/uCOS_II.H	140;"	d
OS_TASK_NOT_EXIST	./ucos/ucos_ii.h	150;"	d
OS_TASK_NOT_SUSPENDED	./h/ucos/uCOS_II.H	169;"	d
OS_TASK_NOT_SUSPENDED	./ucos/ucos_ii.h	179;"	d
OS_TASK_OPT_ERR	./h/ucos/uCOS_II.H	183;"	d
OS_TASK_OPT_ERR	./ucos/ucos_ii.h	193;"	d
OS_TASK_OPT_SAVE_FP	./h/ucos/uCOS_II.H	121;"	d
OS_TASK_OPT_SAVE_FP	./ucos/ucos_ii.h	131;"	d
OS_TASK_OPT_STK_CHK	./h/ucos/uCOS_II.H	119;"	d
OS_TASK_OPT_STK_CHK	./ucos/ucos_ii.h	129;"	d
OS_TASK_OPT_STK_CLR	./h/ucos/uCOS_II.H	120;"	d
OS_TASK_OPT_STK_CLR	./ucos/ucos_ii.h	130;"	d
OS_TASK_PROFILE_EN	./ucos/os_cfg_r.h	66;"	d
OS_TASK_QUERY_EN	./h/ucos/OS_CFG.H	93;"	d
OS_TASK_QUERY_EN	./ucos/os_cfg_r.h	67;"	d
OS_TASK_RESUME_PRIO	./h/ucos/uCOS_II.H	168;"	d
OS_TASK_RESUME_PRIO	./ucos/ucos_ii.h	178;"	d
OS_TASK_STAT_EN	./h/ucos/OS_CFG.H	34;"	d
OS_TASK_STAT_EN	./ucos/os_cfg_r.h	68;"	d
OS_TASK_STAT_ID	./h/ucos/uCOS_II.H	41;"	d
OS_TASK_STAT_ID	./ucos/ucos_ii.h	51;"	d
OS_TASK_STAT_STK_CHK_EN	./ucos/os_cfg_r.h	69;"	d
OS_TASK_STAT_STK_SIZE	./h/ucos/OS_CFG.H	36;"	d
OS_TASK_STAT_STK_SIZE	./ucos/os_cfg_r.h	56;"	d
OS_TASK_SUSPEND_EN	./h/ucos/OS_CFG.H	92;"	d
OS_TASK_SUSPEND_EN	./ucos/os_cfg_r.h	70;"	d
OS_TASK_SUSPEND_IDLE	./h/ucos/uCOS_II.H	166;"	d
OS_TASK_SUSPEND_IDLE	./ucos/ucos_ii.h	176;"	d
OS_TASK_SUSPEND_PRIO	./h/ucos/uCOS_II.H	165;"	d
OS_TASK_SUSPEND_PRIO	./ucos/ucos_ii.h	175;"	d
OS_TASK_SW	./h/ucos/OS_CPU.H	76;"	d
OS_TASK_SW_HOOK_EN	./ucos/os_cfg_r.h	71;"	d
OS_TASK_TMR_STK_SIZE	./ucos/os_cfg_r.h	55;"	d
OS_TCB	./h/ucos/uCOS_II.H	/^} OS_TCB;$/;"	t	typeref:struct:os_tcb
OS_TCB	./ucos/ucos_ii.h	/^} OS_TCB;$/;"	t	typeref:struct:os_tcb
OS_TCBInit	./h/ucos/uCOS_II.H	/^INT8U         OS_TCBInit(INT8U prio, OS_STK *ptos, OS_STK *pbos, INT16U id, INT32U stk_size, void *pext, INT16U opt);$/;"	p	signature:(INT8U prio, OS_STK *ptos, OS_STK *pbos, INT16U id, INT32U stk_size, void *pext, INT16U opt)
OS_TCBInit	./ucos/os_core.c	/^INT8U  OS_TCBInit (INT8U prio, OS_STK *ptos, OS_STK *pbos, INT16U id, INT32U stk_size, void *pext, INT16U opt)$/;"	f	signature:(INT8U prio, OS_STK *ptos, OS_STK *pbos, INT16U id, INT32U stk_size, void *pext, INT16U opt)
OS_TCBInit	./ucos/ucos_ii.h	/^INT8U         OS_TCBInit(INT8U prio, OS_STK *ptos, OS_STK *pbos, INT16U id, INT32U stk_size, void *pext, INT16U opt);$/;"	p	signature:(INT8U prio, OS_STK *ptos, OS_STK *pbos, INT16U id, INT32U stk_size, void *pext, INT16U opt)
OS_TICKS_PER_SEC	./h/ucos/OS_CFG.H	38;"	d
OS_TICKS_PER_SEC	./ucos/os_cfg_r.h	51;"	d
OS_TICK_STEP_EN	./ucos/os_cfg_r.h	50;"	d
OS_TIMEOUT	./h/ucos/uCOS_II.H	139;"	d
OS_TIMEOUT	./ucos/ucos_ii.h	149;"	d
OS_TIME_DLY_HMSM_EN	./h/ucos/OS_CFG.H	97;"	d
OS_TIME_DLY_HMSM_EN	./ucos/os_cfg_r.h	129;"	d
OS_TIME_DLY_RESUME_EN	./h/ucos/OS_CFG.H	98;"	d
OS_TIME_DLY_RESUME_EN	./ucos/os_cfg_r.h	130;"	d
OS_TIME_GET_SET_EN	./h/ucos/OS_CFG.H	99;"	d
OS_TIME_GET_SET_EN	./ucos/os_cfg_r.h	131;"	d
OS_TIME_INVALID_MILLI	./h/ucos/uCOS_II.H	162;"	d
OS_TIME_INVALID_MILLI	./ucos/ucos_ii.h	172;"	d
OS_TIME_INVALID_MINUTES	./h/ucos/uCOS_II.H	160;"	d
OS_TIME_INVALID_MINUTES	./ucos/ucos_ii.h	170;"	d
OS_TIME_INVALID_SECONDS	./h/ucos/uCOS_II.H	161;"	d
OS_TIME_INVALID_SECONDS	./ucos/ucos_ii.h	171;"	d
OS_TIME_NOT_DLY	./h/ucos/uCOS_II.H	159;"	d
OS_TIME_NOT_DLY	./ucos/ucos_ii.h	169;"	d
OS_TIME_TICK_HOOK_EN	./ucos/os_cfg_r.h	132;"	d
OS_TIME_ZERO_DLY	./h/ucos/uCOS_II.H	163;"	d
OS_TIME_ZERO_DLY	./ucos/ucos_ii.h	173;"	d
OS_TMR_CFG_MAX	./ucos/os_cfg_r.h	137;"	d
OS_TMR_CFG_NAME_SIZE	./ucos/os_cfg_r.h	138;"	d
OS_TMR_CFG_TICKS_PER_SEC	./ucos/os_cfg_r.h	140;"	d
OS_TMR_CFG_WHEEL_SIZE	./ucos/os_cfg_r.h	139;"	d
OS_TMR_EN	./ucos/os_cfg_r.h	136;"	d
OS_TMR_LINK_DLY	./ucos/os_tmr.c	46;"	d	file:
OS_TMR_LINK_PERIODIC	./ucos/os_tmr.c	47;"	d	file:
OS_TaskIdle	./h/ucos/uCOS_II.H	/^void          OS_TaskIdle(void *data);$/;"	p	signature:(void *data)
OS_TaskIdle	./ucos/os_core.c	/^void  OS_TaskIdle (void *pdata)$/;"	f	signature:(void *pdata)
OS_TaskIdle	./ucos/ucos_ii.h	/^void          OS_TaskIdle(void *data);$/;"	p	signature:(void *data)
OS_TaskStat	./h/ucos/uCOS_II.H	/^void          OS_TaskStat(void *data);$/;"	p	signature:(void *data)
OS_TaskStat	./ucos/os_core.c	/^void  OS_TaskStat (void *pdata)$/;"	f	signature:(void *pdata)
OS_TaskStat	./ucos/ucos_ii.h	/^void          OS_TaskStat(void *data);$/;"	p	signature:(void *data)
OS_VERSION	./h/ucos/uCOS_II.H	10;"	d
OS_VERSION	./ucos/ucos_ii.h	20;"	d
PERMAP	./h/dma.h	23;"	d
PUT32	./bsp/uart.c	/^extern void PUT32 ( unsigned int, unsigned int );$/;"	p	file:	signature:( unsigned int, unsigned int )
PUT32	./init/startup.s	/^PUT32:$/;"	l
Pending1	./h/regs.h	/^	unsigned long	Pending1;$/;"	m	struct:__anon2	access:public
Pending2	./h/regs.h	/^	unsigned long	Pending2;$/;"	m	struct:__anon2	access:public
REGS_H_	./h/regs.h	3;"	d
RIS	./h/regs.h	/^	unsigned long RIS;$/;"	m	struct:_BCM2835_TIMER_REGS	access:public
RLD	./h/regs.h	/^	unsigned long RLD;$/;"	m	struct:_BCM2835_TIMER_REGS	access:public
RegisterInterrupt	./bsp/interrupts.c	/^int RegisterInterrupt(int nIRQ, int(*pfnHandler)(int, void*), void *pParam) {$/;"	f	signature:(int nIRQ, int(*pfnHandler)(int, void*), void *pParam)
RegisterInterrupt	./h/interrupts.h	/^int RegisterInterrupt		(int nIRQ, int(*pfnHandler)(int, void*) , void *pParam);$/;"	p	signature:(int nIRQ, int(*pfnHandler)(int, void*) , void *pParam)
SOH	./bsp/xmodem.c	53;"	d	file:
SRC_DREQ	./h/dma.h	26;"	d
SRC_IGNORE	./h/dma.h	25;"	d
SRC_INC	./h/dma.h	28;"	d
SRC_WIDTH	./h/dma.h	27;"	d
STX	./bsp/xmodem.c	54;"	d	file:
SetGPIOFunction	./bsp/gpio.c	/^void SetGPIOFunction(INT32U GPIO, INT32U functionCode)$/;"	f	signature:(INT32U GPIO, INT32U functionCode)
SetGPIOFunction	./h/gpio.h	/^void SetGPIOFunction(INT32U GPIO, INT32U functionCode);$/;"	p	signature:(INT32U GPIO, INT32U functionCode)
SrcAddr	./h/dma.h	/^INT32U  SrcAddr;$/;"	m	struct:__anon14	access:public
TDMODE	./h/dma.h	34;"	d
TI	./h/dma.h	/^INT32U  TI;$/;"	m	struct:__anon14	access:public
TIMER_H_	./h/timer.h	3;"	d
TIMER_REGS	./h/regs.h	/^} TIMER_REGS;$/;"	t	typeref:struct:_BCM2835_TIMER_REGS
TRUE	./h/ucos/uCOS_II.H	23;"	d
TRUE	./ucos/ucos_ii.h	33;"	d
TransLen	./h/dma.h	/^INT32U  TransLen;$/;"	m	struct:__anon14	access:public
TwoDStride	./h/dma.h	/^INT32U  TwoDStride;$/;"	m	struct:__anon14	access:public
UART_H_	./h/uart.h	3;"	d
UART_MEMORY_SIZE	./h/uart.h	21;"	d
UART_MEMORY_STATIC	./bsp/uart.c	/^static INT8U UART_MEMORY_STATIC[2048];$/;"	v	file:
UART_MEM_BLK_NUM	./h/uart.h	23;"	d
UART_MEM_BLK_SIZE	./h/uart.h	22;"	d
UART_RECV_FIFO_SIZE	./h/uart.h	17;"	d
UART_TRANS_FIFO_SIZE	./h/uart.h	18;"	d
UART_TRANS_INTR_CONTINUE	./h/uart.h	25;"	d
UART_TRANS_INTR_END	./h/uart.h	26;"	d
UBYTE	./h/ucos/OS_CPU.H	27;"	d
ULONG	./h/ucos/OS_CPU.H	31;"	d
UWORD	./h/ucos/OS_CPU.H	29;"	d
UartMemPartition	./bsp/uart.c	/^static OS_MEM * UartMemPartition;$/;"	v	file:
VAL	./h/regs.h	/^	unsigned long VAL;$/;"	m	struct:_BCM2835_TIMER_REGS	access:public
WAITS	./h/dma.h	22;"	d
WAIT_RESP	./h/dma.h	33;"	d
WORD	./h/ucos/OS_CPU.H	28;"	d
_ASMLANGUAGE	./port/OS_Cpu_a.s	/^#define	_ASMLANGUAGE$/;"	d
_BCM2835_TIMER_REGS	./h/regs.h	/^typedef struct _BCM2835_TIMER_REGS {$/;"	s
_BCM2835_TIMER_REGS::CLI	./h/regs.h	/^	unsigned long CLI;$/;"	m	struct:_BCM2835_TIMER_REGS	access:public
_BCM2835_TIMER_REGS::CNT	./h/regs.h	/^	unsigned long CNT;$/;"	m	struct:_BCM2835_TIMER_REGS	access:public
_BCM2835_TIMER_REGS::CTL	./h/regs.h	/^	unsigned long CTL;$/;"	m	struct:_BCM2835_TIMER_REGS	access:public
_BCM2835_TIMER_REGS::DIV	./h/regs.h	/^	unsigned long DIV;$/;"	m	struct:_BCM2835_TIMER_REGS	access:public
_BCM2835_TIMER_REGS::LOD	./h/regs.h	/^	unsigned long LOD;$/;"	m	struct:_BCM2835_TIMER_REGS	access:public
_BCM2835_TIMER_REGS::MIS	./h/regs.h	/^	unsigned long MIS;$/;"	m	struct:_BCM2835_TIMER_REGS	access:public
_BCM2835_TIMER_REGS::RIS	./h/regs.h	/^	unsigned long RIS;$/;"	m	struct:_BCM2835_TIMER_REGS	access:public
_BCM2835_TIMER_REGS::RLD	./h/regs.h	/^	unsigned long RLD;$/;"	m	struct:_BCM2835_TIMER_REGS	access:public
_BCM2835_TIMER_REGS::VAL	./h/regs.h	/^	unsigned long VAL;$/;"	m	struct:_BCM2835_TIMER_REGS	access:public
_DMA_H_	./h/dma.h	2;"	d
_FIFO_H_	./h/fifo.h	2;"	d
_GPIO_H_	./h/gpio.h	2;"	d
_INTERRUPTS_H_	./h/interrupts.h	3;"	d
_OS_CFG_H_	./h/ucos/OS_CFG.H	8;"	d
_XMODEM_H_	./h/xmodem.h	4;"	d
__UCOSII_H_	./h/ucos/uCOS_II.H	8;"	d
__anon10::OSEventGrp	./h/ucos/uCOS_II.H	/^    INT8U   OSEventGrp;                     \/* Group corresponding to tasks waiting for event to occur *\/$/;"	m	struct:__anon10	access:public
__anon10::OSEventTbl	./h/ucos/uCOS_II.H	/^    INT8U   OSEventTbl[OS_EVENT_TBL_SIZE];  \/* List of tasks waiting for event to occur                *\/$/;"	m	struct:__anon10	access:public
__anon10::OSMutexPIP	./h/ucos/uCOS_II.H	/^    INT8U   OSMutexPIP;                     \/* Priority Inheritance Priority or 0xFF if no owner       *\/$/;"	m	struct:__anon10	access:public
__anon10::OSOwnerPrio	./h/ucos/uCOS_II.H	/^    INT8U   OSOwnerPrio;                    \/* Mutex owner's task priority or 0xFF if no owner         *\/$/;"	m	struct:__anon10	access:public
__anon10::OSValue	./h/ucos/uCOS_II.H	/^    INT8U   OSValue;                        \/* Mutex value (0 = used, 1 = available)                   *\/$/;"	m	struct:__anon10	access:public
__anon11::OSEventGrp	./h/ucos/uCOS_II.H	/^    INT8U          OSEventGrp;          \/* Group corresponding to tasks waiting for event to occur     *\/$/;"	m	struct:__anon11	access:public
__anon11::OSEventTbl	./h/ucos/uCOS_II.H	/^    INT8U          OSEventTbl[OS_EVENT_TBL_SIZE];  \/* List of tasks waiting for event to occur         *\/$/;"	m	struct:__anon11	access:public
__anon11::OSMsg	./h/ucos/uCOS_II.H	/^    void          *OSMsg;               \/* Pointer to next message to be extracted from queue          *\/$/;"	m	struct:__anon11	access:public
__anon11::OSNMsgs	./h/ucos/uCOS_II.H	/^    INT16U         OSNMsgs;             \/* Number of messages in message queue                         *\/$/;"	m	struct:__anon11	access:public
__anon11::OSQSize	./h/ucos/uCOS_II.H	/^    INT16U         OSQSize;             \/* Size of message queue                                       *\/$/;"	m	struct:__anon11	access:public
__anon12::OSCnt	./h/ucos/uCOS_II.H	/^    INT16U  OSCnt;                          \/* Semaphore count                                         *\/$/;"	m	struct:__anon12	access:public
__anon12::OSEventGrp	./h/ucos/uCOS_II.H	/^    INT8U   OSEventGrp;                     \/* Group corresponding to tasks waiting for event to occur *\/$/;"	m	struct:__anon12	access:public
__anon12::OSEventTbl	./h/ucos/uCOS_II.H	/^    INT8U   OSEventTbl[OS_EVENT_TBL_SIZE];  \/* List of tasks waiting for event to occur                *\/$/;"	m	struct:__anon12	access:public
__anon13::OSFree	./h/ucos/uCOS_II.H	/^    INT32U  OSFree;                    \/* Number of free bytes on the stack                            *\/$/;"	m	struct:__anon13	access:public
__anon13::OSUsed	./h/ucos/uCOS_II.H	/^    INT32U  OSUsed;                    \/* Number of bytes used on the stack                            *\/$/;"	m	struct:__anon13	access:public
__anon14::DesAddr	./h/dma.h	/^INT32U  DesAddr;$/;"	m	struct:__anon14	access:public
__anon14::NextCBAddr	./h/dma.h	/^INT32U  NextCBAddr;$/;"	m	struct:__anon14	access:public
__anon14::SrcAddr	./h/dma.h	/^INT32U  SrcAddr;$/;"	m	struct:__anon14	access:public
__anon14::TI	./h/dma.h	/^INT32U  TI;$/;"	m	struct:__anon14	access:public
__anon14::TransLen	./h/dma.h	/^INT32U  TransLen;$/;"	m	struct:__anon14	access:public
__anon14::TwoDStride	./h/dma.h	/^INT32U  TwoDStride;$/;"	m	struct:__anon14	access:public
__anon15::head	./h/fifo.h	/^    INT32U head;$/;"	m	struct:__anon15	access:public
__anon15::pFifo	./h/fifo.h	/^    INT8U* pFifo;$/;"	m	struct:__anon15	access:public
__anon15::size	./h/fifo.h	/^    INT32U size;$/;"	m	struct:__anon15	access:public
__anon15::tail	./h/fifo.h	/^    INT32U tail;$/;"	m	struct:__anon15	access:public
__anon16::OSEventCnt	./ucos/ucos_ii.h	/^    INT16U  OSEventCnt;                    \/* Semaphore Count (not used if other EVENT type)           *\/$/;"	m	struct:__anon16	access:public
__anon16::OSEventGrp	./ucos/ucos_ii.h	/^    INT8U   OSEventGrp;                    \/* Group corresponding to tasks waiting for event to occur  *\/$/;"	m	struct:__anon16	access:public
__anon16::OSEventPtr	./ucos/ucos_ii.h	/^    void   *OSEventPtr;                    \/* Pointer to message or queue structure                    *\/$/;"	m	struct:__anon16	access:public
__anon16::OSEventTbl	./ucos/ucos_ii.h	/^    INT8U   OSEventTbl[OS_EVENT_TBL_SIZE]; \/* List of tasks waiting for event to occur                 *\/$/;"	m	struct:__anon16	access:public
__anon16::OSEventType	./ucos/ucos_ii.h	/^    INT8U   OSEventType;                   \/* Type of event control block (see OS_EVENT_TYPE_???)      *\/$/;"	m	struct:__anon16	access:public
__anon17::OSFlagFlags	./ucos/ucos_ii.h	/^    OS_FLAGS      OSFlagFlags;              \/* 8, 16 or 32 bit flags                                   *\/$/;"	m	struct:__anon17	access:public
__anon17::OSFlagType	./ucos/ucos_ii.h	/^    INT8U         OSFlagType;               \/* Should be set to OS_EVENT_TYPE_FLAG                     *\/$/;"	m	struct:__anon17	access:public
__anon17::OSFlagWaitList	./ucos/ucos_ii.h	/^    void         *OSFlagWaitList;           \/* Pointer to first NODE of task waiting on event flag     *\/$/;"	m	struct:__anon17	access:public
__anon18::OSFlagNodeFlagGrp	./ucos/ucos_ii.h	/^    void         *OSFlagNodeFlagGrp;        \/* Pointer to Event Flag Group                             *\/  $/;"	m	struct:__anon18	access:public
__anon18::OSFlagNodeFlags	./ucos/ucos_ii.h	/^    OS_FLAGS      OSFlagNodeFlags;          \/* Event flag to wait on                                   *\/  $/;"	m	struct:__anon18	access:public
__anon18::OSFlagNodeNext	./ucos/ucos_ii.h	/^    void         *OSFlagNodeNext;           \/* Pointer to next     NODE in wait list                   *\/$/;"	m	struct:__anon18	access:public
__anon18::OSFlagNodePrev	./ucos/ucos_ii.h	/^    void         *OSFlagNodePrev;           \/* Pointer to previous NODE in wait list                   *\/$/;"	m	struct:__anon18	access:public
__anon18::OSFlagNodeTCB	./ucos/ucos_ii.h	/^    void         *OSFlagNodeTCB;            \/* Pointer to TCB of waiting task                          *\/  $/;"	m	struct:__anon18	access:public
__anon18::OSFlagNodeWaitType	./ucos/ucos_ii.h	/^    INT8U         OSFlagNodeWaitType;       \/* Type of wait:                                           *\/$/;"	m	struct:__anon18	access:public
__anon19::OSEventGrp	./ucos/ucos_ii.h	/^    INT8U   OSEventGrp;                    \/* Group corresponding to tasks waiting for event to occur  *\/$/;"	m	struct:__anon19	access:public
__anon19::OSEventTbl	./ucos/ucos_ii.h	/^    INT8U   OSEventTbl[OS_EVENT_TBL_SIZE]; \/* List of tasks waiting for event to occur                 *\/$/;"	m	struct:__anon19	access:public
__anon19::OSMsg	./ucos/ucos_ii.h	/^    void   *OSMsg;                         \/* Pointer to message in mailbox                            *\/$/;"	m	struct:__anon19	access:public
__anon1::uart_all_reg	./h/uart.h	/^    INT32U uart_all_reg[12];$/;"	m	struct:__anon1	access:public
__anon20::OSMemAddr	./ucos/ucos_ii.h	/^    void   *OSMemAddr;                 \/* Pointer to beginning of memory partition                     *\/$/;"	m	struct:__anon20	access:public
__anon20::OSMemBlkSize	./ucos/ucos_ii.h	/^    INT32U  OSMemBlkSize;              \/* Size (in bytes) of each block of memory                      *\/$/;"	m	struct:__anon20	access:public
__anon20::OSMemFreeList	./ucos/ucos_ii.h	/^    void   *OSMemFreeList;             \/* Pointer to list of free memory blocks                        *\/$/;"	m	struct:__anon20	access:public
__anon20::OSMemNBlks	./ucos/ucos_ii.h	/^    INT32U  OSMemNBlks;                \/* Total number of blocks in this partition                     *\/$/;"	m	struct:__anon20	access:public
__anon20::OSMemNFree	./ucos/ucos_ii.h	/^    INT32U  OSMemNFree;                \/* Number of memory blocks remaining in this partition          *\/$/;"	m	struct:__anon20	access:public
__anon21::OSAddr	./ucos/ucos_ii.h	/^    void   *OSAddr;                    \/* Pointer to the beginning address of the memory partition     *\/$/;"	m	struct:__anon21	access:public
__anon21::OSBlkSize	./ucos/ucos_ii.h	/^    INT32U  OSBlkSize;                 \/* Size (in bytes) of each memory block                         *\/$/;"	m	struct:__anon21	access:public
__anon21::OSFreeList	./ucos/ucos_ii.h	/^    void   *OSFreeList;                \/* Pointer to the beginning of the free list of memory blocks   *\/$/;"	m	struct:__anon21	access:public
__anon21::OSNBlks	./ucos/ucos_ii.h	/^    INT32U  OSNBlks;                   \/* Total number of blocks in the partition                      *\/$/;"	m	struct:__anon21	access:public
__anon21::OSNFree	./ucos/ucos_ii.h	/^    INT32U  OSNFree;                   \/* Number of memory blocks free                                 *\/$/;"	m	struct:__anon21	access:public
__anon21::OSNUsed	./ucos/ucos_ii.h	/^    INT32U  OSNUsed;                   \/* Number of memory blocks used                                 *\/$/;"	m	struct:__anon21	access:public
__anon22::OSEventGrp	./ucos/ucos_ii.h	/^    INT8U   OSEventGrp;                     \/* Group corresponding to tasks waiting for event to occur *\/$/;"	m	struct:__anon22	access:public
__anon22::OSEventTbl	./ucos/ucos_ii.h	/^    INT8U   OSEventTbl[OS_EVENT_TBL_SIZE];  \/* List of tasks waiting for event to occur                *\/$/;"	m	struct:__anon22	access:public
__anon22::OSMutexPIP	./ucos/ucos_ii.h	/^    INT8U   OSMutexPIP;                     \/* Priority Inheritance Priority or 0xFF if no owner       *\/$/;"	m	struct:__anon22	access:public
__anon22::OSOwnerPrio	./ucos/ucos_ii.h	/^    INT8U   OSOwnerPrio;                    \/* Mutex owner's task priority or 0xFF if no owner         *\/$/;"	m	struct:__anon22	access:public
__anon22::OSValue	./ucos/ucos_ii.h	/^    INT8U   OSValue;                        \/* Mutex value (0 = used, 1 = available)                   *\/$/;"	m	struct:__anon22	access:public
__anon23::OSEventGrp	./ucos/ucos_ii.h	/^    INT8U          OSEventGrp;          \/* Group corresponding to tasks waiting for event to occur     *\/$/;"	m	struct:__anon23	access:public
__anon23::OSEventTbl	./ucos/ucos_ii.h	/^    INT8U          OSEventTbl[OS_EVENT_TBL_SIZE];  \/* List of tasks waiting for event to occur         *\/$/;"	m	struct:__anon23	access:public
__anon23::OSMsg	./ucos/ucos_ii.h	/^    void          *OSMsg;               \/* Pointer to next message to be extracted from queue          *\/$/;"	m	struct:__anon23	access:public
__anon23::OSNMsgs	./ucos/ucos_ii.h	/^    INT16U         OSNMsgs;             \/* Number of messages in message queue                         *\/$/;"	m	struct:__anon23	access:public
__anon23::OSQSize	./ucos/ucos_ii.h	/^    INT16U         OSQSize;             \/* Size of message queue                                       *\/$/;"	m	struct:__anon23	access:public
__anon24::OSCnt	./ucos/ucos_ii.h	/^    INT16U  OSCnt;                          \/* Semaphore count                                         *\/$/;"	m	struct:__anon24	access:public
__anon24::OSEventGrp	./ucos/ucos_ii.h	/^    INT8U   OSEventGrp;                     \/* Group corresponding to tasks waiting for event to occur *\/$/;"	m	struct:__anon24	access:public
__anon24::OSEventTbl	./ucos/ucos_ii.h	/^    INT8U   OSEventTbl[OS_EVENT_TBL_SIZE];  \/* List of tasks waiting for event to occur                *\/$/;"	m	struct:__anon24	access:public
__anon25::OSFree	./ucos/ucos_ii.h	/^    INT32U  OSFree;                    \/* Number of free bytes on the stack                            *\/$/;"	m	struct:__anon25	access:public
__anon25::OSUsed	./ucos/ucos_ii.h	/^    INT32U  OSUsed;                    \/* Number of bytes used on the stack                            *\/$/;"	m	struct:__anon25	access:public
__anon2::Disable1	./h/regs.h	/^	unsigned long	Disable1;$/;"	m	struct:__anon2	access:public
__anon2::Disable2	./h/regs.h	/^	unsigned long	Disable2;$/;"	m	struct:__anon2	access:public
__anon2::DisableBasic	./h/regs.h	/^	unsigned long	DisableBasic;$/;"	m	struct:__anon2	access:public
__anon2::Enable1	./h/regs.h	/^	unsigned long	Enable1;$/;"	m	struct:__anon2	access:public
__anon2::Enable2	./h/regs.h	/^	unsigned long	Enable2;$/;"	m	struct:__anon2	access:public
__anon2::EnableBasic	./h/regs.h	/^	unsigned long	EnableBasic;$/;"	m	struct:__anon2	access:public
__anon2::FIQCtrl	./h/regs.h	/^	unsigned long	FIQCtrl;$/;"	m	struct:__anon2	access:public
__anon2::IRQBasic	./h/regs.h	/^	unsigned long	IRQBasic;	\/\/ Pending 0$/;"	m	struct:__anon2	access:public
__anon2::Pending1	./h/regs.h	/^	unsigned long	Pending1;$/;"	m	struct:__anon2	access:public
__anon2::Pending2	./h/regs.h	/^	unsigned long	Pending2;$/;"	m	struct:__anon2	access:public
__anon3::pParam	./h/interrupts.h	/^	void 				   *pParam;				\/\/\/< A special parameter that the use can pass to the IRQ.$/;"	m	struct:__anon3	access:public
__anon3::pfnHandler	./h/interrupts.h	/^	FN_INTERRUPT_HANDLER 	pfnHandler;			\/\/\/< Function that handles this IRQn$/;"	m	struct:__anon3	access:public
__anon4::OSEventCnt	./h/ucos/uCOS_II.H	/^    INT16U  OSEventCnt;                    \/* Semaphore Count (not used if other EVENT type)           *\/$/;"	m	struct:__anon4	access:public
__anon4::OSEventGrp	./h/ucos/uCOS_II.H	/^    INT8U   OSEventGrp;                    \/* Group corresponding to tasks waiting for event to occur  *\/$/;"	m	struct:__anon4	access:public
__anon4::OSEventPtr	./h/ucos/uCOS_II.H	/^    void   *OSEventPtr;                    \/* Pointer to message or queue structure                    *\/$/;"	m	struct:__anon4	access:public
__anon4::OSEventTbl	./h/ucos/uCOS_II.H	/^    INT8U   OSEventTbl[OS_EVENT_TBL_SIZE]; \/* List of tasks waiting for event to occur                 *\/$/;"	m	struct:__anon4	access:public
__anon4::OSEventType	./h/ucos/uCOS_II.H	/^    INT8U   OSEventType;                   \/* Type of event control block (see OS_EVENT_TYPE_???)      *\/$/;"	m	struct:__anon4	access:public
__anon5::OSFlagFlags	./h/ucos/uCOS_II.H	/^    OS_FLAGS      OSFlagFlags;              \/* 8, 16 or 32 bit flags                                   *\/$/;"	m	struct:__anon5	access:public
__anon5::OSFlagType	./h/ucos/uCOS_II.H	/^    INT8U         OSFlagType;               \/* Should be set to OS_EVENT_TYPE_FLAG                     *\/$/;"	m	struct:__anon5	access:public
__anon5::OSFlagWaitList	./h/ucos/uCOS_II.H	/^    void         *OSFlagWaitList;           \/* Pointer to first NODE of task waiting on event flag     *\/$/;"	m	struct:__anon5	access:public
__anon6::OSFlagNodeFlagGrp	./h/ucos/uCOS_II.H	/^    void         *OSFlagNodeFlagGrp;        \/* Pointer to Event Flag Group                             *\/  $/;"	m	struct:__anon6	access:public
__anon6::OSFlagNodeFlags	./h/ucos/uCOS_II.H	/^    OS_FLAGS      OSFlagNodeFlags;          \/* Event flag to wait on                                   *\/  $/;"	m	struct:__anon6	access:public
__anon6::OSFlagNodeNext	./h/ucos/uCOS_II.H	/^    void         *OSFlagNodeNext;           \/* Pointer to next     NODE in wait list                   *\/$/;"	m	struct:__anon6	access:public
__anon6::OSFlagNodePrev	./h/ucos/uCOS_II.H	/^    void         *OSFlagNodePrev;           \/* Pointer to previous NODE in wait list                   *\/$/;"	m	struct:__anon6	access:public
__anon6::OSFlagNodeTCB	./h/ucos/uCOS_II.H	/^    void         *OSFlagNodeTCB;            \/* Pointer to TCB of waiting task                          *\/  $/;"	m	struct:__anon6	access:public
__anon6::OSFlagNodeWaitType	./h/ucos/uCOS_II.H	/^    INT8U         OSFlagNodeWaitType;       \/* Type of wait:                                           *\/$/;"	m	struct:__anon6	access:public
__anon7::OSEventGrp	./h/ucos/uCOS_II.H	/^    INT8U   OSEventGrp;                    \/* Group corresponding to tasks waiting for event to occur  *\/$/;"	m	struct:__anon7	access:public
__anon7::OSEventTbl	./h/ucos/uCOS_II.H	/^    INT8U   OSEventTbl[OS_EVENT_TBL_SIZE]; \/* List of tasks waiting for event to occur                 *\/$/;"	m	struct:__anon7	access:public
__anon7::OSMsg	./h/ucos/uCOS_II.H	/^    void   *OSMsg;                         \/* Pointer to message in mailbox                            *\/$/;"	m	struct:__anon7	access:public
__anon8::OSMemAddr	./h/ucos/uCOS_II.H	/^    void   *OSMemAddr;                 \/* Pointer to beginning of memory partition                     *\/$/;"	m	struct:__anon8	access:public
__anon8::OSMemBlkSize	./h/ucos/uCOS_II.H	/^    INT32U  OSMemBlkSize;              \/* Size (in bytes) of each block of memory                      *\/$/;"	m	struct:__anon8	access:public
__anon8::OSMemFreeList	./h/ucos/uCOS_II.H	/^    void   *OSMemFreeList;             \/* Pointer to list of free memory blocks                        *\/$/;"	m	struct:__anon8	access:public
__anon8::OSMemNBlks	./h/ucos/uCOS_II.H	/^    INT32U  OSMemNBlks;                \/* Total number of blocks in this partition                     *\/$/;"	m	struct:__anon8	access:public
__anon8::OSMemNFree	./h/ucos/uCOS_II.H	/^    INT32U  OSMemNFree;                \/* Number of memory blocks remaining in this partition          *\/$/;"	m	struct:__anon8	access:public
__anon9::OSAddr	./h/ucos/uCOS_II.H	/^    void   *OSAddr;                    \/* Pointer to the beginning address of the memory partition     *\/$/;"	m	struct:__anon9	access:public
__anon9::OSBlkSize	./h/ucos/uCOS_II.H	/^    INT32U  OSBlkSize;                 \/* Size (in bytes) of each memory block                         *\/$/;"	m	struct:__anon9	access:public
__anon9::OSFreeList	./h/ucos/uCOS_II.H	/^    void   *OSFreeList;                \/* Pointer to the beginning of the free list of memory blocks   *\/$/;"	m	struct:__anon9	access:public
__anon9::OSNBlks	./h/ucos/uCOS_II.H	/^    INT32U  OSNBlks;                   \/* Total number of blocks in the partition                      *\/$/;"	m	struct:__anon9	access:public
__anon9::OSNFree	./h/ucos/uCOS_II.H	/^    INT32U  OSNFree;                   \/* Number of memory blocks free                                 *\/$/;"	m	struct:__anon9	access:public
__anon9::OSNUsed	./h/ucos/uCOS_II.H	/^    INT32U  OSNUsed;                   \/* Number of memory blocks used                                 *\/$/;"	m	struct:__anon9	access:public
_inbyte	./bsp/xmodem.c	51;"	d	file:
_outbyte	./bsp/xmodem.c	50;"	d	file:
_start	./init/startup.s	/^_start:$/;"	l
aux_uart_isr	./bsp/uart.c	/^static void aux_uart_isr ( )$/;"	f	file:
buf	./usrApp/userApp.c	/^static INT8U buf[1024];$/;"	v	file:
check	./bsp/xmodem.c	/^static uint8_t check(int crc, const uint8_t *buf, int sz)$/;"	f	file:	signature:(int crc, const uint8_t *buf, int sz)
clz	./bsp/interrupts.c	23;"	d	file:
counter	./bsp/uart.c	/^static INT32U counter = 0;$/;"	v	file:
crc16_ccitt	./bsp/crc.c	/^uint16_t crc16_ccitt( const void *data, uint16_t number_of_bytes_in_data )$/;"	f	signature:( const void *data, uint16_t number_of_bytes_in_data )
crc8	./bsp/crc.c	/^uint8_t crc8( const uint8_t *data, uint16_t number_of_bytes_in_data )$/;"	f	signature:( const uint8_t *data, uint16_t number_of_bytes_in_data )
data_abort	./bsp/cpu.c	/^void data_abort( void )$/;"	f	signature:( void )
data_handler	./init/startup.s	/^data_handler:       .word data_abort$/;"	l
dcache_clean	./bsp/dma.c	/^static inline void dcache_clean(void)$/;"	f	file:	signature:(void)
dma_channel_reg	./bsp/uart.c	/^static DMA_t dma_channel_reg = $/;"	v	file:
dma_init	./bsp/dma.c	/^void dma_init( void )$/;"	f	signature:( void )
dma_init	./h/dma.h	/^void dma_init();$/;"	p	signature:()
dma_isr	./bsp/dma.c	/^void dma_isr( void )$/;"	f	signature:( void )
dma_transfer	./bsp/dma.c	/^void dma_transfer(INT32U channel, DMA_t* dmaCb, INT32U contr_status )$/;"	f	signature:(INT32U channel, DMA_t* dmaCb, INT32U contr_status )
dma_transfer	./h/dma.h	/^void dma_transfer(INT32U channel, DMA_t* dmaCb, INT32U contr_status );$/;"	p	signature:(INT32U channel, DMA_t* dmaCb, INT32U contr_status )
dummy	./bsp/uart.c	/^extern void dummy ( unsigned int );$/;"	p	file:	signature:( unsigned int )
dummy	./init/startup.s	/^dummy:$/;"	l
fifoCreate	./bsp/fifo.c	/^Fifo_t * fifoCreate( Fifo_t* pFifo, INT8U * pMem, INT32U size )$/;"	f	signature:( Fifo_t* pFifo, INT8U * pMem, INT32U size )
fifoCreate	./h/fifo.h	/^Fifo_t* fifoCreate( Fifo_t* pFifo, INT8U * pMem, INT32U size );$/;"	p	signature:( Fifo_t* pFifo, INT8U * pMem, INT32U size )
fifoEmpty	./bsp/fifo.c	/^void fifoEmpty( Fifo_t* pFifo )$/;"	f	signature:( Fifo_t* pFifo )
fifoEmpty	./h/fifo.h	/^void fifoEmpty( Fifo_t* pFifo );$/;"	p	signature:( Fifo_t* pFifo )
fifoGet	./bsp/fifo.c	/^INT32U fifoGet( Fifo_t* pFifo, INT8U * pMem, INT32U num )$/;"	f	signature:( Fifo_t* pFifo, INT8U * pMem, INT32U num )
fifoGet	./h/fifo.h	/^INT32U fifoGet( Fifo_t* pFifo, INT8U * pMem, INT32U num );$/;"	p	signature:( Fifo_t* pFifo, INT8U * pMem, INT32U num )
fifoPut	./bsp/fifo.c	/^INT32U fifoPut( Fifo_t* pFifo, INT8U* pMem, INT32U num )$/;"	f	signature:( Fifo_t* pFifo, INT8U* pMem, INT32U num )
fifoPut	./h/fifo.h	/^INT32U fifoPut( Fifo_t* pFifo, INT8U* pMem, INT32U num );$/;"	p	signature:( Fifo_t* pFifo, INT8U* pMem, INT32U num )
fiq	./bsp/cpu.c	/^void fiq( void )$/;"	f	signature:( void )
fiq_handler	./init/startup.s	/^fiq_handler:        .word fiq$/;"	l
flushinput	./bsp/xmodem.c	/^static void flushinput(void)$/;"	f	file:	signature:(void)
g_VectorTable	./bsp/interrupts.c	/^INTERRUPT_VECTOR g_VectorTable[BCM2835_INTC_TOTAL_IRQ];$/;"	v
hang	./init/startup.s	/^hang:$/;"	l
head	./h/fifo.h	/^    INT32U head;$/;"	m	struct:__anon15	access:public
hexstring	./bsp/uart.c	/^void hexstring ( unsigned int d )$/;"	f	signature:( unsigned int d )
hexstring	./h/uart.h	/^void hexstring ( unsigned int );$/;"	p	signature:( unsigned int )
hexstring_showstop	./bsp/uart.c	/^void hexstring_showstop ( unsigned int d )$/;"	f	signature:( unsigned int d )
hexstring_showstop	./h/uart.h	/^void hexstring_showstop ( unsigned int d );$/;"	p	signature:( unsigned int d )
hexstrings	./bsp/uart.c	/^void hexstrings ( unsigned int d )$/;"	f	signature:( unsigned int d )
hexstrings	./h/uart.h	/^void hexstrings ( unsigned int );$/;"	p	signature:( unsigned int )
initJTAG	./bsp/gpio.c	/^void initJTAG( void )$/;"	f	signature:( void )
initJTAG	./h/gpio.h	/^void initJTAG( void );$/;"	p	signature:( void )
int16_t	./bsp/crc.c	/^typedef INT16S int16_t;$/;"	t	file:
int16_t	./bsp/xmodem.c	/^typedef INT16S int16_t;$/;"	t	file:
int16_t	./h/xmodem.h	/^typedef INT16S int16_t;$/;"	t
int8_t	./bsp/crc.c	/^typedef INT8S int8_t; $/;"	t	file:
int8_t	./bsp/xmodem.c	/^typedef INT8S int8_t; $/;"	t	file:
int8_t	./h/xmodem.h	/^typedef INT8S int8_t; $/;"	t
intcRegs	./h/regs.h	/^static volatile INTC_REGS * const intcRegs = (INTC_REGS *) (BASE_INTC);$/;"	v
irqDisable	./bsp/interrupts.c	/^static void irqDisable() {$/;"	f	file:
irqEnable	./bsp/interrupts.c	/^static void irqEnable() {$/;"	f	file:
irq_handler	./init/startup.s	/^irq_handler:        .word OS_CPU_IRQ_ISR;@irqHandler to be modified$/;"	l
main	./bsp/xmodem.c	/^int main(void)$/;"	f	signature:(void)
main	./usrApp/main.c	/^void main()$/;"	f
memcpy	./h/ucos/includes.h	/^extern void *memcpy(void *destination,const void *source,unsigned int size);$/;"	p	signature:(void *destination,const void *source,unsigned int size)
memset	./h/ucos/includes.h	/^extern void *memset(void * m,int c,unsigned int size);$/;"	p	signature:(void * m,int c,unsigned int size)
os_q	./h/ucos/uCOS_II.H	/^typedef struct os_q {                   \/* QUEUE CONTROL BLOCK                                         *\/$/;"	s
os_q	./ucos/ucos_ii.h	/^typedef struct os_q {                   \/* QUEUE CONTROL BLOCK                                         *\/$/;"	s
os_q::OSQEnd	./h/ucos/uCOS_II.H	/^    void         **OSQEnd;              \/* Pointer to end   of queue data                              *\/$/;"	m	struct:os_q	access:public
os_q::OSQEnd	./ucos/ucos_ii.h	/^    void         **OSQEnd;              \/* Pointer to end   of queue data                              *\/$/;"	m	struct:os_q	access:public
os_q::OSQEntries	./h/ucos/uCOS_II.H	/^    INT16U         OSQEntries;          \/* Current number of entries in the queue                      *\/$/;"	m	struct:os_q	access:public
os_q::OSQEntries	./ucos/ucos_ii.h	/^    INT16U         OSQEntries;          \/* Current number of entries in the queue                      *\/$/;"	m	struct:os_q	access:public
os_q::OSQIn	./h/ucos/uCOS_II.H	/^    void         **OSQIn;               \/* Pointer to where next message will be inserted  in   the Q  *\/$/;"	m	struct:os_q	access:public
os_q::OSQIn	./ucos/ucos_ii.h	/^    void         **OSQIn;               \/* Pointer to where next message will be inserted  in   the Q  *\/$/;"	m	struct:os_q	access:public
os_q::OSQOut	./h/ucos/uCOS_II.H	/^    void         **OSQOut;              \/* Pointer to where next message will be extracted from the Q  *\/$/;"	m	struct:os_q	access:public
os_q::OSQOut	./ucos/ucos_ii.h	/^    void         **OSQOut;              \/* Pointer to where next message will be extracted from the Q  *\/$/;"	m	struct:os_q	access:public
os_q::OSQPtr	./h/ucos/uCOS_II.H	/^    struct os_q   *OSQPtr;              \/* Link to next queue control block in list of free blocks     *\/$/;"	m	struct:os_q	typeref:struct:os_q::os_q	access:public
os_q::OSQPtr	./ucos/ucos_ii.h	/^    struct os_q   *OSQPtr;              \/* Link to next queue control block in list of free blocks     *\/$/;"	m	struct:os_q	typeref:struct:os_q::os_q	access:public
os_q::OSQSize	./h/ucos/uCOS_II.H	/^    INT16U         OSQSize;             \/* Size of queue (maximum number of entries)                   *\/$/;"	m	struct:os_q	access:public
os_q::OSQSize	./ucos/ucos_ii.h	/^    INT16U         OSQSize;             \/* Size of queue (maximum number of entries)                   *\/$/;"	m	struct:os_q	access:public
os_q::OSQStart	./h/ucos/uCOS_II.H	/^    void         **OSQStart;            \/* Pointer to start of queue data                              *\/$/;"	m	struct:os_q	access:public
os_q::OSQStart	./ucos/ucos_ii.h	/^    void         **OSQStart;            \/* Pointer to start of queue data                              *\/$/;"	m	struct:os_q	access:public
os_tcb	./h/ucos/uCOS_II.H	/^typedef struct os_tcb {$/;"	s
os_tcb	./ucos/ucos_ii.h	/^typedef struct os_tcb {$/;"	s
os_tcb::OSTCBBitX	./h/ucos/uCOS_II.H	/^    INT8U          OSTCBBitX;          \/* Bit mask to access bit position in ready table               *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBBitX	./ucos/ucos_ii.h	/^    INT8U          OSTCBBitX;          \/* Bit mask to access bit position in ready table               *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBBitY	./h/ucos/uCOS_II.H	/^    INT8U          OSTCBBitY;          \/* Bit mask to access bit position in ready group               *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBBitY	./ucos/ucos_ii.h	/^    INT8U          OSTCBBitY;          \/* Bit mask to access bit position in ready group               *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBDelReq	./h/ucos/uCOS_II.H	/^    INT8U        OSTCBDelReq;        \/* Indicates whether a task needs to delete itself              *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBDelReq	./ucos/ucos_ii.h	/^    BOOLEAN        OSTCBDelReq;        \/* Indicates whether a task needs to delete itself              *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBDly	./h/ucos/uCOS_II.H	/^    INT16U         OSTCBDly;           \/* Nbr ticks to delay task or, timeout waiting for event        *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBDly	./ucos/ucos_ii.h	/^    INT16U         OSTCBDly;           \/* Nbr ticks to delay task or, timeout waiting for event        *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBEventPtr	./h/ucos/uCOS_II.H	/^    OS_EVENT      *OSTCBEventPtr;      \/* Pointer to event control block                               *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBEventPtr	./ucos/ucos_ii.h	/^    OS_EVENT      *OSTCBEventPtr;      \/* Pointer to event control block                               *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBExtPtr	./h/ucos/uCOS_II.H	/^    void          *OSTCBExtPtr;        \/* Pointer to user definable data for TCB extension             *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBExtPtr	./ucos/ucos_ii.h	/^    void          *OSTCBExtPtr;        \/* Pointer to user definable data for TCB extension             *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBFlagNode	./h/ucos/uCOS_II.H	/^    OS_FLAG_NODE  *OSTCBFlagNode;      \/* Pointer to event flag node                                   *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBFlagNode	./ucos/ucos_ii.h	/^    OS_FLAG_NODE  *OSTCBFlagNode;      \/* Pointer to event flag node                                   *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBFlagsRdy	./h/ucos/uCOS_II.H	/^    OS_FLAGS       OSTCBFlagsRdy;      \/* Event flags that made task ready to run                      *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBFlagsRdy	./ucos/ucos_ii.h	/^    OS_FLAGS       OSTCBFlagsRdy;      \/* Event flags that made task ready to run                      *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBId	./h/ucos/uCOS_II.H	/^    INT16U         OSTCBId;            \/* Task ID (0..65535)                                           *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBId	./ucos/ucos_ii.h	/^    INT16U         OSTCBId;            \/* Task ID (0..65535)                                           *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBMsg	./h/ucos/uCOS_II.H	/^    void          *OSTCBMsg;           \/* Message received from OSMboxPost() or OSQPost()              *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBMsg	./ucos/ucos_ii.h	/^    void          *OSTCBMsg;           \/* Message received from OSMboxPost() or OSQPost()              *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBNext	./h/ucos/uCOS_II.H	/^    struct os_tcb *OSTCBNext;          \/* Pointer to next     TCB in the TCB list                      *\/$/;"	m	struct:os_tcb	typeref:struct:os_tcb::os_tcb	access:public
os_tcb::OSTCBNext	./ucos/ucos_ii.h	/^    struct os_tcb *OSTCBNext;          \/* Pointer to next     TCB in the TCB list                      *\/$/;"	m	struct:os_tcb	typeref:struct:os_tcb::os_tcb	access:public
os_tcb::OSTCBOpt	./h/ucos/uCOS_II.H	/^    INT16U         OSTCBOpt;           \/* Task options as passed by OSTaskCreateExt()                  *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBOpt	./ucos/ucos_ii.h	/^    INT16U         OSTCBOpt;           \/* Task options as passed by OSTaskCreateExt()                  *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBPrev	./h/ucos/uCOS_II.H	/^    struct os_tcb *OSTCBPrev;          \/* Pointer to previous TCB in the TCB list                      *\/$/;"	m	struct:os_tcb	typeref:struct:os_tcb::os_tcb	access:public
os_tcb::OSTCBPrev	./ucos/ucos_ii.h	/^    struct os_tcb *OSTCBPrev;          \/* Pointer to previous TCB in the TCB list                      *\/$/;"	m	struct:os_tcb	typeref:struct:os_tcb::os_tcb	access:public
os_tcb::OSTCBPrio	./h/ucos/uCOS_II.H	/^    INT8U          OSTCBPrio;          \/* Task priority (0 == highest, 63 == lowest)                   *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBPrio	./ucos/ucos_ii.h	/^    INT8U          OSTCBPrio;          \/* Task priority (0 == highest, 63 == lowest)                   *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBStat	./h/ucos/uCOS_II.H	/^    INT8U          OSTCBStat;          \/* Task status                                                  *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBStat	./ucos/ucos_ii.h	/^    INT8U          OSTCBStat;          \/* Task status                                                  *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBStkBottom	./h/ucos/uCOS_II.H	/^    OS_STK        *OSTCBStkBottom;     \/* Pointer to bottom of stack                                   *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBStkBottom	./ucos/ucos_ii.h	/^    OS_STK        *OSTCBStkBottom;     \/* Pointer to bottom of stack                                   *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBStkPtr	./h/ucos/uCOS_II.H	/^    OS_STK        *OSTCBStkPtr;        \/* Pointer to current top of stack                              *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBStkPtr	./ucos/ucos_ii.h	/^    OS_STK        *OSTCBStkPtr;        \/* Pointer to current top of stack                              *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBStkSize	./h/ucos/uCOS_II.H	/^    INT32U         OSTCBStkSize;       \/* Size of task stack (in number of stack elements)             *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBStkSize	./ucos/ucos_ii.h	/^    INT32U         OSTCBStkSize;       \/* Size of task stack (in number of stack elements)             *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBX	./h/ucos/uCOS_II.H	/^    INT8U          OSTCBX;             \/* Bit position in group  corresponding to task priority (0..7) *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBX	./ucos/ucos_ii.h	/^    INT8U          OSTCBX;             \/* Bit position in group  corresponding to task priority (0..7) *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBY	./h/ucos/uCOS_II.H	/^    INT8U          OSTCBY;             \/* Index into ready table corresponding to task priority        *\/$/;"	m	struct:os_tcb	access:public
os_tcb::OSTCBY	./ucos/ucos_ii.h	/^    INT8U          OSTCBY;             \/* Index into ready table corresponding to task priority        *\/$/;"	m	struct:os_tcb	access:public
pFifo	./h/fifo.h	/^    INT8U* pFifo;$/;"	m	struct:__anon15	access:public
pParam	./h/interrupts.h	/^	void 				   *pParam;				\/\/\/< A special parameter that the use can pass to the IRQ.$/;"	m	struct:__anon3	access:public
pfnHandler	./h/interrupts.h	/^	FN_INTERRUPT_HANDLER 	pfnHandler;			\/\/\/< Function that handles this IRQn$/;"	m	struct:__anon3	access:public
portTIMER_BASE	./h/regs.h	43;"	d
prefetch_abort	./bsp/cpu.c	/^void prefetch_abort( void )$/;"	f	signature:( void )
prefetch_handler	./init/startup.s	/^prefetch_handler:   .word prefetch_abort$/;"	l
rByte	./bsp/uart.c	/^static INT8U rByte;$/;"	v	file:
reset	./init/startup.s	/^reset:$/;"	l
reset_handler	./init/startup.s	/^reset_handler:      .word reset$/;"	l
showstop	./bsp/showstop.c	/^void showstop( INT32U ssCode )$/;"	f	signature:( INT32U ssCode )
showstop	./h/showstop.h	/^void showstop( INT32U ssCode );$/;"	p	signature:( INT32U ssCode )
size	./h/fifo.h	/^    INT32U size;$/;"	m	struct:__anon15	access:public
stubHandler	./bsp/interrupts.c	/^static void stubHandler(int nIRQ, void *pParam) {$/;"	f	file:	signature:(int nIRQ, void *pParam)
swi	./bsp/cpu.c	/^void swi( void )$/;"	f	signature:( void )
swi_handler	./init/startup.s	/^swi_handler:        .word swi;@to be modified$/;"	l
tByte	./bsp/uart.c	/^static INT8U tByte;$/;"	v	file:
tail	./h/fifo.h	/^    INT32U tail;$/;"	m	struct:__anon15	access:public
tickISR	./bsp/timer.c	/^static void tickISR()$/;"	f	file:
timerRegs	./h/regs.h	/^static volatile TIMER_REGS * const timerRegs = (TIMER_REGS *) (portTIMER_BASE);$/;"	v
timer_init	./bsp/timer.c	/^void timer_init( void )$/;"	f	signature:( void )
timer_init	./h/timer.h	/^void timer_init( void );$/;"	p	signature:( void )
uartRecv	./bsp/uart.c	/^INT32U uartRecv( INT32U uartDev, $/;"	f	signature:( INT32U uartDev, INT8U * recBuf, INT32U num, INT32U timeout )
uartRecvFifo	./bsp/uart.c	/^static Fifo_t uartRecvFifo;$/;"	v	file:
uartTransFifo	./bsp/uart.c	/^static Fifo_t uartTransFifo;$/;"	v	file:
uartTransIntrFlag	./bsp/uart.c	/^static INT32U uartTransIntrFlag;$/;"	v	file:
uartTransmit	./bsp/uart.c	/^INT32U uartTransmit( INT32U uartDev, $/;"	f	signature:( INT32U uartDev, INT8U * transBuf, INT32U transNum, INT32U timeout )
uart_all_reg	./h/uart.h	/^    INT32U uart_all_reg[12];$/;"	m	struct:__anon1	access:public
uart_close	./bsp/uart.c	/^INT32U uart_close( INT32U uartNum )$/;"	f	signature:( INT32U uartNum )
uart_flush	./bsp/uart.c	/^void uart_flush ( void )$/;"	f	signature:( void )
uart_flush	./h/uart.h	/^void uart_flush ( void );$/;"	p	signature:( void )
uart_init	./bsp/uart.c	/^void uart_init ( void )$/;"	f	signature:( void )
uart_init	./h/uart.h	/^void uart_init ( void );$/;"	p	signature:( void )
uart_lcr	./bsp/uart.c	/^unsigned int uart_lcr ( void )$/;"	f	signature:( void )
uart_lcr	./h/uart.h	/^unsigned int uart_lcr ( void );$/;"	p	signature:( void )
uart_open	./bsp/uart.c	/^INT32U uart_open( INT32U uartNum )$/;"	f	signature:( INT32U uartNum )
uart_recv	./bsp/uart.c	/^unsigned int uart_recv ( void )$/;"	f	signature:( void )
uart_recv	./h/uart.h	/^unsigned int uart_recv ( void );$/;"	p	signature:( void )
uart_reg_t	./h/uart.h	/^} uart_reg_t;$/;"	t	typeref:struct:__anon1
uart_send	./bsp/uart.c	/^void uart_send ( unsigned int c )$/;"	f	signature:( unsigned int c )
uart_send	./h/uart.h	/^void uart_send ( unsigned int );$/;"	p	signature:( unsigned int )
uart_string	./bsp/uart.c	/^void uart_string (char* s)$/;"	f	signature:(char* s)
uart_string	./h/uart.h	/^void uart_string(char *);$/;"	p	signature:(char *)
uart_string_dma	./bsp/uart.c	/^void uart_string_dma(char* s)$/;"	f	signature:(char* s)
uart_string_dma	./h/uart.h	/^void uart_string_dma(char* s);$/;"	p	signature:(char* s)
uart_string_showstop	./bsp/uart.c	/^void uart_string_showstop (char* s)$/;"	f	signature:(char* s)
uart_string_showstop	./h/uart.h	/^void uart_string_showstop (char* s);$/;"	p	signature:(char* s)
uint16_t	./bsp/crc.c	/^typedef INT16U uint16_t; $/;"	t	file:
uint16_t	./bsp/xmodem.c	/^typedef INT16U uint16_t; $/;"	t	file:
uint16_t	./h/xmodem.h	/^typedef INT16U uint16_t; $/;"	t
uint8_t	./bsp/crc.c	/^typedef INT8U uint8_t;$/;"	t	file:
uint8_t	./bsp/xmodem.c	/^typedef INT8U uint8_t;$/;"	t	file:
uint8_t	./h/xmodem.h	/^typedef INT8U uint8_t;$/;"	t
undefined_handler	./init/startup.s	/^undefined_handler:  .word undefined_instruction$/;"	l
undefined_instruction	./bsp/cpu.c	/^void undefined_instruction( void )$/;"	f	signature:( void )
unused	./bsp/cpu.c	/^void unused ( void )$/;"	f	signature:( void )
unused_handler	./init/startup.s	/^unused_handler:     .word unused$/;"	l
userApp1	./usrApp/main.c	/^extern void userApp1(void *);$/;"	p	file:	signature:(void *)
userApp1	./usrApp/userApp.c	/^void userApp1(void * args)$/;"	f	signature:(void * args)
userApp2	./usrApp/main.c	/^extern void userApp2(void *);$/;"	p	file:	signature:(void *)
userApp2	./usrApp/userApp.c	/^void userApp2(void * args)$/;"	f	signature:(void * args)
userAppTaskStk1	./usrApp/main.c	/^OS_STK  userAppTaskStk1[4000];$/;"	v
userAppTaskStk2	./usrApp/main.c	/^OS_STK  userAppTaskStk2[4000];$/;"	v
xmodemReceive	./bsp/xmodem.c	/^int8_t xmodemReceive(uint8_t *dest, uint16_t dest_size)$/;"	f	signature:(uint8_t *dest, uint16_t dest_size)
xmodemReceive	./h/xmodem.h	/^int8_t xmodemReceive(uint8_t *dest, uint16_t dest_size);$/;"	p	signature:(uint8_t *dest, uint16_t dest_size)
xmodemTransmit	./bsp/xmodem.c	/^int8_t xmodemTransmit(uint8_t *src, uint16_t src_size)$/;"	f	signature:(uint8_t *src, uint16_t src_size)
xmodemTransmit	./h/xmodem.h	/^int8_t xmodemTransmit(uint8_t *src, uint16_t src_size);$/;"	p	signature:(uint8_t *src, uint16_t src_size)
zero_loop	./init/startup.s	/^zero_loop:$/;"	l
